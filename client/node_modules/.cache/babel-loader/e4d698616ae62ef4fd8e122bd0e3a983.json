{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    questions,\n    setQuestions,\n    message,\n    setMessage,\n    color,\n    setColor,\n    wrightAnswer,\n    setWrightAnswer,\n    score,\n    setScore,\n    newQuestion,\n    setNewQuestion,\n    gameOver,\n    setGameOver,\n    g,\n    setG\n  } = context;\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  useEffect(() => {\n    seconds === 16 && setSeconds(0);\n    seconds === 16 && setNewQuestion(true);\n    seconds <= 15 && setNewQuestion(false);\n    message && setSeconds(0);\n  }, [seconds]);\n  useEffect(() => {\n    newQuestion && fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=medium\").then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random() * 50)]));\n    setMessage(\"\");\n    setColor(\"\");\n    setWrightAnswer(\"\");\n  }, [newQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionTimer, \"5gwFyNCOyzTGEbtLaS7PZsvBTpE=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"names":["React","useEffect","useState","useContext","MyContext","QuestionTimer","context","questions","setQuestions","message","setMessage","color","setColor","wrightAnswer","setWrightAnswer","score","setScore","newQuestion","setNewQuestion","gameOver","setGameOver","g","setG","seconds","setSeconds","incrementSeconds","prev","setInterval","fetch","then","res","json","data","Math","floor","random","fontSize","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;AACA,QAAM;AACJG,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,eARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,QAVI;AAWJC,IAAAA,WAXI;AAYJC,IAAAA,cAZI;AAaJC,IAAAA,QAbI;AAcJC,IAAAA,WAdI;AAeJC,IAAAA,CAfI;AAgBJC,IAAAA;AAhBI,MAiBFhB,OAjBJ;AAkBA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASwB,gBAAT,GAA4B;AAC1BD,MAAAA,UAAU,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;AACD;;AACDC,IAAAA,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;AACD,GALQ,EAKN,EALM,CAAT;AAOAxB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B;AACAD,IAAAA,OAAO,KAAK,EAAZ,IAAkBL,cAAc,CAAC,IAAD,CAAhC;AACAK,IAAAA,OAAO,IAAI,EAAX,IAAiBL,cAAc,CAAC,KAAD,CAA/B;AACAT,IAAAA,OAAO,IAAIe,UAAU,CAAC,CAAD,CAArB;AACD,GALQ,EAKN,CAACD,OAAD,CALM,CAAT;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,IACTW,KAAK,CACH,qEADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAUxB,YAAY,CAACwB,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAL,CAJ9B,CADF;AAOAzB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAXQ,EAWN,CAACG,WAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,gBAAuBM;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,KAAK,EAAE;AAAEa,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1DD;;GAAMhC,a;;KAAAA,a;AA4DN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nconst QuestionTimer = () => {\n  const context = useContext(MyContext);\n  const {\n    questions,\n    setQuestions,\n    message,\n    setMessage,\n    color,\n    setColor,\n    wrightAnswer,\n    setWrightAnswer,\n    score,\n    setScore,\n    newQuestion,\n    setNewQuestion,\n    gameOver,\n    setGameOver,\n    g,\n    setG,\n  } = context;\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds((prev) => prev + 1);\n    }\n    setInterval(incrementSeconds, 1000);\n  }, []);\n\n  useEffect(() => {\n    seconds === 16 && setSeconds(0);\n    seconds === 16 && setNewQuestion(true);\n    seconds <= 15 && setNewQuestion(false);\n    message && setSeconds(0);\n  }, [seconds]);\n\n  useEffect(() => {\n    newQuestion &&\n      fetch(\n        \"https://the-trivia-api.com/api/questions?limit=50&difficulty=medium\"\n      )\n        .then((res) => res.json())\n        .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n\n    setMessage(\"\");\n    setColor(\"\");\n    setWrightAnswer(\"\");\n  }, [newQuestion]);\n\n  return (\n    <div className=\"question-timer\">\n      <span className=\"sec\">{seconds}</span>\n\n      <span style={{ fontSize: \"20px\", paddingTop: \"20px\" }}>\n        U have 15 secs for each Question !\n      </span>\n    </div>\n  );\n};\n\nexport default QuestionTimer;\n"]},"metadata":{},"sourceType":"module"}