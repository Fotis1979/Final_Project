{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from '../../../hooks/arrayRandomize';\nimport '../../../styling/questionBodyWithTime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const [indexCounter, setIndexCounter] = useState(0);\n  const context = useContext(MyContext);\n  const {\n    allAnswers,\n    questions,\n    question,\n    setQuestion,\n    setQuestions,\n    incorrect,\n    setRandomAnswers,\n    randomAnswers,\n    correctAnswer,\n    setCorrectAnswer,\n    newQ,\n    questionArr,\n    setQuestionArr,\n    color,\n    setNewQ,\n    lock,\n    setLock,\n    setColor,\n    results,\n    loadng,\n    eror\n  } = context;\n  allAnswers && console.log(allAnswers);\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    setColor(\"\");\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  console.log(rightAnswer[indexCounter]); // console.log(indexCounter);\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  const LockButtons = () => {\n    color ? setLock(true) : setLock(false);\n  };\n\n  useEffect(() => {\n    LockButtons();\n  }, [color]);\n  console.log(\"answers are :\", answers);\n  console.log(rightAnswer);\n  questions && console.log(questions[indexCounter].correctAnswer);\n\n  const testHandler = e => {\n    console.log(e.target.value);\n\n    if (e.target.value === rightAnswer[indexCounter]) {\n      console.log(\"correct\");\n      setColor(\"green\"); // e.target.style.backgroundColor = \"green\";\n    } else {\n      // e.target.style.backgroundColor = \"red\";\n      setColor(\"red\");\n      console.log(\"wrong\");\n    }\n  };\n\n  results && console.log(questions[indexCounter].category);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: el,\n              onClick: lock === false ? e => testHandler(e) : undefined,\n              className: \"answers-btn\",\n              style: {\n                backgroundColor: `${color}`\n              },\n              children: index + 1 + \".\" + el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), questions && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"questions\",\n      children: [questions.question, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"LEaBImtviu9hhOH5w7N7kp1I0sY=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","QuestionBody","indexCounter","setIndexCounter","context","allAnswers","questions","question","setQuestion","setQuestions","incorrect","setRandomAnswers","randomAnswers","correctAnswer","setCorrectAnswer","newQ","questionArr","setQuestionArr","color","setNewQ","lock","setLock","setColor","results","loadng","eror","console","log","questionArray","map","item","wrongAnswers","incorrectAnswers","rightAnswer","nextHandler","prevIndexCounter","answers","push","el","LockButtons","testHandler","e","target","value","category","index","undefined","backgroundColor"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from '../../../hooks/arrayRandomize'\nimport '../../../styling/questionBodyWithTime.css'\n\n\nconst QuestionBody = () => {\n\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  const context = useContext(MyContext);\n  const {\n    allAnswers, questions, question,\n    setQuestion, setQuestions, incorrect, setRandomAnswers, randomAnswers, correctAnswer, setCorrectAnswer, newQ, questionArr, setQuestionArr, color, setNewQ,lock,setLock,setColor,results,loadng, eror\n  } = context;\n\n  \n\n  allAnswers && console.log(allAnswers)\n\n\n  const questionArray = results.map((item) => item.question)\n  const wrongAnswers = results.map((item) => item.incorrectAnswers);\n  const rightAnswer = results.map((item) => item.correctAnswer);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n\n\n  const nextHandler = () => {\n    // console.log(\"first\");\nsetColor(\"\")\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n    \n  };\n  console.log(rightAnswer[indexCounter]);\n  // console.log(indexCounter);\n\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n  \n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\nconst LockButtons = () => {\n  color ? setLock(true) : setLock(false);\n}; \n \nuseEffect(() => {\n  LockButtons();\n}, [color]);\n\n\n  console.log(\"answers are :\", answers);\n  console.log(rightAnswer);\n\n\n  questions && console.log(questions[indexCounter].correctAnswer);\n\n\n\n  const testHandler = (e) => {\n    console.log(e.target.value);\n    if (e.target.value === rightAnswer[indexCounter]) {\n      console.log(\"correct\");\n      setColor(\"green\")\n      // e.target.style.backgroundColor = \"green\";\n    } else {\n      // e.target.style.backgroundColor = \"red\";\n      setColor(\"red\")\n      console.log(\"wrong\");\n    }\n  };\n  results && console.log(questions[indexCounter].category);\n\n  return (\n    <main>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {randomAnswers.map((el, index) => (\n              <div className=\"align-items\">\n             <button \n                  value={el}\n                  onClick={lock === false ? (e) => testHandler(e) : undefined}\n                  className=\"answers-btn\"\n                  style={{ backgroundColor: `${color}` }}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          <button onClick={nextHandler}>next</button>\n        </header>\n      </div>\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      <Timer />\n      <Counter />\n      {/* { questions && <p>{questions}</p> } */}\n\n      {questions && <p className=\"questions\">{questions.question} </p>}\n\n    </main>\n\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}