{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav from \"../../pages/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 && nav(\"/\");\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]); // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), (hints === 1 || hints === 2) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Counter\",\n      onClick: () => wrongAnswers[indexCounter + 1].length > 1 && wrongAnswers[indexCounter + 1].pop() && setHints(prev => prev - 1),\n      children: hints === 2 ? \"DoubleClick for 50/50 CHANCHE\" : \"useHint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected,\n              children: index + 1 + \".\" + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"PD/zbO1Gctn6BpHNVvaJ7DHZgTo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useNavigate","useContext","useState","useEffect","arrayRandomize","Rewards","Nav","QuestionBody","context","loading","number","setNumber","eror","hints","setHints","results","email","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","questionArray","map","item","question","wrongAnswers","incorrectAnswers","rightAnswer","correctAnswer","nav","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","el","length","pop","prev","index"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\n\nimport Nav from \"../../pages/Nav\";\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore,\n  } = context;\n\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  const questionArray = results.map((item) => item.question);\n  const wrongAnswers = results.map((item) => item.incorrectAnswers);\n  const rightAnswer = results.map((item) => item.correctAnswer);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n\n  indexCounter === number - 1 && nav(\"/\");\n\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <div>\n      <Nav2 />\n      <Rewards />\n\n      {(hints === 1 || hints === 2) && (\n        <button\n          className=\"Counter\"\n          onClick={() =>\n            wrongAnswers[indexCounter + 1].length > 1 &&\n            wrongAnswers[indexCounter + 1].pop() &&\n            setHints((prev) => prev - 1)\n          }\n        >\n          {hints === 2 ? \"DoubleClick for 50/50 CHANCHE\" : \"useHint\"}\n        </button>\n      )}\n    <p>{email}</p> \n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {randomAnswers.map((el, index) => (\n              <div key={index} className=\"align-items\">\n                <button\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el)}\n                  disabled={selected}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          <button onClick={nextHandler}>next</button>\n        </header>\n      </div>\n\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      {/* <Timer />\n      <Counter /> */}\n      {/* { questions && <p>{questions}</p> } */}\n    </div>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}