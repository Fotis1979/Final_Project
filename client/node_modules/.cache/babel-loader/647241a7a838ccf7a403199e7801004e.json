{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\components\\\\singleplayer\\\\question\\\\QuetsionBodyWithoutTime.jsx\",\n    _s = $RefreshSig$();\n\nimport MyContext from '../../../context/MyContext';\nimport Counter from './Counter';\nimport QuestionCounter from './QuestionCounter';\nimport QuestionTimer from './QuestionTimer';\nimport Timer from './Timer';\nimport { useContext, useState, useEffect } from 'react';\nimport arrayRandomize from '../../../hooks/arrayRandomize';\nimport '../../../styling/questionBodyWithTime.css';\nimport Rewards from '../rewards/Rewards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return 'select';else if (selected === i && selected !== rightAnswer[indexCounter]) return 'wrong';else if (i === rightAnswer[indexCounter]) return 'select';\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError('Please select an option first');\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  console.log(rightAnswer[indexCounter]); // console.log(indexCounter);\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]); //   useEffect(() => {\n  //     answers.sort(() => 0.5 - Math.random())\n  // },[indexCounter])\n\n  console.log(answers);\n  console.log('answers are :', answers);\n  console.log(randomAnswers);\n  console.log(rightAnswer);\n  console.log(results[indexCounter].correctAnswer); // const testHandler = (e) => {\n  //   console.log(e.target.value);\n  //   if (e.target.value === rightAnswer[indexCounter]) {\n  //     console.log(\"correct\");\n  //     setColor(\"green\");\n  //     // e.target.style.backgroundColor = \"green\";\n  //   } else {\n  //     // e.target.style.backgroundColor = \"red\";\n  //     setColor(\"red\");\n  //     console.log(\"wrong\");\n  //   }\n  // };\n\n  console.log(results[indexCounter].category); // const LockButtons = () => {\n  //   color ? setLock(true) : setLock(false);\n  // };\n  // useEffect(() => {\n  //   LockButtons();\n  // }, [color]);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 22\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              name: el,\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected //onClick={(e) => testHandler(e)}\n              // className=\"answers-btn\"\n              //  style={{ backgroundColor: `${color}` }}\n              ,\n              children: index + 1 + '.' + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionBody, \"BA4384udARwxXUJJju118ZTwXUA=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","Rewards","QuestionBody","context","loading","eror","results","allAnswers","questions","lock","setLock","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","questionArray","map","item","question","wrongAnswers","incorrectAnswers","rightAnswer","correctAnswer","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","console","log","answers","push","el","category","index"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/components/singleplayer/question/QuetsionBodyWithoutTime.jsx"],"sourcesContent":["import MyContext from '../../../context/MyContext';\r\nimport Counter from './Counter';\r\nimport QuestionCounter from './QuestionCounter';\r\nimport QuestionTimer from './QuestionTimer';\r\nimport Timer from './Timer';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport arrayRandomize from '../../../hooks/arrayRandomize';\r\nimport '../../../styling/questionBodyWithTime.css';\r\nimport Rewards from '../rewards/Rewards';\r\n\r\nconst QuestionBody = () => {\r\n\tconst context = useContext(MyContext);\r\n\tconst {\r\n\t\tloading,\r\n\t\teror,\r\n\t\tresults,\r\n\t\tallAnswers,\r\n\t\tquestions,\r\n\t\tlock,\r\n\t\tsetLock,\r\n\t\trandomAnswers,\r\n\t\tsetRandomAnswers,\r\n\t\tscore,\r\n\t\tsetScore,\r\n\t} = context;\r\n\tconst [error, setError] = useState(false);\r\n\tconst [selected, setSelected] = useState();\r\n\tconst [indexCounter, setIndexCounter] = useState(0);\r\n\r\n\tconst questionArray = results.map((item) => item.question);\r\n\tconst wrongAnswers = results.map((item) => item.incorrectAnswers);\r\n\tconst rightAnswer = results.map((item) => item.correctAnswer);\r\n\r\n\t// console.log(questionArray);\r\n\t// console.log(wrongAnswers);\r\n\t// console.log(rightAnswer);\r\n\r\n\tconst handleSelect = (i) => {\r\n\t\tif (selected === i && selected === rightAnswer[indexCounter])\r\n\t\t\treturn 'select';\r\n\t\telse if (selected === i && selected !== rightAnswer[indexCounter])\r\n\t\t\treturn 'wrong';\r\n\t\telse if (i === rightAnswer[indexCounter]) return 'select';\r\n\t};\r\n\tconst handleCheck = (i) => {\r\n\t\tsetSelected(i);\r\n\t\tif (i === rightAnswer[indexCounter]) setScore(score + 10);\r\n\t\tsetError(false);\r\n\t};\r\n\r\n\tconst nextHandler = () => {\r\n\t\t// console.log(\"first\");\r\n\t\tif (selected) {\r\n\t\t\tsetSelected();\r\n\t\t} else setError('Please select an option first');\r\n\r\n\t\tsetIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\r\n\t};\r\n\tconsole.log(rightAnswer[indexCounter]);\r\n\t// console.log(indexCounter);\r\n\r\n\tconst answers = [];\r\n\tanswers.push(rightAnswer[indexCounter]);\r\n\twrongAnswers[indexCounter].map((el) => answers.push(el));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRandomAnswers(arrayRandomize(answers));\r\n\t}, [indexCounter]);\r\n\r\n\t//   useEffect(() => {\r\n\r\n\t//     answers.sort(() => 0.5 - Math.random())\r\n\t// },[indexCounter])\r\n\r\n\tconsole.log(answers);\r\n\tconsole.log('answers are :', answers);\r\n\tconsole.log(randomAnswers);\r\n\tconsole.log(rightAnswer);\r\n\r\n\tconsole.log(results[indexCounter].correctAnswer);\r\n\r\n\t// const testHandler = (e) => {\r\n\t//   console.log(e.target.value);\r\n\t//   if (e.target.value === rightAnswer[indexCounter]) {\r\n\t//     console.log(\"correct\");\r\n\t//     setColor(\"green\");\r\n\t//     // e.target.style.backgroundColor = \"green\";\r\n\t//   } else {\r\n\t//     // e.target.style.backgroundColor = \"red\";\r\n\t//     setColor(\"red\");\r\n\r\n\t//     console.log(\"wrong\");\r\n\t//   }\r\n\t// };\r\n\tconsole.log(results[indexCounter].category);\r\n\r\n\t// const LockButtons = () => {\r\n\t//   color ? setLock(true) : setLock(false);\r\n\t// };\r\n\t// useEffect(() => {\r\n\t//   LockButtons();\r\n\t// }, [color]);\r\n\r\n\tif (loading) return <p>loading ..</p>;\r\n\tif (eror) return <p>{eror}</p>;\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<Rewards />\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<header className='App-header'>\r\n\t\t\t\t\t<div className='quest-sec'>\r\n\t\t\t\t\t\tQ{indexCounter + 1} . {questionArray[indexCounter]}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ans-sec'>\r\n\t\t\t\t\t\t{randomAnswers.map((el, index) => (\r\n\t\t\t\t\t\t\t<div className='align-items'>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tname={el}\r\n\t\t\t\t\t\t\t\t\tvalue={el}\r\n\t\t\t\t\t\t\t\t\tclassName={`singleOption  ${selected && handleSelect(el)}`}\r\n\t\t\t\t\t\t\t\t\tkey={el}\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleCheck(el)}\r\n\t\t\t\t\t\t\t\t\tdisabled={selected}\r\n\t\t\t\t\t\t\t\t\t//onClick={(e) => testHandler(e)}\r\n\t\t\t\t\t\t\t\t\t// className=\"answers-btn\"\r\n\t\t\t\t\t\t\t\t\t//  style={{ backgroundColor: `${color}` }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{index + 1 + '.' + el}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t{/* <button\r\n                  value={el}\r\n                  onClick={lock === false ? (e) => testHandler(e) : undefined}\r\n                  className=\"answers-btn\"\r\n                  style={{ backgroundColor: `${color}` }}\r\n                ></button> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button onClick={nextHandler}>next</button>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t\t<QuestionCounter />\r\n\t\t\t{/* <QuestionTimer /> */}\r\n\t\t\t{/* <Timer /> */}\r\n\r\n\t\t\t<Counter />\r\n\r\n\t\t\t{/* { questions && <p>{questions}</p> } */}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default QuestionBody;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}