{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\components\\\\singleplayer\\\\question\\\\QuestionBodyNoTime.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport MyContext from '../../../context/MyContext';\nimport arrayRandomize from '../../../hooks/arrayRandomize';\nimport Nav from '../../pages/Nav';\nimport Counter from './Counter';\nimport Timer from './Timer';\nimport QuestionCounter from './QuestionCounter';\nimport QuestionTimer from './QuestionTimer';\nimport Rewards from '../rewards/Rewards';\nimport '../../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 && nav('/');\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return 'select';else if (selected === i && selected !== rightAnswer[indexCounter]) return 'wrong';else if (i === rightAnswer[indexCounter]) return 'select';\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError('Please select an option first');\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]); // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 22\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), (hints === 1 || hints === 2) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Counter\",\n      onClick: () => wrongAnswers[indexCounter + 1].length > 1 && wrongAnswers[indexCounter + 1].pop() && setHints(prev => prev - 1),\n      children: hints === 2 ? 'DoubleClick for 50/50 CHANCHE' : 'useHint'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QA--section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions--section\",\n        children: [\"Question \", indexCounter + 1, \" : \", questionArray[indexCounter]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers--section\",\n        children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-items\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: el,\n            className: `singleOption  ${selected && handleSelect(el)}`,\n            onClick: () => handleCheck(el),\n            disabled: selected,\n            children: index + 1 + '.' + el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextHandler,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionBody, \"PD/zbO1Gctn6BpHNVvaJ7DHZgTo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["useContext","useState","useEffect","useNavigate","MyContext","arrayRandomize","Nav","Counter","Timer","QuestionCounter","QuestionTimer","Rewards","QuestionBody","context","loading","number","setNumber","eror","hints","setHints","results","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","questionArray","map","item","question","wrongAnswers","incorrectAnswers","rightAnswer","correctAnswer","nav","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","el","length","pop","prev","index"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport MyContext from '../../../context/MyContext';\r\nimport arrayRandomize from '../../../hooks/arrayRandomize';\r\n\r\nimport Nav from '../../pages/Nav';\r\n\r\nimport Counter from './Counter';\r\nimport Timer from './Timer';\r\nimport QuestionCounter from './QuestionCounter';\r\nimport QuestionTimer from './QuestionTimer';\r\n\r\nimport Rewards from '../rewards/Rewards';\r\n\r\nimport '../../../App.css';\r\n\r\nconst QuestionBody = () => {\r\n\tconst context = useContext(MyContext);\r\n\tconst {\r\n\t\tloading,\r\n\t\tnumber,\r\n\t\tsetNumber,\r\n\t\teror,\r\n\t\thints,\r\n\t\tsetHints,\r\n\t\tresults,\r\n\r\n\t\trandomAnswers,\r\n\t\tsetRandomAnswers,\r\n\t\tscore,\r\n\t\tsetScore,\r\n\t} = context;\r\n\r\n\tconst [error, setError] = useState(false);\r\n\tconst [selected, setSelected] = useState();\r\n\tconst [indexCounter, setIndexCounter] = useState(0);\r\n\r\n\tconst questionArray = results.map((item) => item.question);\r\n\tconst wrongAnswers = results.map((item) => item.incorrectAnswers);\r\n\tconst rightAnswer = results.map((item) => item.correctAnswer);\r\n\r\n\t// console.log(questionArray);\r\n\t// console.log(wrongAnswers);\r\n\t// console.log(rightAnswer);\r\n\r\n\tconst nav = useNavigate();\r\n\r\n\tindexCounter === number - 1 && nav('/');\r\n\r\n\tconst handleSelect = (i) => {\r\n\t\tif (selected === i && selected === rightAnswer[indexCounter])\r\n\t\t\treturn 'select';\r\n\t\telse if (selected === i && selected !== rightAnswer[indexCounter])\r\n\t\t\treturn 'wrong';\r\n\t\telse if (i === rightAnswer[indexCounter]) return 'select';\r\n\t};\r\n\tconst handleCheck = (i) => {\r\n\t\tsetSelected(i);\r\n\t\tif (i === rightAnswer[indexCounter]) setScore(score + 10);\r\n\t\tsetError(false);\r\n\t};\r\n\r\n\tconst nextHandler = () => {\r\n\t\t// console.log(\"first\");\r\n\t\tif (selected) {\r\n\t\t\tsetSelected();\r\n\t\t} else setError('Please select an option first');\r\n\t\tsetIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\r\n\t};\r\n\r\n\tconst answers = [];\r\n\tanswers.push(rightAnswer[indexCounter]);\r\n\r\n\twrongAnswers[indexCounter].map((el) => answers.push(el));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRandomAnswers(arrayRandomize(answers));\r\n\t}, [indexCounter]);\r\n\r\n\t// console.log(answers);\r\n\t// console.log(\"answers are :\", answers);\r\n\t// console.log(randomAnswers);\r\n\t// console.log(results[indexCounter].correctAnswer);\r\n\t// console.log(results[indexCounter].category);\r\n\r\n\tif (loading) return <p>loading ..</p>;\r\n\tif (eror) return <p>{eror}</p>;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Nav />\r\n\t\t\t<Rewards />\r\n\r\n\t\t\t{(hints === 1 || hints === 2) && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='Counter'\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\twrongAnswers[indexCounter + 1].length > 1 &&\r\n\t\t\t\t\t\twrongAnswers[indexCounter + 1].pop() &&\r\n\t\t\t\t\t\tsetHints((prev) => prev - 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{hints === 2 ? 'DoubleClick for 50/50 CHANCHE' : 'useHint'}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className='QA--section'>\r\n\t\t\t\t<div className='questions--section'>\r\n\t\t\t\t\tQuestion {indexCounter + 1} : {questionArray[indexCounter]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='answers--section'>\r\n\t\t\t\t\t{randomAnswers.map((el, index) => (\r\n\t\t\t\t\t\t<div key={index} className='align-items'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tvalue={el}\r\n\t\t\t\t\t\t\t\tclassName={`singleOption  ${selected && handleSelect(el)}`}\r\n\t\t\t\t\t\t\t\tkey={el}\r\n\t\t\t\t\t\t\t\tonClick={() => handleCheck(el)}\r\n\t\t\t\t\t\t\t\tdisabled={selected}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{index + 1 + '.' + el}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button onClick={nextHandler}>next</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<QuestionCounter />\r\n\t\t\t{/* <QuestionTimer /> */}\r\n\t\t\t{/* <Timer />\r\n      <Counter /> */}\r\n\t\t\t{/* { questions && <p>{questions}</p> } */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuestionBody;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC1B,MAAMC,OAAO,GAAGb,UAAU,CAACI,SAAD,CAA1B;EACA,MAAM;IACLU,OADK;IAELC,MAFK;IAGLC,SAHK;IAILC,IAJK;IAKLC,KALK;IAMLC,QANK;IAOLC,OAPK;IASLC,aATK;IAULC,gBAVK;IAWLC,KAXK;IAYLC;EAZK,IAaFX,OAbJ;EAeA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,EAAxC;EACA,MAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,CAAD,CAAhD;EAEA,MAAM8B,aAAa,GAAGX,OAAO,CAACY,GAAR,CAAaC,IAAD,IAAUA,IAAI,CAACC,QAA3B,CAAtB;EACA,MAAMC,YAAY,GAAGf,OAAO,CAACY,GAAR,CAAaC,IAAD,IAAUA,IAAI,CAACG,gBAA3B,CAArB;EACA,MAAMC,WAAW,GAAGjB,OAAO,CAACY,GAAR,CAAaC,IAAD,IAAUA,IAAI,CAACK,aAA3B,CAApB,CAvB0B,CAyB1B;EACA;EACA;;EAEA,MAAMC,GAAG,GAAGpC,WAAW,EAAvB;EAEA0B,YAAY,KAAKd,MAAM,GAAG,CAA1B,IAA+BwB,GAAG,CAAC,GAAD,CAAlC;;EAEA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC3B,IAAId,QAAQ,KAAKc,CAAb,IAAkBd,QAAQ,KAAKU,WAAW,CAACR,YAAD,CAA9C,EACC,OAAO,QAAP,CADD,KAEK,IAAIF,QAAQ,KAAKc,CAAb,IAAkBd,QAAQ,KAAKU,WAAW,CAACR,YAAD,CAA9C,EACJ,OAAO,OAAP,CADI,KAEA,IAAIY,CAAC,KAAKJ,WAAW,CAACR,YAAD,CAArB,EAAqC,OAAO,QAAP;EAC1C,CAND;;EAOA,MAAMa,WAAW,GAAID,CAAD,IAAO;IAC1Bb,WAAW,CAACa,CAAD,CAAX;IACA,IAAIA,CAAC,KAAKJ,WAAW,CAACR,YAAD,CAArB,EAAqCL,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;IACrCG,QAAQ,CAAC,KAAD,CAAR;EACA,CAJD;;EAMA,MAAMiB,WAAW,GAAG,MAAM;IACzB;IACA,IAAIhB,QAAJ,EAAc;MACbC,WAAW;IACX,CAFD,MAEOF,QAAQ,CAAC,+BAAD,CAAR;;IACPI,eAAe,CAAEc,gBAAD,IAAsBA,gBAAgB,GAAG,CAA1C,CAAf;EACA,CAND;;EAQA,MAAMC,OAAO,GAAG,EAAhB;EACAA,OAAO,CAACC,IAAR,CAAaT,WAAW,CAACR,YAAD,CAAxB;EAEAM,YAAY,CAACN,YAAD,CAAZ,CAA2BG,GAA3B,CAAgCe,EAAD,IAAQF,OAAO,CAACC,IAAR,CAAaC,EAAb,CAAvC;EAEA7C,SAAS,CAAC,MAAM;IACfoB,gBAAgB,CAACjB,cAAc,CAACwC,OAAD,CAAf,CAAhB;EACA,CAFQ,EAEN,CAAChB,YAAD,CAFM,CAAT,CA3D0B,CA+D1B;EACA;EACA;EACA;EACA;;EAEA,IAAIf,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIG,IAAJ,EAAU,oBAAO;IAAA,UAAIA;EAAJ;IAAA;IAAA;IAAA;EAAA,QAAP;EAEV,oBACC;IAAA,wBACC,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADD,eAEC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFD,EAIE,CAACC,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA1B,kBACA;MACC,SAAS,EAAC,SADX;MAEC,OAAO,EAAE,MACRiB,YAAY,CAACN,YAAY,GAAG,CAAhB,CAAZ,CAA+BmB,MAA/B,GAAwC,CAAxC,IACAb,YAAY,CAACN,YAAY,GAAG,CAAhB,CAAZ,CAA+BoB,GAA/B,EADA,IAEA9B,QAAQ,CAAE+B,IAAD,IAAUA,IAAI,GAAG,CAAlB,CALV;MAAA,UAQEhC,KAAK,KAAK,CAAV,GAAc,+BAAd,GAAgD;IARlD;MAAA;MAAA;MAAA;IAAA,QALF,eAiBC;MAAK,SAAS,EAAC,aAAf;MAAA,wBACC;QAAK,SAAS,EAAC,oBAAf;QAAA,wBACWW,YAAY,GAAG,CAD1B,SACgCE,aAAa,CAACF,YAAD,CAD7C;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAIC;QAAK,SAAS,EAAC,kBAAf;QAAA,UACER,aAAa,CAACW,GAAd,CAAkB,CAACe,EAAD,EAAKI,KAAL,kBAClB;UAAiB,SAAS,EAAC,aAA3B;UAAA,uBACC;YACC,KAAK,EAAEJ,EADR;YAEC,SAAS,EAAG,iBAAgBpB,QAAQ,IAAIa,YAAY,CAACO,EAAD,CAAK,EAF1D;YAIC,OAAO,EAAE,MAAML,WAAW,CAACK,EAAD,CAJ3B;YAKC,QAAQ,EAAEpB,QALX;YAAA,UAOEwB,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkBJ;UAPpB,GAGMA,EAHN;YAAA;YAAA;YAAA;UAAA;QADD,GAAUI,KAAV;UAAA;UAAA;UAAA;QAAA,QADA;MADF;QAAA;QAAA;QAAA;MAAA,QAJD,eAoBC;QAAQ,OAAO,EAAER,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBD;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBD,eAwCC,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAxCD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAgDA,CAxHD;;GAAM/B,Y;UA6BOT,W;;;KA7BPS,Y;AA0HN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}