{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\context\\\\MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport \"../../src/App.css\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [rightAnswer, setRightAnswer] = useState();\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState();\n  const [wrongAnswers, setWrongAnswers] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState); // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n\n  console.log(results);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionArray,\n      indexCounter,\n      setIndexCounter,\n      wrongAnswers,\n      setWrongAnswers,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      cat,\n      gameOver,\n      setGameOver,\n      setCat,\n      diff,\n      setDiff,\n      message,\n      setMessage,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      category,\n      setCategory,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints,\n      email,\n      setEmail,\n      pass,\n      setPass\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"fwZO7S8ZgFbzkM2ufsHpHmvGj+4=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","useEffect","MyContext","useState","useFetch","MyProvider","children","message","setMessage","color","setColor","rightAnswer","setRightAnswer","score","setScore","category","setCategory","difficulty","setDifficulty","gameMode","setGameMode","number","setNumber","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","incorrect","setIncorrect","quest","setQuest","diff","setDiff","cat","setCat","randomAnswers","setRandomAnswers","hints","setHints","email","setEmail","pass","setPass","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","indexCounter","setIndexCounter","gameOver","setGameOver","url","initialState","results","loading","eror","console","log"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MyContext from \"./MyContext\";\r\nimport { useState } from \"react\";\r\nimport \"../../src/App.css\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst MyProvider = ({ children }) => {\r\n  const [message, setMessage] = useState();\r\n  const [color, setColor] = useState();\r\n  const [rightAnswer, setRightAnswer] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [category, setCategory] = useState();\r\n  const [difficulty, setDifficulty] = useState();\r\n  const [gameMode, setGameMode] = useState();\r\n\r\n  const [number, setNumber] = useState(10);\r\n  const [allAnswers, setAllAnswers] = useState();\r\n  const [correctAnswer, setCorrectAnswer] = useState();\r\n  const [incorrect, setIncorrect] = useState();\r\n  const [quest, setQuest] = useState([]);\r\n\r\n\r\n\r\n  const [diff, setDiff] = useState(\"easy\");\r\n  const [cat, setCat] = useState(\"arts\");\r\n  const [randomAnswers, setRandomAnswers] = useState([]);\r\n\r\n  const [hints, setHints] = useState(0);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  const [questionArray, setQuestionArray] = useState();\r\n\r\n  \r\n\r\n  const [wrongAnswers, setWrongAnswers] = useState();\r\n  const [indexCounter, setIndexCounter] = useState(0);\r\n  const [gameOver, setGameOver] = useState(true);\r\n\r\n\r\n\r\n\r\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\r\n  const initialState = { results: null, loading: true, eror: null };\r\n  const { results, loading, eror } = useFetch(url, initialState);\r\n  // const questionArray = results.map((item) => item.question); //set state to everything\r\n  //results.map((item) => setQuestionArray(item.question));\r\n\r\n  console.log(results);\r\n\r\n  if (loading) return <p>loading ..</p>;\r\n  if (eror) return <p>{eror}</p>;\r\n\r\n  return (\r\n    <MyContext.Provider\r\n      value={{\r\n\r\n        questionArray,\r\n\r\n        indexCounter, \r\n        setIndexCounter,\r\n        wrongAnswers, \r\n        setWrongAnswers,\r\n\r\n        randomAnswers,\r\n        setRandomAnswers,\r\n        results,\r\n        loading,\r\n        eror,\r\n        cat,\r\n        gameOver,\r\n        setGameOver,\r\n        setCat,\r\n        diff,\r\n        setDiff,\r\n        message,\r\n        setMessage,\r\n        color,\r\n        setColor,\r\n        rightAnswer,\r\n        setRightAnswer,\r\n        score,\r\n        setScore,\r\n       \r\n        category,\r\n        setCategory,\r\n        difficulty,\r\n        setDifficulty,\r\n        gameMode,\r\n        setGameMode,\r\n        number,\r\n        setNumber,\r\n        hints,\r\n        setHints,\r\n        email,\r\n        setEmail,\r\n        pass,\r\n        setPass,\r\n      }}\r\n    >\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MyProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}