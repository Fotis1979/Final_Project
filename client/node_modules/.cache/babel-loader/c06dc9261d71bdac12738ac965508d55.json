{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuetsionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav2 from \"../../pages/Nav2\";\nimport Nav from \"../../pages/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    cat,\n    setCat,\n    score,\n    setScore,\n    setWrongAnswers\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 + 1 && nav(\"/game_over\");\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  console.log(answers);\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n  useEffect(() => {\n    seconds === 15 && setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  }, [seconds]); // !**********!***************!******!********!\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n  // !**********!***************!******!********!\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n\n  console.log(results[indexCounter].correctAnswer); // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected,\n              children: index + 1 + \".\" + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), (hints === 1 || hints === 2) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Counter\",\n          onClick: () => randomAnswers.rightAnswer.pop() && setHints(prev => prev - 1),\n          children: [console.log(randomAnswers), \"          \", hints === 2 ? \"DoubleClick for 50/50 CHANCE\" : \"useHint\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(QuestionTimer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"eSBGSGXczTJDC7HlKFoes63TPms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useNavigate","useContext","useState","useEffect","arrayRandomize","Rewards","Nav2","Nav","QuestionBody","context","loading","number","setNumber","eror","hints","setHints","results","email","seconds","setSeconds","wrongAnswers","rightAnswer","questionArray","randomAnswers","setRandomAnswers","cat","setCat","score","setScore","setWrongAnswers","error","setError","selected","setSelected","indexCounter","setIndexCounter","nav","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","map","el","console","log","correctAnswer","index","pop","prev"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuetsionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav2 from \"../../pages/Nav2\";\n\nimport Nav from \"../../pages/Nav\";\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    cat,\n    setCat,\n    score,\n    setScore,\n    setWrongAnswers\n  } = context;\n\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n\n  indexCounter === (number -1)+1 && nav(\"/game_over\") \n  \n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n\n  wrongAnswers[indexCounter].map((el) => answers.push(el))\n\n\nconsole.log(answers);\n\n  useEffect(() => {  \n\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n\n  useEffect(() => {\n\n    seconds === 15 && setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n\n  }, [seconds])\n\n\n  // !**********!***************!******!********!\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n    // !**********!***************!******!********!\n\n\n\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <div>\n      <Nav2 />\n      <Rewards />\n\n \n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {randomAnswers.map((el, index) => (\n              <div key={index} className=\"align-items\">\n                <button\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el) }\n                  disabled={selected}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n              </div>\n            ))}\n          </div>\n          {(hints === 1 || hints === 2) && (\n        <button\n          className=\"Counter\"\n          onClick={() =>\n            randomAnswers.rightAnswer.pop() &&\n            setHints((prev) => prev - 1)\n         \n          } \n        >   \n{         console.log(randomAnswers)\n}          {hints === 2 ? \"DoubleClick for 50/50 CHANCE\" : \"useHint\"}\n        </button>\n      )}\n      \n          <QuestionTimer />\n          <button onClick={nextHandler}>next</button>\n        </header>\n      </div>\n\n\n {/* // !**********!***************!******!********! */}\n\n  {/* <label>Categories</label>\n        {\n          <select onChange={(e) => x(e)}>\n\n            <option onChange={(e) => x(e)} value=\"Music\">\n              Music\n            </option>\n\n            <option onChange={(e) => x(e)} value=\"Society\">\n              Society & Culture{\" \"}\n            </option>\n            <option onChange={(e) => x(e)} value=\"Sport\">\n              Sport & Leisure{\" \"}\n            </option>\n          </select>\n\n        } */}\n\n {/* !**********!***************!******!********! */}\n\n\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      {/* <Timer />\n      <Counter /> */}\n      {/* { questions && <p>{questions}</p> } */}\n    </div>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}