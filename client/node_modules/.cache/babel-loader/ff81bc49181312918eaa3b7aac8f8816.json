{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState, useEffect, useContext } from \"react\";\nimport \"../../src/App.css\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [questions, setQuestions] = useState();\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [rightAnswer, setRightAnswer] = useState();\n  const [score, setScore] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [lock, setLock] = useState(false);\n  const [error, setError] = useState(false);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [number, setNumber] = useState(0);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [newQ, setNewQ] = useState();\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState();\n  const [url, setUrl] = useState();\n  number ? setUrl(`https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`) : setUrl(`https://the-trivia-api.com/api/questions?limit=1&&categories=${cat}&&difficulty=${diff}`);\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      wrongAnswers,\n      setWrongAnswers,\n      lock,\n      setLock,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      newQ,\n      setNewQ,\n      cat,\n      setCat,\n      diff,\n      setDiff,\n      quest,\n      setQuest,\n      incorrect,\n      setIncorrect,\n      correctAnswer,\n      setCorrectAnswer,\n      allAnswers,\n      setAllAnswers,\n      questions,\n      setQuestions,\n      message,\n      setMessage,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      newQuestion,\n      setNewQuestion,\n      gameOver,\n      setGameOver,\n      error,\n      setError,\n      category,\n      setCategory,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"GZcmdgiuAktsBj3NF0K0efZNljE=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","MyContext","useState","useEffect","useContext","useFetch","MyProvider","children","questions","setQuestions","message","setMessage","color","setColor","rightAnswer","setRightAnswer","score","setScore","newQuestion","setNewQuestion","gameOver","setGameOver","lock","setLock","error","setError","category","setCategory","difficulty","setDifficulty","gameMode","setGameMode","number","setNumber","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","incorrect","setIncorrect","quest","setQuest","diff","setDiff","cat","setCat","newQ","setNewQ","randomAnswers","setRandomAnswers","hints","setHints","wrongAnswers","setWrongAnswers","url","setUrl","initialState","results","loading","eror"],"sources":["/home/user/Desktop/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState, useEffect, useContext } from \"react\";\nimport \"../../src/App.css\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst MyProvider = ({ children }) => {\n  const [questions, setQuestions] = useState();\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [rightAnswer, setRightAnswer] = useState();\n  const [score, setScore] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [lock, setLock] = useState(false);\n  const [error, setError] = useState(false);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [number, setNumber] = useState(0);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [newQ, setNewQ] = useState();\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState();\n  const [url, setUrl] = useState();\n\n\n\n\n  number ? setUrl(   `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`\n  ) : setUrl(`https://the-trivia-api.com/api/questions?limit=1&&categories=${cat}&&difficulty=${diff}`) \n   const initialState = { results: null, loading: true, eror: null };\n  const { results, loading, eror } = useFetch(url, initialState);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n  return (\n    <MyContext.Provider\n      value={{\n        wrongAnswers, \n        setWrongAnswers,\n        lock,\n        setLock,\n        randomAnswers,\n        setRandomAnswers,\n        results,\n        loading,\n        eror,\n        newQ,\n        setNewQ,\n        cat,\n        setCat,\n        diff,\n        setDiff,\n        quest,\n        setQuest,\n        incorrect,\n        setIncorrect,\n        correctAnswer,\n        setCorrectAnswer,\n        allAnswers,\n        setAllAnswers,\n        questions,\n        setQuestions,\n        message,\n        setMessage,\n        color,\n        setColor,\n        rightAnswer,\n        setRightAnswer,\n        score,\n        setScore,\n        newQuestion,\n        setNewQuestion,\n        gameOver,\n        setGameOver,\n       \n        error,\n        setError,\n        category,\n        setCategory,\n        difficulty,\n        setDifficulty,\n        gameMode,\n        setGameMode,\n        number,\n        setNumber,\n        hints,\n        setHints,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}