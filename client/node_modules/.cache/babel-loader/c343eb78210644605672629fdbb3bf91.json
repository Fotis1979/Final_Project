{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport \"../../src/App.css\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState); // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map(item => item.question));\n      setWrongAnswers(results.map(item => item.incorrectAnswers));\n      setRightAnswer(results.map(item => item.correctAnswer));\n    }\n  }, [results]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      questionArray,\n      indexCounter,\n      setIndexCounter,\n      wrongAnswers,\n      setWrongAnswers,\n      seconds,\n      setSeconds,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      cat,\n      gameOver,\n      setGameOver,\n      setCat,\n      diff,\n      setDiff,\n      message,\n      setMessage,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      category,\n      setCategory,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints,\n      email,\n      setEmail,\n      pass,\n      setPass\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"9T5UxEn8yRfViTU90VfOeA6Xo/8=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","useEffect","MyContext","useState","useFetch","MyProvider","children","message","setMessage","color","setColor","rightAnswer","setRightAnswer","score","setScore","category","setCategory","difficulty","setDifficulty","gameMode","setGameMode","seconds","setSeconds","number","setNumber","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","incorrect","setIncorrect","quest","setQuest","diff","setDiff","cat","setCat","randomAnswers","setRandomAnswers","hints","setHints","email","setEmail","pass","setPass","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","indexCounter","setIndexCounter","gameOver","setGameOver","url","initialState","results","loading","eror","map","item","question","incorrectAnswers"],"sources":["/home/user/Desktop/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport \"../../src/App.css\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst MyProvider = ({ children }) => {\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n\n\n\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n\n  const [hints, setHints] = useState(0);\n\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  const [questionArray, setQuestionArray] = useState([]);\n\n  \n\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n\n\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = { results: null, loading: true, eror: null };\n  const { results, loading, eror } = useFetch(url, initialState);\n  // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map((item) => item.question));\n      setWrongAnswers(results.map((item) => item.incorrectAnswers));\n      setRightAnswer(results.map((item) => item.correctAnswer));\n    }\n  }, [results]);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <MyContext.Provider\n      value={{\n\n        questionArray,\n\n        indexCounter, \n        setIndexCounter,\n        wrongAnswers, \n        setWrongAnswers,\n        seconds, \n        setSeconds,\n        randomAnswers,\n        setRandomAnswers,\n        results,\n        loading,\n        eror,\n        cat,\n        gameOver,\n        setGameOver,\n        setCat,\n        diff,\n        setDiff,\n        message,\n        setMessage,\n        color,\n        setColor,\n        rightAnswer,\n        setRightAnswer,\n        score,\n        setScore,\n       \n        category,\n        setCategory,\n        difficulty,\n        setDifficulty,\n        gameMode,\n        setGameMode,\n        number,\n        setNumber,\n        hints,\n        setHints,\n        email,\n        setEmail,\n        pass,\n        setPass,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}