{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from '../../../hooks/arrayRandomize';\nimport '../../../styling/questionBodyWithTime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState();\n  const context = useContext(MyContext);\n  const {\n    allAnswers,\n    questions,\n    question,\n    setQuestion,\n    setQuestions,\n    incorrect,\n    correctAnswer,\n    setCorrectAnswer,\n    newQ,\n    questionArr,\n    setQuestionArr,\n    color,\n    setNewQ,\n    setColor,\n    lock,\n    setLock\n  } = context;\n  allAnswers && console.log(allAnswers); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    setColor(\"\");\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  }; // console.log(rightAnswer[indexCounter]);\n  // console.log(indexCounter);\n\n\n  setQuestionArray(questions.map(item => item.question));\n  setWrongAnswers(questions.map(item => item.incorrectAnswers));\n  setRightAnswer(questions.map(item => item.correctAnswer));\n  console.log(rightAnswer);\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    arrayRandomize(answers);\n  }, [answers, questions]);\n\n  const LockButtons = () => {\n    color ? setLock(true) : setLock(false);\n  };\n\n  useEffect(() => {\n    LockButtons();\n  }, [color]);\n  console.log(\"answers are :\", answers);\n  console.log(rightAnswer);\n  questions && console.log(questions[indexCounter].correctAnswer);\n\n  const testHandler = e => {\n    console.log(e.target.value);\n\n    if (e.target.value === rightAnswer[indexCounter]) {\n      console.log(\"correct\");\n      setColor(\"green\"); // e.target.style.backgroundColor = \"green\";\n    } else {\n      // e.target.style.backgroundColor = \"red\";\n      setColor(\"red\");\n      console.log(\"wrong\");\n    }\n  };\n\n  console.log(questions[indexCounter].category);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: answers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: el,\n              onClick: lock === false ? e => testHandler(e) : undefined,\n              className: \"answers-btn\",\n              style: {\n                backgroundColor: `${color}`\n              },\n              children: index + 1 + \".\" + el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), questions && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"questions\",\n      children: [questions.question, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"hy8slxcZQQrMMMPm88qySVdelVU=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","QuestionBody","indexCounter","setIndexCounter","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","rightAnswer","setRightAnswer","context","allAnswers","questions","question","setQuestion","setQuestions","incorrect","correctAnswer","setCorrectAnswer","newQ","questionArr","setQuestionArr","color","setNewQ","setColor","lock","setLock","console","log","nextHandler","prevIndexCounter","map","item","incorrectAnswers","answers","push","el","LockButtons","testHandler","e","target","value","category","index","undefined","backgroundColor"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from '../../../hooks/arrayRandomize'\nimport '../../../styling/questionBodyWithTime.css'\n\n\nconst QuestionBody = () => {\n\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [questionArray, setQuestionArray] = useState([]); const [wrongAnswers, setWrongAnswers] = useState([]); const [rightAnswer, setRightAnswer] = useState();\n\n  const context = useContext(MyContext);\n  const {\n    allAnswers, questions, question,\n    setQuestion, setQuestions, incorrect, correctAnswer, setCorrectAnswer, newQ, questionArr, setQuestionArr, color, setNewQ,setColor,lock, setLock\n  } = context;\n\n  \n\n  allAnswers && console.log(allAnswers)\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n\n\n  const nextHandler = () => {\n    // console.log(\"first\");\nsetColor(\"\")\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n    \n  };\n  // console.log(rightAnswer[indexCounter]);\n  // console.log(indexCounter);\n  setQuestionArray(questions.map((item) => item.question))\n  setWrongAnswers(questions.map((item) => item.incorrectAnswers)) \n  setRightAnswer(questions.map((item) => item.correctAnswer))\nconsole.log(rightAnswer);\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n  \nuseEffect(() => {\n\n      arrayRandomize(answers);\n\n},[answers,questions])\n\n\n\tconst LockButtons = () => {\n\t\tcolor ? setLock(true) : setLock(false);\n\t};\n\tuseEffect(() => {\n\t\tLockButtons();\n\t}, [color]);\n\n  console.log(\"answers are :\", answers);\n  console.log(rightAnswer);\n\n\n  questions && console.log(questions[indexCounter].correctAnswer);\n\n\n\n  const testHandler = (e) => {\n    console.log(e.target.value);\n    if (e.target.value === rightAnswer[indexCounter]) {\n      console.log(\"correct\");\n      setColor(\"green\")\n      // e.target.style.backgroundColor = \"green\";\n    } else {\n      // e.target.style.backgroundColor = \"red\";\n      setColor(\"red\")\n\n      console.log(\"wrong\");\n    }\n  };\n  console.log(questions[indexCounter].category);\n\n  return (\n    <main>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {answers.map((el, index) => (\n              <div className=\"align-items\">\n                <button \n                  value={el}\n                  onClick={lock === false ? (e) => testHandler(e) : undefined}\n                  className=\"answers-btn\"\n                  style={{ backgroundColor: `${color}` }}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          <button onClick={nextHandler}>next</button>\n        </header>\n      </div>\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      <Timer />\n      <Counter />\n      {/* { questions && <p>{questions}</p> } */}\n\n      {questions && <p className=\"questions\">{questions.question} </p>}\n\n    </main>\n\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}