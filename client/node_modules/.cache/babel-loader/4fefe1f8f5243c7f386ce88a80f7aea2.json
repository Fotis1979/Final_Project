{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport \"../../src/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState();\n  const [clicked, setClicked] = useState(false);\n  const [streak, setStreak] = useState(0);\n  const [messageB, setMessageB] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [storedScore, setStoredScore] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(33);\n  const [gameDiff, setGameDiff] = useState();\n  const [difficulty, setDifficulty] = useState([\"easy\", \"medium\", \"hard\"]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [selected, setSelected] = useState();\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [answerPopup, setAnswerPopup] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isProfileSaved, setIsProfileSaved] = useState(false);\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [loginMsg, setLoginMsg] = useState(\"\");\n  const [highScoreResult, setHighScoreResult] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState);\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map(item => item.question));\n      setWrongAnswers(results.map(item => item.incorrectAnswers));\n      setRightAnswer(results.map(item => item.correctAnswer));\n    }\n  }, [results]);\n  useEffect(() => {\n    console.log(\"GAMEOVER IS :\", gameOver);\n  }, [indexCounter]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"'eror'\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      highScoreResult,\n      setHighScoreResult,\n      highScore,\n      setHighScore,\n      gameDiff,\n      setGameDiff,\n      answers,\n      clicked,\n      setClicked,\n      streak,\n      setStreak,\n      selected,\n      setSelected,\n      storedScore,\n      setStoredScore,\n      setAnswers,\n      error,\n      setError,\n      questionArray,\n      setQuestionArray,\n      indexCounter,\n      setIndexCounter,\n      wrongAnswers,\n      setWrongAnswers,\n      seconds,\n      setSeconds,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      cat,\n      gameOver,\n      setGameOver,\n      setCat,\n      diff,\n      setDiff,\n      message,\n      setMessage,\n      messageB,\n      setMessageB,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints,\n      email,\n      setEmail,\n      pass,\n      setPass,\n      birthDate,\n      setBirthDate,\n      isProfileSaved,\n      setIsProfileSaved,\n      loginMsg,\n      setLoginMsg,\n      name,\n      setName,\n      answerPopup,\n      setAnswerPopup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"AEmmCSY2gkTAtS3wSUmcNzaF2Ts=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["useEffect","MyContext","useState","useFetch","MyProvider","children","message","setMessage","clicked","setClicked","streak","setStreak","messageB","setMessageB","color","setColor","score","setScore","storedScore","setStoredScore","gameMode","setGameMode","seconds","setSeconds","error","setError","number","setNumber","gameDiff","setGameDiff","difficulty","setDifficulty","diff","setDiff","cat","setCat","randomAnswers","setRandomAnswers","hints","setHints","email","setEmail","pass","setPass","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","selected","setSelected","rightAnswer","setRightAnswer","answers","setAnswers","indexCounter","setIndexCounter","gameOver","setGameOver","answerPopup","setAnswerPopup","name","setName","isProfileSaved","setIsProfileSaved","birthDate","setBirthDate","loginMsg","setLoginMsg","highScoreResult","setHighScoreResult","highScore","setHighScore","url","initialState","results","loading","eror","map","item","question","incorrectAnswers","correctAnswer","console","log"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport \"../../src/App.css\";\n\nconst MyProvider = ({ children }) => {\n  const [message, setMessage] = useState();\n  const [clicked, setClicked] = useState(false);\n  const [streak, setStreak] = useState(0);\n  const [messageB, setMessageB] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [storedScore, setStoredScore] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(33);\n  const [gameDiff, setGameDiff] = useState();\n  const [difficulty, setDifficulty] = useState([\"easy\", \"medium\", \"hard\"]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [selected, setSelected] = useState();\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [answerPopup, setAnswerPopup] = useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [isProfileSaved, setIsProfileSaved] = useState(false);\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [loginMsg, setLoginMsg] = useState(\"\");\n  const [highScoreResult, setHighScoreResult] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = { results: null, loading: true, eror: null };\n  const { results, loading, eror } = useFetch(url, initialState);\n\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map((item) => item.question));\n      setWrongAnswers(results.map((item) => item.incorrectAnswers));\n      setRightAnswer(results.map((item) => item.correctAnswer));\n    }\n  }, [results]);\n\n  useEffect(() => {\n    console.log(\"GAMEOVER IS :\", gameOver);\n  }, [indexCounter]);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>'eror'</p>;\n\n  return (\n    <MyContext.Provider\n      value={{\n        highScoreResult,\n        setHighScoreResult,\n        highScore,\n        setHighScore,\n        gameDiff,\n        setGameDiff,\n        answers,\n        clicked,\n        setClicked,\n        streak,\n        setStreak,\n        selected,\n        setSelected,\n        storedScore,\n        setStoredScore,\n        setAnswers,\n        error,\n        setError,\n        questionArray,\n        setQuestionArray,\n        indexCounter,\n        setIndexCounter,\n        wrongAnswers,\n        setWrongAnswers,\n        seconds,\n        setSeconds,\n        randomAnswers,\n        setRandomAnswers,\n        results,\n        loading,\n        eror,\n        cat,\n        gameOver,\n        setGameOver,\n        setCat,\n        diff,\n        setDiff,\n        message,\n        setMessage,\n        messageB,\n        setMessageB,\n        color,\n        setColor,\n        rightAnswer,\n        setRightAnswer,\n        score,\n        setScore,\n        difficulty,\n        setDifficulty,\n        gameMode,\n        setGameMode,\n        number,\n        setNumber,\n        hints,\n        setHints,\n        email,\n        setEmail,\n        pass,\n        setPass,\n\n        birthDate,\n        setBirthDate,\n        isProfileSaved,\n        setIsProfileSaved,\n        loginMsg,\n        setLoginMsg,\n        name,\n        setName,\n        answerPopup,\n        setAnswerPopup,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}