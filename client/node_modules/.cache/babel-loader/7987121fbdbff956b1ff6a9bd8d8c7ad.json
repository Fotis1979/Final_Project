{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = _ref => {\n  _s();\n\n  let {\n    setQuestions,\n    setWrightAnswer,\n    setColor,\n    setMessage,\n    message,\n    newQuestion,\n    setNewQuestion\n  } = _ref;\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  useEffect(() => {\n    seconds === 16 && setSeconds(0);\n    seconds === 16 && setNewQuestion(true);\n    seconds <= 15 && setNewQuestion(false);\n    message && setSeconds(0);\n  }, [seconds]);\n  useEffect(() => {\n    newQuestion && fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=medium\").then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random() * 50)]));\n    setMessage(\"\");\n    setColor(\"\");\n    setWrightAnswer(\"\");\n  }, [newQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionTimer, \"qChm6dP/5V3M1WKDrmvZfLPKJmc=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"names":["React","useEffect","useState","QuestionTimer","setQuestions","setWrightAnswer","setColor","setMessage","message","newQuestion","setNewQuestion","seconds","setSeconds","incrementSeconds","prev","setInterval","fetch","then","res","json","data","Math","floor","random","fontSize","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGI,MAAMC,aAAa,GAAG,QAAkG;AAAA;;AAAA,MAAjG;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,UAA3C;AAAuDC,IAAAA,OAAvD;AAAgEC,IAAAA,WAAhE;AAA6EC,IAAAA;AAA7E,GAAiG;AAExH,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,aAASY,gBAAT,GAA4B;AACxBD,MAAAA,UAAU,CAAEE,IAAD,IAAWA,IAAI,GAAG,CAAnB,CAAV;AAEH;;AAACC,IAAAA,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;AAGL,GARQ,EAQN,EARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B;AACAD,IAAAA,OAAO,KAAK,EAAZ,IAAkBD,cAAc,CAAC,IAAD,CAAhC;AACAC,IAAAA,OAAO,IAAK,EAAZ,IAAkBD,cAAc,CAAC,KAAD,CAAhC;AACAF,IAAAA,OAAO,IAAII,UAAU,CAAC,CAAD,CAArB;AAGH,GAPQ,EAON,CAACD,OAAD,CAPM,CAAT;AASAV,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,WAAW,IAAIO,KAAK,CAAC,qEAAD,CAAL,CACTC,IADS,CACJC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADH,EAETF,IAFS,CAEJG,IAAI,IAAIhB,YAAY,CAAEgB,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAN,CAFhB,CAAf;AAIChB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAD,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GARQ,EAQN,CAACI,WAAD,CARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BAEI;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,KAAK,EAAE;AAAEa,QAAAA,QAAQ,EAAE,MAAZ;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA5CG;;GAAMtB,a;;KAAAA,a;AA8CV,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\n\n\n    const QuestionTimer = ({ setQuestions, setWrightAnswer, setColor, setMessage, message, newQuestion, setNewQuestion}) => {\n\n    const [seconds, setSeconds] = useState(0)\n\n\n\n    useEffect(() => {\n\n        function incrementSeconds() {\n            setSeconds((prev) => (prev + 1))\n\n        } setInterval(incrementSeconds, 1000);\n\n\n    }, [])\n\n    useEffect(() => {\n        seconds === 16 && setSeconds(0)\n        seconds === 16 && setNewQuestion(true)\n        seconds  <= 15 && setNewQuestion(false)\n        message && setSeconds(0)\n\n\n    }, [seconds])\n\n    useEffect(() => {\n       newQuestion && fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=medium\")\n            .then(res => res.json())\n            .then(data => setQuestions((data[Math.floor(Math.random() * 50)])))\n\n        setMessage(\"\")\n        setColor(\"\")\n        setWrightAnswer(\"\")\n    }, [newQuestion])\n\n    return (\n        <div className=\"question-timer\">\n\n            <span className=\"sec\">{seconds}</span>\n\n            <span style={{ fontSize: \"20px\" , paddingTop: \"20px\"}}>U have 15 secs for each Question !</span>\n\n        </div>\n    )\n}\n\nexport default QuestionTimer\n"]},"metadata":{},"sourceType":"module"}