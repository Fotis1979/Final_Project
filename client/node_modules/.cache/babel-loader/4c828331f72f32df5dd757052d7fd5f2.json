{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport MyContext from './MyContext';\nimport { useState } from 'react';\nimport useFetch from '../hooks/useFetch';\nimport '../../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState('easy');\n  const [cat, setCat] = useState('arts');\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState); // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map(item => item.question));\n      setWrongAnswers(results.map(item => item.incorrectAnswers));\n      setRightAnswer(results.map(item => item.correctAnswer));\n    }\n  }, [results]);\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map(item => item.question));\n      setWrongAnswers(results.map(item => item.incorrectAnswers));\n      setRightAnswer(results.map(item => item.correctAnswer));\n    }\n  }, [results]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 22\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"'eror'\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      answers,\n      setAnswers,\n      error,\n      setError,\n      questionArray,\n      setQuestionArray,\n      indexCounter,\n      setIndexCounter,\n      wrongAnswers,\n      setWrongAnswers,\n      seconds,\n      setSeconds,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      cat,\n      gameOver,\n      setGameOver,\n      setCat,\n      diff,\n      setDiff,\n      message,\n      setMessage,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      category,\n      setCategory,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints,\n      email,\n      setEmail,\n      pass,\n      setPass\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MyProvider, \"sQYEGkWXS1sQgVan+Fmr9r6ctA0=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["useEffect","MyContext","useState","useFetch","MyProvider","children","message","setMessage","color","setColor","score","setScore","category","setCategory","difficulty","setDifficulty","gameMode","setGameMode","seconds","setSeconds","error","setError","number","setNumber","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","incorrect","setIncorrect","quest","setQuest","diff","setDiff","cat","setCat","randomAnswers","setRandomAnswers","hints","setHints","email","setEmail","pass","setPass","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","rightAnswer","setRightAnswer","answers","setAnswers","indexCounter","setIndexCounter","gameOver","setGameOver","url","initialState","results","loading","eror","map","item","question","incorrectAnswers"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport MyContext from './MyContext';\nimport { useState } from 'react';\nimport useFetch from '../hooks/useFetch';\nimport '../../src/App.css';\n\nconst MyProvider = ({ children }) => {\n\tconst [message, setMessage] = useState();\n\tconst [color, setColor] = useState();\n\tconst [score, setScore] = useState(0);\n\tconst [category, setCategory] = useState();\n\tconst [difficulty, setDifficulty] = useState();\n\tconst [gameMode, setGameMode] = useState();\n\tconst [seconds, setSeconds] = useState(0);\n\n\tconst [error, setError] = useState(false);\n\tconst [number, setNumber] = useState(10);\n\tconst [allAnswers, setAllAnswers] = useState();\n\tconst [correctAnswer, setCorrectAnswer] = useState();\n\tconst [incorrect, setIncorrect] = useState();\n\tconst [quest, setQuest] = useState([]);\n\n\tconst [diff, setDiff] = useState('easy');\n\tconst [cat, setCat] = useState('arts');\n\tconst [randomAnswers, setRandomAnswers] = useState([]);\n\tconst [hints, setHints] = useState(0);\n\tconst [email, setEmail] = useState('');\n\tconst [pass, setPass] = useState('');\n\n\tconst [questionArray, setQuestionArray] = useState([]);\n\tconst [wrongAnswers, setWrongAnswers] = useState([]);\n\tconst [rightAnswer, setRightAnswer] = useState([]);\n\n\tconst [answers, setAnswers] = useState([]);\n\n\tconst [indexCounter, setIndexCounter] = useState(0);\n\tconst [gameOver, setGameOver] = useState(true);\n\n\tconst url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n\tconst initialState = { results: null, loading: true, eror: null };\n\tconst { results, loading, eror } = useFetch(url, initialState);\n\t// const questionArray = results.map((item) => item.question); //set state to everything\n\t//results.map((item) => setQuestionArray(item.question));\n\tuseEffect(() => {\n\t\tif (results !== null) {\n\t\t\tsetQuestionArray(results.map((item) => item.question));\n\t\t\tsetWrongAnswers(results.map((item) => item.incorrectAnswers));\n\t\t\tsetRightAnswer(results.map((item) => item.correctAnswer));\n\t\t}\n\t}, [results]);\n\n\tuseEffect(() => {\n\t\tif (results !== null) {\n\t\t\tsetQuestionArray(results.map((item) => item.question));\n\t\t\tsetWrongAnswers(results.map((item) => item.incorrectAnswers));\n\t\t\tsetRightAnswer(results.map((item) => item.correctAnswer));\n\t\t}\n\t}, [results]);\n\n\tif (loading) return <p>loading ..</p>;\n\tif (eror) return <p>'eror'</p>;\n\n\treturn (\n\t\t<MyContext.Provider\n\t\t\tvalue={{\n\t\t\t\tanswers,\n\t\t\t\tsetAnswers,\n\t\t\t\terror,\n\t\t\t\tsetError,\n\t\t\t\tquestionArray,\n\t\t\t\tsetQuestionArray,\n\t\t\t\tindexCounter,\n\t\t\t\tsetIndexCounter,\n\t\t\t\twrongAnswers,\n\t\t\t\tsetWrongAnswers,\n\t\t\t\tseconds,\n\t\t\t\tsetSeconds,\n\t\t\t\trandomAnswers,\n\t\t\t\tsetRandomAnswers,\n\t\t\t\tresults,\n\t\t\t\tloading,\n\t\t\t\teror,\n\t\t\t\tcat,\n\t\t\t\tgameOver,\n\t\t\t\tsetGameOver,\n\t\t\t\tsetCat,\n\t\t\t\tdiff,\n\t\t\t\tsetDiff,\n\t\t\t\tmessage,\n\t\t\t\tsetMessage,\n\t\t\t\tcolor,\n\t\t\t\tsetColor,\n\t\t\t\trightAnswer,\n\t\t\t\tsetRightAnswer,\n\t\t\t\tscore,\n\t\t\t\tsetScore,\n\n\t\t\t\tcategory,\n\t\t\t\tsetCategory,\n\t\t\t\tdifficulty,\n\t\t\t\tsetDifficulty,\n\t\t\t\tgameMode,\n\t\t\t\tsetGameMode,\n\t\t\t\tnumber,\n\t\t\t\tsetNumber,\n\t\t\t\thints,\n\t\t\t\tsetHints,\n\t\t\t\temail,\n\t\t\t\tsetEmail,\n\t\t\t\tpass,\n\t\t\t\tsetPass,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</MyContext.Provider>\n\t);\n};\n\nexport default MyProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}