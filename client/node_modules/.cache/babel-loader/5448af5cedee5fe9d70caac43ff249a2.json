{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState, useContext } from 'react';\nimport MyContext from '../../../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    setColor,\n    setRightAnswer,\n    newQuestion,\n    setNewQuestion\n  } = context;\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  useEffect(() => {\n    seconds === 16 && setSeconds(0);\n    seconds === 16 && setNewQuestion(true);\n    seconds <= 15 && setNewQuestion(false);\n    message && setSeconds(0);\n  }, [seconds]);\n  useEffect(() => {\n    newQuestion && fetch('https://the-trivia-api.com/api/questions?limit=50&difficulty=medium').then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random() * 50)]));\n    setMessage('');\n    setColor('');\n    setRightAnswer('');\n  }, [newQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '20px',\n        paddingTop: '20px'\n      },\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionTimer, \"5gwFyNCOyzTGEbtLaS7PZsvBTpE=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"names":["React","useEffect","useState","useContext","MyContext","QuestionTimer","context","setQuestions","message","setMessage","setColor","setRightAnswer","newQuestion","setNewQuestion","seconds","setSeconds","incrementSeconds","prev","setInterval","fetch","then","res","json","data","Math","floor","random","fontSize","paddingTop"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState, useContext } from 'react';\nimport MyContext from '../../../context/MyContext';\n\nconst QuestionTimer = () => {\n\tconst context = useContext(MyContext);\n\tconst {\n\t\tsetQuestions,\n\t\tmessage,\n\t\tsetMessage,\n\n\t\tsetColor,\n\t\tsetRightAnswer,\n\n\t\tnewQuestion,\n\t\tsetNewQuestion,\n\t} = context;\n\tconst [seconds, setSeconds] = useState(0);\n\n\tuseEffect(() => {\n\t\tfunction incrementSeconds() {\n\t\t\tsetSeconds((prev) => prev + 1);\n\t\t}\n\t\tsetInterval(incrementSeconds, 1000);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tseconds === 16 && setSeconds(0);\n\t\tseconds === 16 && setNewQuestion(true);\n\t\tseconds <= 15 && setNewQuestion(false);\n\t\tmessage && setSeconds(0);\n\t}, [seconds]);\n\n\tuseEffect(() => {\n\t\tnewQuestion &&\n\t\t\tfetch(\n\t\t\t\t'https://the-trivia-api.com/api/questions?limit=50&difficulty=medium'\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n\n\t\tsetMessage('');\n\t\tsetColor('');\n\t\tsetRightAnswer('');\n\t}, [newQuestion]);\n\n\treturn (\n\t\t<div className='question-timer'>\n\t\t\t<span className='sec'>{seconds}</span>\n\n\t\t\t<span style={{ fontSize: '20px', paddingTop: '20px' }}>\n\t\t\t\tU have 15 secs for each Question !\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default QuestionTimer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC3B,MAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;EACA,MAAM;IACLG,YADK;IAELC,OAFK;IAGLC,UAHK;IAKLC,QALK;IAMLC,cANK;IAQLC,WARK;IASLC;EATK,IAUFP,OAVJ;EAWA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACf,SAASe,gBAAT,GAA4B;MAC3BD,UAAU,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;IACA;;IACDC,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;EACA,CALQ,EAKN,EALM,CAAT;EAOAf,SAAS,CAAC,MAAM;IACfa,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B;IACAD,OAAO,KAAK,EAAZ,IAAkBD,cAAc,CAAC,IAAD,CAAhC;IACAC,OAAO,IAAI,EAAX,IAAiBD,cAAc,CAAC,KAAD,CAA/B;IACAL,OAAO,IAAIO,UAAU,CAAC,CAAD,CAArB;EACA,CALQ,EAKN,CAACD,OAAD,CALM,CAAT;EAOAb,SAAS,CAAC,MAAM;IACfW,WAAW,IACVO,KAAK,CACJ,qEADI,CAAL,CAGEC,IAHF,CAGQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHhB,EAIEF,IAJF,CAIQG,IAAD,IAAUhB,YAAY,CAACgB,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAL,CAJ7B,CADD;IAOAjB,UAAU,CAAC,EAAD,CAAV;IACAC,QAAQ,CAAC,EAAD,CAAR;IACAC,cAAc,CAAC,EAAD,CAAd;EACA,CAXQ,EAWN,CAACC,WAAD,CAXM,CAAT;EAaA,oBACC;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACC;MAAM,SAAS,EAAC,KAAhB;MAAA,UAAuBE;IAAvB;MAAA;MAAA;MAAA;IAAA,QADD,eAGC;MAAM,KAAK,EAAE;QAAEa,QAAQ,EAAE,MAAZ;QAAoBC,UAAU,EAAE;MAAhC,CAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AASA,CAnDD;;GAAMvB,a;;KAAAA,a;AAqDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}