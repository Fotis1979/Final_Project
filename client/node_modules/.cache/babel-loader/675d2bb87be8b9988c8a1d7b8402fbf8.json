{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\nimport '../../../styling/questions.css';\nimport Popup from '../../Popup/Popup';\nimport ErrorMessage from '../../errorMessage/ErrorMessage'; //import '../../../styling/questionBodyWithTime.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    cat,\n    setCat,\n    score,\n    setScore,\n    setWrongAnswers,\n    answerPopup,\n    setAnswerPopup\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 + 1 && nav('/game_over');\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return 'select';else if (selected === i && selected !== rightAnswer[indexCounter]) return 'wrong';else if (i === rightAnswer[indexCounter]) return 'select';\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    setAnswerPopup(true);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n      setSelected();\n    } else setError(true);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  console.log(answers);\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n  useEffect(() => {\n    seconds === 15 && setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  }, [seconds]); // !**********!***************!******!********!\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n  // !**********!***************!******!********!\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n\n  console.log(results[indexCounter].correctAnswer); // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 22\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Please select an option first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qa--section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions--section\",\n        children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers--section\",\n        children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-items\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: el,\n            className: `singleOption  ${selected && handleSelect(el)}`,\n            onClick: () => handleCheck(el),\n            disabled: selected,\n            children: index + 1 + '.' + el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), (hints === 1 || hints === 2) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rewards--btn\",\n        onClick: () => randomAnswers.pop() && setHints(prev => prev - 1),\n        children: [console.log(randomAnswers), ' ', hints === 2 ? 'DoubleClick for 50/50 CHANCE' : 'useHint']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next--btn\",\n        onClick: nextHandler,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), selected === rightAnswer[indexCounter] && /*#__PURE__*/_jsxDEV(Popup, {\n        trigger: answerPopup,\n        setTrigger: setAnswerPopup,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 46\n      }, this), selected !== rightAnswer[indexCounter] && /*#__PURE__*/_jsxDEV(Popup, {\n        trigger: answerPopup,\n        setTrigger: setAnswerPopup,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"wrong answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(QuestionTimer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionBody, \"eSBGSGXczTJDC7HlKFoes63TPms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["useContext","useState","useEffect","useNavigate","MyContext","arrayRandomize","Counter","Timer","QuestionCounter","QuestionTimer","Rewards","Nav","Nav2","Popup","ErrorMessage","QuestionBody","context","loading","number","setNumber","eror","hints","setHints","results","email","seconds","setSeconds","wrongAnswers","rightAnswer","questionArray","randomAnswers","setRandomAnswers","cat","setCat","score","setScore","setWrongAnswers","answerPopup","setAnswerPopup","error","setError","selected","setSelected","indexCounter","setIndexCounter","nav","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","map","el","console","log","correctAnswer","index","pop","prev"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\n\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\n\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Rewards from \"../rewards/Rewards\";\n\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\n\n\nimport '../../../styling/questions.css';\nimport Popup from '../../Popup/Popup';\nimport ErrorMessage from '../../errorMessage/ErrorMessage';\n//import '../../../styling/questionBodyWithTime.css';\n\nconst QuestionBody = () => {\n\tconst context = useContext(MyContext);\n\tconst {\n\t\tloading,\n\t\tnumber,\n\t\tsetNumber,\n\t\teror,\n\t\thints,\n\t\tsetHints,\n\t\tresults,\n\t\temail,\n\t\tseconds,\n\t\tsetSeconds,\n\t\twrongAnswers,\n\t\trightAnswer,\n\t\tquestionArray,\n\t\trandomAnswers,\n\t\tsetRandomAnswers,\n\t\tcat,\n\t\tsetCat,\n\t\tscore,\n\t\tsetScore,\n\t\tsetWrongAnswers,\n\t\tanswerPopup,\n\t\tsetAnswerPopup,\n\t} = context;\n\n\tconst [error, setError] = useState(false);\n\tconst [selected, setSelected] = useState();\n\tconst [indexCounter, setIndexCounter] = useState(0);\n\n\t// console.log(questionArray);\n\t// console.log(wrongAnswers);\n\t// console.log(rightAnswer);\n\n\tconst nav = useNavigate();\n\n\tindexCounter === number - 1 + 1 && nav('/game_over');\n\n\tconst handleSelect = (i) => {\n\t\tif (selected === i && selected === rightAnswer[indexCounter])\n\t\t\treturn 'select';\n\t\telse if (selected === i && selected !== rightAnswer[indexCounter])\n\t\t\treturn 'wrong';\n\t\telse if (i === rightAnswer[indexCounter]) return 'select';\n\t};\n\tconst handleCheck = (i) => {\n\t\tsetSelected(i);\n\t\tsetAnswerPopup(true);\n\t\tif (i === rightAnswer[indexCounter]) setScore(score + 10);\n\t\tsetError(false);\n\t};\n\n\tconst nextHandler = () => {\n\t\t// console.log(\"first\");\n\t\tif (selected) {\n\t\t\tsetIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n\t\t\tsetSelected();\n\t\t} else setError(true);\n\t\t\n\t};\n\n\tconst answers = [];\n\tanswers.push(rightAnswer[indexCounter]);\n\n\twrongAnswers[indexCounter].map((el) => answers.push(el));\n\n\tconsole.log(answers);\n\n\tuseEffect(() => {\n\t\tsetRandomAnswers(arrayRandomize(answers));\n\t}, [indexCounter]);\n\n\tuseEffect(() => {\n\t\tseconds === 15 &&\n\t\t\tsetIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n\t}, [seconds]);\n\n\t// !**********!***************!******!********!\n\t// const x = (e) => {\n\t//   setCat(e.target.value);\n\t// };\n\t// !**********!***************!******!********!\n\n\t// console.log(answers);\n\t// console.log(\"answers are :\", answers);\n\t// console.log(randomAnswers);\n\tconsole.log(results[indexCounter].correctAnswer);\n\t// console.log(results[indexCounter].category);\n\n\tif (loading) return <p>loading ..</p>;\n\tif (eror) return <p>{eror}</p>;\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<Rewards />\n\t\t\t\n\t\t\t{error && <ErrorMessage>Please select an option first</ErrorMessage>}\n\t\t\t<div className='qa--section'>\n\t\t\t\t<div className='questions--section'>\n\t\t\t\t\tQ{indexCounter + 1} . {questionArray[indexCounter]}\n\t\t\t\t</div>\n\t\t\t\t<div className='answers--section'>\n\t\t\t\t\t{randomAnswers.map((el, index) => (\n\t\t\t\t\t\t<div key={index} className='align-items'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tvalue={el}\n\t\t\t\t\t\t\t\tclassName={`singleOption  ${selected && handleSelect(el)}`}\n\t\t\t\t\t\t\t\tkey={el}\n\t\t\t\t\t\t\t\tonClick={() => handleCheck(el)}\n\t\t\t\t\t\t\t\tdisabled={selected}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{index + 1 + '.' + el}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{(hints === 1 || hints === 2) && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='rewards--btn'\n\t\t\t\t\t\tonClick={() => randomAnswers.pop() && setHints((prev) => prev - 1)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{console.log(randomAnswers)}{' '}\n\t\t\t\t\t\t{hints === 2 ? 'DoubleClick for 50/50 CHANCE' : 'useHint'}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t<button className='next--btn' onClick={nextHandler}>\n\t\t\t\t\tnext\n\t\t\t\t</button>\n\t\t\t\t{selected === rightAnswer[indexCounter]&&<Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n\t\t\t\t\t<p>Correct answer</p></Popup>}\n\t\t\t\t{selected !== rightAnswer[indexCounter]&&<Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n\t\t\t\t\t<p>wrong answer</p></Popup>}\n\t\t\t\t<QuestionTimer />\n\t\t\t\t<QuestionCounter />\n\t\t\t\t{/*<Counter />*/}\n\t\t\t</div>\n\t\t</>\n\t);\n\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}