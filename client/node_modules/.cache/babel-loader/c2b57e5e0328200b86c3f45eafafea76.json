{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport \"../../src/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [isProfileSaved, setIsProfileSaved] = useState(false);\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [loginMsg, setLoginMsg] = useState(\"\");\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    eror: null\n  };\n  const {\n    results,\n    loading,\n    eror\n  } = useFetch(url, initialState); // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map(item => item.question));\n      setWrongAnswers(results.map(item => item.incorrectAnswers));\n      setRightAnswer(results.map(item => item.correctAnswer));\n    }\n  }, [results]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"'eror'\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      answers,\n      setAnswers,\n      error,\n      setError,\n      questionArray,\n      setQuestionArray,\n      indexCounter,\n      setIndexCounter,\n      wrongAnswers,\n      setWrongAnswers,\n      seconds,\n      setSeconds,\n      randomAnswers,\n      setRandomAnswers,\n      results,\n      loading,\n      eror,\n      cat,\n      gameOver,\n      setGameOver,\n      setCat,\n      diff,\n      setDiff,\n      message,\n      setMessage,\n      color,\n      setColor,\n      rightAnswer,\n      setRightAnswer,\n      score,\n      setScore,\n      category,\n      setCategory,\n      difficulty,\n      setDifficulty,\n      gameMode,\n      setGameMode,\n      number,\n      setNumber,\n      hints,\n      setHints,\n      email,\n      setEmail,\n      pass,\n      setPass,\n      birthDate,\n      setBirthDate,\n      isProfileSaved,\n      setIsProfileSaved,\n      loginMsg,\n      setLoginMsg,\n      name,\n      setName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProvider, \"Li6db45dISSQo/q96rFN9n0HuVs=\", false, function () {\n  return [useFetch];\n});\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["useEffect","MyContext","useState","useFetch","MyProvider","children","message","setMessage","color","setColor","score","setScore","category","setCategory","difficulty","setDifficulty","gameMode","setGameMode","seconds","setSeconds","error","setError","number","setNumber","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","incorrect","setIncorrect","quest","setQuest","diff","setDiff","cat","setCat","randomAnswers","setRandomAnswers","hints","setHints","email","setEmail","pass","setPass","questionArray","setQuestionArray","wrongAnswers","setWrongAnswers","rightAnswer","setRightAnswer","answers","setAnswers","indexCounter","setIndexCounter","gameOver","setGameOver","name","setName","isProfileSaved","setIsProfileSaved","birthDate","setBirthDate","loginMsg","setLoginMsg","url","initialState","results","loading","eror","map","item","question","incorrectAnswers"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport \"../../src/App.css\";\n\nconst MyProvider = ({ children }) => {\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [category, setCategory] = useState();\n  const [difficulty, setDifficulty] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(10);\n  const [allAnswers, setAllAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [incorrect, setIncorrect] = useState();\n  const [quest, setQuest] = useState([]);\n\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"arts\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState([]);\n\n  const [answers, setAnswers] = useState([]);\n\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const [name, setName] = useState(\"\");\n  const [isProfileSaved, setIsProfileSaved] = useState(false);\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [loginMsg, setLoginMsg] = useState(\"\");\n\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = { results: null, loading: true, eror: null };\n  const { results, loading, eror } = useFetch(url, initialState);\n  // const questionArray = results.map((item) => item.question); //set state to everything\n  //results.map((item) => setQuestionArray(item.question));\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map((item) => item.question));\n      setWrongAnswers(results.map((item) => item.incorrectAnswers));\n      setRightAnswer(results.map((item) => item.correctAnswer));\n    }\n  }, [results]);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>'eror'</p>;\n\n  return (\n    <MyContext.Provider\n      value={{\n        answers,\n        setAnswers,\n        error,\n        setError,\n        questionArray,\n        setQuestionArray,\n        indexCounter,\n        setIndexCounter,\n        wrongAnswers,\n        setWrongAnswers,\n        seconds,\n        setSeconds,\n        randomAnswers,\n        setRandomAnswers,\n        results,\n        loading,\n        eror,\n        cat,\n        gameOver,\n        setGameOver,\n        setCat,\n        diff,\n        setDiff,\n        message,\n        setMessage,\n        color,\n        setColor,\n        rightAnswer,\n        setRightAnswer,\n        score,\n        setScore,\n\n        category,\n        setCategory,\n        difficulty,\n        setDifficulty,\n        gameMode,\n        setGameMode,\n        number,\n        setNumber,\n        hints,\n        setHints,\n        email,\n        setEmail,\n        pass,\n        setPass,\n\n        birthDate,\n        setBirthDate,\n        isProfileSaved,\n        setIsProfileSaved,\n        loginMsg,\n        setLoginMsg,\n        name,\n        setName,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}