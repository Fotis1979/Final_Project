{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    hints,\n    setHints,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [a, setA] = useState();\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer);\n  let s = wrongAnswers[3][3].push(rightAnswer[3]);\n  console.log(s);\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  console.log(rightAnswer[indexCounter]);\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n  useEffect(() => {\n    setA(arrayRandomize(randomAnswers));\n  }, [indexCounter]);\n  console.log(\"SetA is\", a); // console.log(answers);\n\n  console.log(\"Random Answers are :\", answers); // console.log(randomAnswers);\n  // console.log(rightAnswer);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: answers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected //onClick={(e) => testHandler(e)}\n              // className=\"answers-btn\"\n              //  style={{ backgroundColor: `${color}` }}\n              ,\n              children: index + 1 + \".\" + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), hints === 1 && wrongAnswers[indexCounter].length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => wrongAnswers[indexCounter + 1].pop(wrongAnswers[indexCounter + 1]) && setHints(0),\n          children: \"USehint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"NyfrEmwWgibTzNV85/H/Xl7Zh7I=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","Rewards","QuestionBody","context","loading","eror","results","allAnswers","questions","lock","hints","setHints","setLock","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","a","setA","questionArray","map","item","question","wrongAnswers","incorrectAnswers","rightAnswer","correctAnswer","s","push","console","log","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","el","index","length","pop"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\n\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    hints,\n    setHints,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore,\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [a, setA] = useState();\n  const questionArray = results.map((item) => item.question);\n  const wrongAnswers = results.map((item) => item.incorrectAnswers);\n  const rightAnswer = results.map((item) => item.correctAnswer);\nlet s =  wrongAnswers[3][3].push(rightAnswer[3])\nconsole.log(s);\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n  console.log(rightAnswer[indexCounter]);\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  useEffect(() => {\n    setA(arrayRandomize(randomAnswers));\n  }, [indexCounter]);\nconsole.log(\"SetA is\", a);\n  // console.log(answers);\n  console.log(\"Random Answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(rightAnswer);\n\n  // console.log(results[indexCounter].correctAnswer);\n\n  // console.log(results[indexCounter].category);\n\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <main>\n      <Rewards />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {answers.map((el, index) => (\n              <div className=\"align-items\">\n                <button\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el)}\n                  disabled={selected}\n                //onClick={(e) => testHandler(e)}\n                // className=\"answers-btn\"\n                //  style={{ backgroundColor: `${color}` }}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n                {/* <button\n                  value={el}\n                  onClick={lock === false ? (e) => testHandler(e) : undefined}\n                  className=\"answers-btn\"\n                  style={{ backgroundColor: `${color}` }}\n                ></button> */}\n              </div>\n            ))}\n          </div>\n\n          <button onClick={nextHandler}>next</button>\n          {hints === 1 && wrongAnswers[indexCounter].length >2 && <button onClick={() => (wrongAnswers[indexCounter + 1].pop(wrongAnswers[indexCounter+1])) && setHints(0)}>USehint</button>}\n        </header>\n      </div>\n      {/* <QuestionCounter /> */}\n      {/* <QuestionTimer /> */}\n      {/* <Timer /> */}\n      {/* { questions && <p>{questions}</p> } */}\n    </main>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}