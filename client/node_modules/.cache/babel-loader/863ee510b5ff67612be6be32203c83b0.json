{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\components\\\\singleplayer\\\\question\\\\QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    diff,\n    cat,\n    setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion\n  } = context;\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  useEffect(() => {\n    seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0);\n    seconds <= 15 && setNewQuestion(false);\n    message && setSeconds(0);\n  }, [seconds]);\n  useEffect(() => {\n    newQuestion && fetch(`https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`).then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random() * 50)]));\n    setRightAnswer(\"\");\n  }, [newQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionTimer, \"5gwFyNCOyzTGEbtLaS7PZsvBTpE=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"names":["React","useEffect","useState","useContext","MyContext","QuestionTimer","context","setQuestions","message","setMessage","diff","cat","setIndexCounter","indexCounter","setColor","setRightAnswer","questions","newQuestion","setNewQuestion","seconds","setSeconds","incrementSeconds","prev","setInterval","fetch","then","res","json","data","Math","floor","random","fontSize","paddingTop"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport MyContext from \"../../../context/MyContext\";\r\n\r\nconst QuestionTimer = () => {\r\n  const context = useContext(MyContext);\r\n  const {\r\n    setQuestions,\r\n    message,\r\n    setMessage,\r\n      diff,\r\n      cat,\r\n      setIndexCounter,\r\n    indexCounter,\r\n    setColor,\r\n    setRightAnswer,\r\n    questions,\r\n    newQuestion,\r\n    setNewQuestion,\r\n  } = context;\r\n\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function incrementSeconds() {\r\n      setSeconds((prev) => prev + 1);\r\n    }\r\n    setInterval(incrementSeconds, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    seconds === 16 && setNewQuestion(true);\r\n    seconds === 16 && setSeconds(0);\r\n\r\n    seconds <= 15 && setNewQuestion(false);\r\n    message && setSeconds(0);\r\n  }, [seconds]);\r\n\r\n  useEffect(() => {\r\n    newQuestion &&\r\n      fetch(\r\n        `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\r\n\r\n    setRightAnswer(\"\");\r\n  }, [newQuestion]);\r\n\r\n  return (\r\n    <div className=\"question-timer\">\r\n      <span className=\"sec\">{seconds}</span>\r\n\r\n      <span style={{ fontSize: \"20px\", paddingTop: \"20px\" }}>\r\n        U have 15 secs for each Question !\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionTimer;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;EACA,MAAM;IACJG,YADI;IAEJC,OAFI;IAGJC,UAHI;IAIFC,IAJE;IAKFC,GALE;IAMFC,eANE;IAOJC,YAPI;IAQJC,QARI;IASJC,cATI;IAUJC,SAVI;IAWJC,WAXI;IAYJC;EAZI,IAaFZ,OAbJ;EAeA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,SAASoB,gBAAT,GAA4B;MAC1BD,UAAU,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;IACD;;IACDC,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;EACD,CALQ,EAKN,EALM,CAAT;EAOApB,SAAS,CAAC,MAAM;IACdkB,OAAO,KAAK,EAAZ,IAAkBD,cAAc,CAAC,IAAD,CAAhC;IACAC,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B;IAEAD,OAAO,IAAI,EAAX,IAAiBD,cAAc,CAAC,KAAD,CAA/B;IACAV,OAAO,IAAIY,UAAU,CAAC,CAAD,CAArB;EACD,CANQ,EAMN,CAACD,OAAD,CANM,CAAT;EAQAlB,SAAS,CAAC,MAAM;IACdgB,WAAW,IACTO,KAAK,CACF,gEAA+Dd,IAAK,gBAAeC,GAAI,EADrF,CAAL,CAGGc,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAUrB,YAAY,CAACqB,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAL,CAJ9B,CADF;IAOAhB,cAAc,CAAC,EAAD,CAAd;EACD,CATQ,EASN,CAACE,WAAD,CATM,CAAT;EAWA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAM,SAAS,EAAC,KAAhB;MAAA,UAAuBE;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAM,KAAK,EAAE;QAAEa,QAAQ,EAAE,MAAZ;QAAoBC,UAAU,EAAE;MAAhC,CAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtDD;;GAAM5B,a;;KAAAA,a;AAwDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}