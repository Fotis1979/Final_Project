{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport \"../../../styling/questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    diff,\n    cat,\n    setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion,\n    questionArray,\n    setWrongAnswers,\n    rightAnswer,\n    setQuestionArray,\n    gameOver,\n    setGameOver,\n    seconds,\n    setSeconds,\n    wrongAnswers\n  } = context;\n  useEffect(() => {\n    function incrementSeconds() {\n      gameOver === false && setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n    gameOver === true && clearInterval(incrementSeconds);\n  }, [gameOver]);\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0); // message && setSeconds(0);\n  }, [seconds]); // useEffect(() => {\n  //   newQuestion &&\n  //     fetch(\n  //       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n  //   setRightAnswer(\"\");\n  // }, [newQuestion]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec--sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionTimer, \"LH+0QL25+reXST9pi8Nhe127lCg=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"names":["useEffect","useState","useContext","MyContext","QuestionTimer","context","setQuestions","message","setMessage","diff","cat","setIndexCounter","indexCounter","setColor","setRightAnswer","questions","newQuestion","setNewQuestion","questionArray","setWrongAnswers","rightAnswer","setQuestionArray","gameOver","setGameOver","seconds","setSeconds","wrongAnswers","incrementSeconds","prev","setInterval","clearInterval"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nimport \"../../../styling/questions.css\";\n\nconst QuestionTimer = () => {\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    diff,\n    cat,\n    setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion,\n    questionArray,\n    setWrongAnswers,\n    rightAnswer,\n    setQuestionArray,\n    gameOver,\n    setGameOver,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n  } = context;\n\n  useEffect(() => {\n    function incrementSeconds() {\n      gameOver === false && setSeconds((prev) => prev + 1);\n    }\n    setInterval(incrementSeconds, 1000);\n\n    gameOver === true && clearInterval(incrementSeconds);\n  }, [gameOver]);\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0);\n    // message && setSeconds(0);\n  }, [seconds]);\n\n  // useEffect(() => {\n  //   newQuestion &&\n  //     fetch(\n  //       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n\n  //   setRightAnswer(\"\");\n  // }, [newQuestion]);\n\n  return (\n    <div className=\"timer\">\n      <span className=\"sec--sec\">{seconds}</span>\n\n      <span>U have 15 secs for each Question !</span>\n    </div>\n  );\n};\n\nexport default QuestionTimer;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAO,gCAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;EACA,MAAM;IACJG,YADI;IAEJC,OAFI;IAGJC,UAHI;IAIJC,IAJI;IAKJC,GALI;IAMJC,eANI;IAOJC,YAPI;IAQJC,QARI;IASJC,cATI;IAUJC,SAVI;IAWJC,WAXI;IAYJC,cAZI;IAaJC,aAbI;IAcJC,eAdI;IAeJC,WAfI;IAgBJC,gBAhBI;IAiBJC,QAjBI;IAkBJC,WAlBI;IAmBJC,OAnBI;IAoBJC,UApBI;IAqBJC;EArBI,IAsBFrB,OAtBJ;EAwBAL,SAAS,CAAC,MAAM;IACd,SAAS2B,gBAAT,GAA4B;MAC1BL,QAAQ,KAAK,KAAb,IAAsBG,UAAU,CAAEG,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAhC;IACD;;IACDC,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;IAEAL,QAAQ,KAAK,IAAb,IAAqBQ,aAAa,CAACH,gBAAD,CAAlC;EACD,CAPQ,EAON,CAACL,QAAD,CAPM,CAAT;EAQAtB,SAAS,CAAC,MAAM;IACd;IACAwB,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B,CAFc,CAGd;EACD,CAJQ,EAIN,CAACD,OAAD,CAJM,CAAT,CAlC0B,CAwC1B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,wBACE;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4BA;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA1DD;;GAAMpB,a;;KAAAA,a;AA4DN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}