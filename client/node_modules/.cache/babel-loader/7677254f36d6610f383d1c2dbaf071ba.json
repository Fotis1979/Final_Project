{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\nimport \"../../../styling/questions.css\";\nimport Popup from \"../../Popup/Popup\";\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\"; //import '../../../styling/questionBodyWithTime.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    cat,\n    diff,\n    setDiff,\n    setCat,\n    score,\n    setScore,\n    setWrongAnswers,\n    answerPopup,\n    setAnswerPopup\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 + 1 && nav(\"/game_over\");\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    setAnswerPopup(true);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n      setSelected();\n    } else setError(true);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  console.log(answers);\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n  useEffect(() => {\n    seconds === 15 && setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  }, [seconds]); // !**********!***************!******!********!\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n  // !**********!***************!******!********!\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n\n  console.log(results[indexCounter].correctAnswer); // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Please select an option first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qa--section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions--section\",\n        children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers--section\",\n        children: answers.sort().map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-items\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: el,\n            className: `singleOption  ${selected && handleSelect(el)}`,\n            onClick: () => handleCheck(el),\n            disabled: selected,\n            children: index + 1 + \".\" + el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cat2\",\n        children: [\"Category : \", results[indexCounter].category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: diff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), !selected && (hints === 1 || hints >= 2) && wrongAnswers[indexCounter].length >= 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Counter\",\n        onClick: () => pop(wrongAnswers[indexCounter]),\n        children: hints >= 2 ? \"DoubleClick for 50/50 CHANCE\" : hints === 1 && \"useHint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), \")}\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next--btn\",\n        onClick: nextHandler,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), selected === rightAnswer[indexCounter] && /*#__PURE__*/_jsxDEV(Popup, {\n        trigger: answerPopup,\n        setTrigger: setAnswerPopup,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), selected !== rightAnswer[indexCounter] && /*#__PURE__*/_jsxDEV(Popup, {\n        trigger: answerPopup,\n        setTrigger: setAnswerPopup,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"wrong answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionTimer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionBody, \"eSBGSGXczTJDC7HlKFoes63TPms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["useContext","useState","useEffect","useNavigate","MyContext","arrayRandomize","Counter","Timer","QuestionCounter","QuestionTimer","Rewards","Nav","Nav2","Popup","ErrorMessage","QuestionBody","context","loading","number","setNumber","eror","hints","setHints","results","email","seconds","setSeconds","wrongAnswers","rightAnswer","questionArray","randomAnswers","setRandomAnswers","cat","diff","setDiff","setCat","score","setScore","setWrongAnswers","answerPopup","setAnswerPopup","error","setError","selected","setSelected","indexCounter","setIndexCounter","nav","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","map","el","console","log","correctAnswer","sort","index","category","length","pop"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\n\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\n\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Rewards from \"../rewards/Rewards\";\n\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\n\nimport \"../../../styling/questions.css\";\nimport Popup from \"../../Popup/Popup\";\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\";\n//import '../../../styling/questionBodyWithTime.css';\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    cat,\n    diff,\n    setDiff,\n    setCat,\n    score,\n    setScore,\n    setWrongAnswers,\n    answerPopup,\n    setAnswerPopup,\n  } = context;\n\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n\n  indexCounter === number - 1 + 1 && nav(\"/game_over\");\n\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    setAnswerPopup(true);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n      setSelected();\n    } else setError(true);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  console.log(answers);\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  useEffect(() => {\n    seconds === 15 &&\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  }, [seconds]);\n\n  // !**********!***************!******!********!\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n  // !**********!***************!******!********!\n\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <>\n      <Nav />\n      <Rewards />\n\n      {error && <ErrorMessage>Please select an option first</ErrorMessage>}\n      <div className=\"qa--section\">\n        <div className=\"questions--section\">\n          Q{indexCounter + 1} . {questionArray[indexCounter]}\n        </div>\n        <div className=\"answers--section\">\n          {answers.sort().map((el, index) => (\n            <div key={index} className=\"align-items\">\n              <button\n                value={el}\n                className={`singleOption  ${selected && handleSelect(el)}`}\n                key={el}\n                onClick={() => handleCheck(el)}\n                disabled={selected}\n              >\n                {index + 1 + \".\" + el}\n              </button>\n            </div>\n          ))}\n        </div>\n        <p className=\"cat2\">Category : {results[indexCounter].category}</p>\n        <p>{diff}</p>\n        {!selected &&\n          (hints === 1 || hints >= 2) &&\n          wrongAnswers[indexCounter].length >= 2 && (\n            <button\n              className=\"Counter\"\n              onClick={() => pop(wrongAnswers[indexCounter])}\n            >\n              {hints >= 2\n                ? \"DoubleClick for 50/50 CHANCE\"\n                : hints === 1 && \"useHint\"}\n            </button>\n          )}\n        )}\n        <button className=\"next--btn\" onClick={nextHandler}>\n          next\n        </button>\n        {selected === rightAnswer[indexCounter] && (\n          <Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n            <p>Correct answer</p>\n          </Popup>\n        )}\n        {selected !== rightAnswer[indexCounter] && (\n          <Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n            <p>wrong answer</p>\n          </Popup>\n        )}\n        <QuestionTimer />\n        <QuestionCounter />\n        {/*<Counter />*/}\n      </div>\n    </>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,gCAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,iCAAzB,C,CACA;;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAMC,OAAO,GAAGhB,UAAU,CAACI,SAAD,CAA1B;EACA,MAAM;IACJa,OADI;IAEJC,MAFI;IAGJC,SAHI;IAIJC,IAJI;IAKJC,KALI;IAMJC,QANI;IAOJC,OAPI;IAQJC,KARI;IASJC,OATI;IAUJC,UAVI;IAWJC,YAXI;IAYJC,WAZI;IAaJC,aAbI;IAcJC,aAdI;IAeJC,gBAfI;IAgBJC,GAhBI;IAiBJC,IAjBI;IAkBJC,OAlBI;IAmBJC,MAnBI;IAoBJC,KApBI;IAqBJC,QArBI;IAsBJC,eAtBI;IAuBJC,WAvBI;IAwBJC;EAxBI,IAyBFxB,OAzBJ;EA2BA,MAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoBzC,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAAC0C,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,EAAxC;EACA,MAAM,CAAC4C,YAAD,EAAeC,eAAf,IAAkC7C,QAAQ,CAAC,CAAD,CAAhD,CA/ByB,CAiCzB;EACA;EACA;;EAEA,MAAM8C,GAAG,GAAG5C,WAAW,EAAvB;EAEA0C,YAAY,KAAK3B,MAAM,GAAG,CAAT,GAAa,CAA9B,IAAmC6B,GAAG,CAAC,YAAD,CAAtC;;EAEA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1B,IAAIN,QAAQ,KAAKM,CAAb,IAAkBN,QAAQ,KAAKf,WAAW,CAACiB,YAAD,CAA9C,EACE,OAAO,QAAP,CADF,KAEK,IAAIF,QAAQ,KAAKM,CAAb,IAAkBN,QAAQ,KAAKf,WAAW,CAACiB,YAAD,CAA9C,EACH,OAAO,OAAP,CADG,KAEA,IAAII,CAAC,KAAKrB,WAAW,CAACiB,YAAD,CAArB,EAAqC,OAAO,QAAP;EAC3C,CAND;;EAOA,MAAMK,WAAW,GAAID,CAAD,IAAO;IACzBL,WAAW,CAACK,CAAD,CAAX;IACAT,cAAc,CAAC,IAAD,CAAd;IACA,IAAIS,CAAC,KAAKrB,WAAW,CAACiB,YAAD,CAArB,EAAqCR,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;IACrCM,QAAQ,CAAC,KAAD,CAAR;EACD,CALD;;EAOA,MAAMS,WAAW,GAAG,MAAM;IACxB;IACA,IAAIR,QAAJ,EAAc;MACZG,eAAe,CAAEM,gBAAD,IAAsBA,gBAAgB,GAAG,CAA1C,CAAf;MACAR,WAAW;IACZ,CAHD,MAGOF,QAAQ,CAAC,IAAD,CAAR;EACR,CAND;;EAQA,MAAMW,OAAO,GAAG,EAAhB;EACAA,OAAO,CAACC,IAAR,CAAa1B,WAAW,CAACiB,YAAD,CAAxB;EAEAlB,YAAY,CAACkB,YAAD,CAAZ,CAA2BU,GAA3B,CAAgCC,EAAD,IAAQH,OAAO,CAACC,IAAR,CAAaE,EAAb,CAAvC;EAEAC,OAAO,CAACC,GAAR,CAAYL,OAAZ;EAEAnD,SAAS,CAAC,MAAM;IACd6B,gBAAgB,CAAC1B,cAAc,CAACgD,OAAD,CAAf,CAAhB;EACD,CAFQ,EAEN,CAACR,YAAD,CAFM,CAAT;EAIA3C,SAAS,CAAC,MAAM;IACduB,OAAO,KAAK,EAAZ,IACEqB,eAAe,CAAEM,gBAAD,IAAsBA,gBAAgB,GAAG,CAA1C,CADjB;EAED,CAHQ,EAGN,CAAC3B,OAAD,CAHM,CAAT,CA1EyB,CA+EzB;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EACAgC,OAAO,CAACC,GAAR,CAAYnC,OAAO,CAACsB,YAAD,CAAP,CAAsBc,aAAlC,EAxFyB,CAyFzB;;EAEA,IAAI1C,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIG,IAAJ,EAAU,oBAAO;IAAA,UAAIA;EAAJ;IAAA;IAAA;IAAA;EAAA,QAAP;EAEV,oBACE;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFF,EAIGqB,KAAK,iBAAI,QAAC,YAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJZ,eAKE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAK,SAAS,EAAC,oBAAf;QAAA,gBACII,YAAY,GAAG,CADnB,SACyBhB,aAAa,CAACgB,YAAD,CADtC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,kBAAf;QAAA,UACGQ,OAAO,CAACO,IAAR,GAAeL,GAAf,CAAmB,CAACC,EAAD,EAAKK,KAAL,kBAClB;UAAiB,SAAS,EAAC,aAA3B;UAAA,uBACE;YACE,KAAK,EAAEL,EADT;YAEE,SAAS,EAAG,iBAAgBb,QAAQ,IAAIK,YAAY,CAACQ,EAAD,CAAK,EAF3D;YAIE,OAAO,EAAE,MAAMN,WAAW,CAACM,EAAD,CAJ5B;YAKE,QAAQ,EAAEb,QALZ;YAAA,UAOGkB,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkBL;UAPrB,GAGOA,EAHP;YAAA;YAAA;YAAA;UAAA;QADF,GAAUK,KAAV;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAJF,eAmBE;QAAG,SAAS,EAAC,MAAb;QAAA,0BAAgCtC,OAAO,CAACsB,YAAD,CAAP,CAAsBiB,QAAtD;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBF,eAoBE;QAAA,UAAI7B;MAAJ;QAAA;QAAA;QAAA;MAAA,QApBF,EAqBG,CAACU,QAAD,KACEtB,KAAK,KAAK,CAAV,IAAeA,KAAK,IAAI,CAD1B,KAECM,YAAY,CAACkB,YAAD,CAAZ,CAA2BkB,MAA3B,IAAqC,CAFtC,iBAGG;QACE,SAAS,EAAC,SADZ;QAEE,OAAO,EAAE,MAAMC,GAAG,CAACrC,YAAY,CAACkB,YAAD,CAAb,CAFpB;QAAA,UAIGxB,KAAK,IAAI,CAAT,GACG,8BADH,GAEGA,KAAK,KAAK,CAAV,IAAe;MANrB;QAAA;QAAA;QAAA;MAAA,QAxBN,qBAkCE;QAAQ,SAAS,EAAC,WAAlB;QAA8B,OAAO,EAAE8B,WAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlCF,EAqCGR,QAAQ,KAAKf,WAAW,CAACiB,YAAD,CAAxB,iBACC,QAAC,KAAD;QAAO,OAAO,EAAEN,WAAhB;QAA6B,UAAU,EAAEC,cAAzC;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAtCJ,EA0CGG,QAAQ,KAAKf,WAAW,CAACiB,YAAD,CAAxB,iBACC,QAAC,KAAD;QAAO,OAAO,EAAEN,WAAhB;QAA6B,UAAU,EAAEC,cAAzC;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA3CJ,eA+CE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QA/CF,eAgDE,QAAC,eAAD;QAAA;QAAA;QAAA;MAAA,QAhDF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AA2DD,CAzJD;;GAAMzB,Y;UAqCQZ,W;;;KArCRY,Y;AA2JN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}