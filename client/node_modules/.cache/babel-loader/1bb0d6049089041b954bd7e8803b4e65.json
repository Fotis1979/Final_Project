{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    color,\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    number,\n    hints,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const questionArray = results.map(item => item.question);\n  const wrongAnswers = results.map(item => item.incorrectAnswers);\n  const rightAnswer = results.map(item => item.correctAnswer); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  console.log(rightAnswer[indexCounter]);\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n  console.log(answers.rightAnswer);\n  console.log(\"answers are :\", answers);\n  console.log(randomAnswers);\n  console.log(rightAnswer);\n  console.log(results[indexCounter].correctAnswer);\n  console.log(results[indexCounter].category);\n\n  const pe = answers => {\n    answers.push(\"ee\");\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              name: el,\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected,\n              children: index + 1 + \".\" + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), hints === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pe,\n          children: \"USE HINT !!! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"BA4384udARwxXUJJju118ZTwXUA=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","Rewards","QuestionBody","context","color","loading","eror","results","allAnswers","questions","lock","setLock","randomAnswers","setRandomAnswers","number","hints","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","questionArray","map","item","question","wrongAnswers","incorrectAnswers","rightAnswer","correctAnswer","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","console","log","answers","push","el","category","pe","index"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    color,\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    number,\n    hints,\n    score,\n    setScore,\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  \n  const questionArray = results.map((item) => item.question);\n  const wrongAnswers = results.map((item) => item.incorrectAnswers);\n  const rightAnswer = results.map((item) => item.correctAnswer);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n  console.log(rightAnswer[indexCounter]);\n\n  const answers = [];\n\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  console.log(answers.rightAnswer);\n  console.log(\"answers are :\", answers);\n  console.log(randomAnswers);\n  console.log(rightAnswer);\n\n  console.log(results[indexCounter].correctAnswer);\n\n  console.log(results[indexCounter].category);\n\n  const pe = (answers) => {\n\n    answers.push(\"ee\")\n  }\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <main>\n      <Rewards />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          {<div className=\"ans-sec\">\n            {randomAnswers.map((el, index) => (\n              <div className=\"align-items\">\n                <button\n                  name={el}\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el) }\n                  disabled={selected}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n\n              </div>\n            ))}\n          </div>}\n\n          <button onClick={nextHandler}>next</button>\n   {   hints ===2  &&   <button  onClick={pe\n}>USE HINT !!! </button>}\n        </header>\n      </div>\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      <Timer />\n      <Counter />\n\n    </main>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}