{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\components\\\\authentication\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../../styling/form.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    email,\n    setEmail,\n    pass,\n    setPass\n  } = context;\n  const navigate = useNavigate(); // useEffect(() => {\n  //   if (localStorage.getItem(\"token\")) {\n  //     navigate(\"/profile\");\n  //   }\n  // }, []);\n\n  console.log(\"email:\", email);\n  console.log(\"pass:\", pass);\n  console.log({\n    email,\n    pass\n  });\n\n  const inputHandler = e => {\n    //console.log(e);\n    switch (e.target.name) {\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      case \"pass\":\n        setPass(e.target.value);\n        break;\n\n      default:\n        console.error(`There's a problem. Please check the event listener.`);\n        break;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  const loginHandler = () => {\n    const url = \"http://localhost:8080/auth/login\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        pass\n      })\n    };\n    fetch(url, options).then(response => response.json()).then(result => {\n      if (result.token !== undefined) {\n        localStorage.setItem(\"token\", result.token);\n        localStorage.setItem(\"email\", email);\n        setEmail(email);\n        navigate(\"/settings\");\n      } else {\n        alert(result.msg);\n      } //alert(result);\n\n    });\n  };\n\n  const registerHandler = () => {\n    const url = \"http://localhost:8080/auth/register\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        pass\n      })\n    };\n    fetch(url, options).then(response => response.text()).then(result => {\n      alert(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email Address\",\n      value: email,\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"pass\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: pass,\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: loginHandler,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register-btn\",\n        onClick: registerHandler,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"DvXK9z+tvkPaqmqUDKpQOBpif7M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","MyContext","Form","context","email","setEmail","pass","setPass","navigate","console","log","inputHandler","e","target","name","value","error","submitHandler","preventDefault","loginHandler","url","options","method","headers","body","JSON","stringify","fetch","then","response","json","result","token","undefined","localStorage","setItem","alert","msg","registerHandler","text"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/components/authentication/Form.jsx"],"sourcesContent":["import \"../../styling/form.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MyContext from \"../../context/MyContext\";\r\nconst Form = () => {\r\n  const context = useContext(MyContext);\r\n  const { email, setEmail, pass, setPass } = context;\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem(\"token\")) {\r\n  //     navigate(\"/profile\");\r\n  //   }\r\n  // }, []);\r\n\r\n  console.log(\"email:\", email);\r\n  console.log(\"pass:\", pass);\r\n  console.log({ email, pass });\r\n\r\n  const inputHandler = (e) => {\r\n    //console.log(e);\r\n    switch (e.target.name) {\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        break;\r\n\r\n      case \"pass\":\r\n        setPass(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        console.error(`There's a problem. Please check the event listener.`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    const url = \"http://localhost:8080/auth/login\";\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, pass }),\r\n    };\r\n\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.token !== undefined) {\r\n          localStorage.setItem(\"token\", result.token);\r\n          localStorage.setItem(\"email\", email);\r\n          setEmail(email);\r\n          navigate(\"/settings\");\r\n        } else {\r\n          alert(result.msg);\r\n        }\r\n        //alert(result);\r\n      });\r\n  };\r\n\r\n  const registerHandler = () => {\r\n    const url = \"http://localhost:8080/auth/register\";\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, pass }),\r\n    };\r\n\r\n    fetch(url, options)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        alert(result);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        name=\"email\"\r\n        type=\"email\"\r\n        placeholder=\"Email Address\"\r\n        value={email}\r\n        onChange={inputHandler}\r\n      />\r\n\r\n      <input\r\n        name=\"pass\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={pass}\r\n        onChange={inputHandler}\r\n      />\r\n      <div>\r\n        <button className=\"login-btn\" onClick={loginHandler}>\r\n          Login\r\n        </button>\r\n        <button className=\"register-btn\" onClick={registerHandler}>\r\n          Register\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}