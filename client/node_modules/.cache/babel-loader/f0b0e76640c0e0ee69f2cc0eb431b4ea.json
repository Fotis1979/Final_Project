{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    wrongAnswers,\n    setWrongAnswers,\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n  const questionArray = results.map(item => item.question);\n  useEffect(() => {\n    results.map(item => setWrongAnswers(item.incorrectAnswers));\n  }, [setWrongAnswers]);\n  const rightAnswer = results.map(item => item.correctAnswer);\n  console.log(wrongAnswers); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  console.log(rightAnswer[indexCounter]); // console.log(indexCounter);\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers !== undefined && wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]); //   useEffect(() => {\n  //     answers.sort(() => 0.5 - Math.random())\n  // },[indexCounter])\n\n  console.log(answers[0]);\n  console.log(\"answers are :\", answers);\n  console.log(randomAnswers);\n  console.log(rightAnswer);\n  console.log(results[indexCounter].correctAnswer); // const testHandler = (e) => {\n  //   console.log(e.target.value);\n  //   if (e.target.value === rightAnswer[indexCounter]) {\n  //     console.log(\"correct\");\n  //     setColor(\"green\");\n  //     // e.target.style.backgroundColor = \"green\";\n  //   } else {\n  //     // e.target.style.backgroundColor = \"red\";\n  //     setColor(\"red\");\n  //     console.log(\"wrong\");\n  //   }\n  // };\n\n  console.log(results[indexCounter].category); // const LockButtons = () => {\n  //   color ? setLock(true) : setLock(false);\n  // };\n  // useEffect(() => {\n  //   LockButtons();\n  // }, [color]);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quest-sec\",\n          children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ans-sec\",\n          children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              name: el,\n              value: el,\n              className: `singleOption  ${selected && handleSelect(el)}`,\n              onClick: () => handleCheck(el),\n              disabled: selected //onClick={(e) => testHandler(e)}\n              // className=\"answers-btn\"\n              //  style={{ backgroundColor: `${color}` }}\n              ,\n              children: index + 1 + \".\" + el\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionBody, \"yVeeRiOb8HwvQDh44toWeGSZnaE=\");\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["React","MyContext","Counter","QuestionCounter","QuestionTimer","Timer","useContext","useState","useEffect","arrayRandomize","Rewards","QuestionBody","context","wrongAnswers","setWrongAnswers","loading","eror","results","allAnswers","questions","lock","setLock","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","questionArray","map","item","question","incorrectAnswers","rightAnswer","correctAnswer","console","log","handleSelect","i","handleCheck","nextHandler","prevIndexCounter","answers","push","undefined","el","category","index"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx"],"sourcesContent":["import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Timer from \"./Timer\";\nimport { useContext, useState, useEffect } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questionBodyWithTime.css\";\nimport Rewards from \"../rewards/Rewards\";\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    wrongAnswers, \n    setWrongAnswers,\n    loading,\n    eror,\n    results,\n    allAnswers,\n    questions,\n    lock,\n    setLock,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore,\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  const questionArray = results.map((item) => item.question);\nuseEffect(() => {\n  results.map((item) => setWrongAnswers(item.incorrectAnswers));\n \n\n},[setWrongAnswers])\n const rightAnswer = results.map((item) => item.correctAnswer);\n console.log(wrongAnswers);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n  console.log(rightAnswer[indexCounter]);\n  // console.log(indexCounter);\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers !== undefined && wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  //   useEffect(() => {\n\n  //     answers.sort(() => 0.5 - Math.random())\n  // },[indexCounter])\nconsole.log(answers[0]);\n  console.log(\"answers are :\", answers);\n  console.log(randomAnswers);\n  console.log(rightAnswer);\n\n  console.log(results[indexCounter].correctAnswer);\n\n  // const testHandler = (e) => {\n  //   console.log(e.target.value);\n  //   if (e.target.value === rightAnswer[indexCounter]) {\n  //     console.log(\"correct\");\n  //     setColor(\"green\");\n  //     // e.target.style.backgroundColor = \"green\";\n  //   } else {\n  //     // e.target.style.backgroundColor = \"red\";\n  //     setColor(\"red\");\n\n  //     console.log(\"wrong\");\n  //   }\n  // };\n  console.log(results[indexCounter].category);\n\n  // const LockButtons = () => {\n  //   color ? setLock(true) : setLock(false);\n  // };\n  // useEffect(() => {\n  //   LockButtons();\n  // }, [color]);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <main>\n      <Rewards />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"quest-sec\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"ans-sec\">\n            {randomAnswers.map((el, index) => (\n              <div className=\"align-items\">\n                <button\n                  name={el}\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el)}\n                  disabled={selected}\n                  //onClick={(e) => testHandler(e)}\n                  // className=\"answers-btn\"\n                  //  style={{ backgroundColor: `${color}` }}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n                {/* <button\n                  value={el}\n                  onClick={lock === false ? (e) => testHandler(e) : undefined}\n                  className=\"answers-btn\"\n                  style={{ backgroundColor: `${color}` }}\n                ></button> */}\n              </div>\n            ))}\n          </div>\n\n          <button onClick={nextHandler}>next</button>\n        </header>\n      </div>\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      <Timer />\n      <Counter />\n      {/* { questions && <p>{questions}</p> } */}\n    </main>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}