{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/settings/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Nav from \"../../pages/Nav\";\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../../context/MyContext\";\nimport \"../../../styling/settings.css\";\nimport Categories from \"../../../Data/Categories\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const ErrorMessage = _ref => {\n    let {\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        padding: 10,\n        marginBottom: 10,\n        borderRadius: 4,\n        backgroundColor: \"orangered\",\n        textAlign: \"center\",\n        color: \"white\",\n        textTransform: \"capitalize\"\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  };\n\n  const context = useContext(MyContext);\n  const {\n    category,\n    setCategory,\n    difficulty,\n    setDifficulty,\n    error,\n    setError,\n    gameMode,\n    setGameMode,\n    number,\n    setNumber\n  } = context;\n  const url = `https://the-trivia-api.com/api/questions?categories=${category}&difficulty=${difficulty}`;\n  const initialState = {\n    results: null,\n    loading: true,\n    error: null\n  };\n  const {\n    results\n  } = useFetch(url, initialState);\n  console.log(results);\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    if (!gameMode || !difficulty || !category) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n      navigate(\"/questions\");\n    }\n  };\n\n  console.log(category);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings\",\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: \"Please Fill all the fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Game-Mode\",\n            className: \"select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"Game-Mode\",\n            onChange: e => setGameMode(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: \"disabled\",\n              selected: \"defaultValue\",\n              children: \"Game Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"multi choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"select\",\n            htmlFor: \"difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"difficulty\",\n            required: \"required\",\n            onChange: e => setDifficulty(e.target.value),\n            value: difficulty,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: \"disabled\",\n              selected: \"defaultValue\",\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"Easy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"Hard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"select\",\n            htmlFor: \"categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"categories\",\n            required: \"required\",\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: \"disabled\",\n              selected: \"defaultValue\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), Categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.value,\n              children: cat.category\n            }, cat.category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"play now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"KLdlVfTVgif20dImS/cZIk8KLmU=\", false, function () {\n  return [useFetch, useNavigate];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","Nav","useContext","useNavigate","MyContext","Categories","useFetch","Settings","ErrorMessage","children","width","padding","marginBottom","borderRadius","backgroundColor","textAlign","color","textTransform","context","category","setCategory","difficulty","setDifficulty","error","setError","gameMode","setGameMode","number","setNumber","url","initialState","results","loading","console","log","navigate","handleSubmit","e","target","value","map","cat"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/settings/Settings.js"],"sourcesContent":["import React from \"react\";\nimport Nav from \"../../pages/Nav\";\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../../context/MyContext\";\nimport \"../../../styling/settings.css\";\nimport Categories from \"../../../Data/Categories\";\nimport useFetch from \"../../../hooks/useFetch\";\n\nconst Settings = () => {\n  const ErrorMessage = ({ children }) => {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 10,\n          borderRadius: 4,\n          backgroundColor: \"orangered\",\n          textAlign: \"center\",\n          color: \"white\",\n          textTransform: \"capitalize\",\n        }}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  const context = useContext(MyContext);\n  const {\n    category,\n    setCategory,\n    difficulty,\n    setDifficulty,\n    error,\n    setError,\n    gameMode,\n    setGameMode,\n    number,\n    setNumber,\n  } = context;\n\n  const url = `https://the-trivia-api.com/api/questions?categories=${category}&difficulty=${difficulty}`;\n\n  const initialState = { results: null, loading: true, error: null };\n  const { results } = useFetch(url, initialState);\n  console.log(results);\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    if (!gameMode || !difficulty || !category) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n      navigate(\"/questions\");\n    }\n  };\n  console.log(category);\n  return (\n    <main>\n      <Nav />\n      <div>\n        <div className=\"content\">\n          <div className=\"settings\">\n            {error && <ErrorMessage>Please Fill all the fields</ErrorMessage>}\n            <label htmlFor=\"Game-Mode\" className=\"select\"></label>\n            <select\n              name=\"Game-Mode\"\n              onChange={(e) => setGameMode(e.target.value)}\n            >\n              <option value=\"\" disabled=\"disabled\" selected=\"defaultValue\">\n                Game Mode\n              </option>\n              <option>random</option>\n              <option>multi choice</option>\n            </select>\n            <label className=\"select\" htmlFor=\"difficulty\"></label>\n            <select\n              name=\"difficulty\"\n              required=\"required\"\n              onChange={(e) => setDifficulty(e.target.value)}\n              value={difficulty}\n            >\n              <option value=\"\" disabled=\"disabled\" selected=\"defaultValue\">\n                Difficulty\n              </option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n            <label className=\"select\" htmlFor=\"categories\"></label>\n            <select\n              name=\"categories\"\n              required=\"required\"\n              onChange={(e) => setCategory(e.target.value)}\n              value={category}\n            >\n              <option value=\"\" disabled=\"disabled\" selected=\"defaultValue\">\n                Category\n              </option>\n              {Categories.map((cat) => (\n                <option key={cat.category} value={cat.value}>\n                  {cat.category}\n                </option>\n              ))}\n            </select>\n            {/* <label className='select' htmlFor=\"number\"></label>\n        <select name='number' required=\"required\" onChange={(e) => setNumber(e.target.value)} value={number}>\n        <option value=\"\" disabled=\"disabled\" selected=\"defaultValue\">Number of Questions</option>\n        <option value='5'>5</option>\n        </select> */}\n          </div>\n          <button onClick={handleSubmit}>play now</button>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}