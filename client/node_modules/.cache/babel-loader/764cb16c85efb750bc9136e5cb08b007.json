{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\TRIVIATEAMS\\\\CODE\\\\Final_Project\\\\client\\\\src\\\\components\\\\authentication\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MyContext from '../../context/MyContext';\nimport '../../styling/form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    email,\n    setEmail,\n    pass,\n    setPass\n  } = context;\n  const navigate = useNavigate(); // useEffect(() => {\n  //   if (localStorage.getItem(\"token\")) {\n  //     navigate(\"/profile\");\n  //   }\n  // }, []);\n\n  console.log('email:', email);\n  console.log('pass:', pass);\n  console.log({\n    email,\n    pass\n  });\n\n  const inputHandler = e => {\n    //console.log(e);\n    switch (e.target.name) {\n      case 'email':\n        setEmail(e.target.value);\n        break;\n\n      case 'pass':\n        setPass(e.target.value);\n        break;\n\n      default:\n        console.error(`There's a problem. Please check the event listener.`);\n        break;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  const loginHandler = () => {\n    const url = 'http://localhost:8080/auth/login';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        pass\n      })\n    };\n    fetch(url, options).then(response => response.json()).then(result => {\n      if (result.token !== undefined) {\n        localStorage.setItem('token', result.token);\n        localStorage.setItem('email', email);\n        setEmail(email);\n        navigate('/settings');\n      } else {\n        alert(result.msg);\n      } //alert(result);\n\n    });\n  };\n\n  const registerHandler = () => {\n    const url = 'http://localhost:8080/auth/register';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        pass\n      })\n    };\n    fetch(url, options).then(response => response.text()).then(result => {\n      alert(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"nav--form\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login--btn\",\n        onClick: loginHandler,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register--btn\",\n        onClick: registerHandler,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email Address\",\n      value: email,\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"pass\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: pass,\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"DvXK9z+tvkPaqmqUDKpQOBpif7M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useEffect","useContext","useNavigate","MyContext","Form","context","email","setEmail","pass","setPass","navigate","console","log","inputHandler","e","target","name","value","error","submitHandler","preventDefault","loginHandler","url","options","method","headers","body","JSON","stringify","fetch","then","response","json","result","token","undefined","localStorage","setItem","alert","msg","registerHandler","text"],"sources":["E:/DEV/TRIVIATEAMS/CODE/Final_Project/client/src/components/authentication/Form.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MyContext from '../../context/MyContext';\r\n\r\nimport '../../styling/form.css';\r\n\r\nconst Form = () => {\r\n\tconst context = useContext(MyContext);\r\n\tconst { email, setEmail, pass, setPass } = context;\r\n\tconst navigate = useNavigate();\r\n\r\n\t// useEffect(() => {\r\n\t//   if (localStorage.getItem(\"token\")) {\r\n\t//     navigate(\"/profile\");\r\n\t//   }\r\n\t// }, []);\r\n\r\n\tconsole.log('email:', email);\r\n\tconsole.log('pass:', pass);\r\n\tconsole.log({ email, pass });\r\n\r\n\tconst inputHandler = (e) => {\r\n\t\t//console.log(e);\r\n\t\tswitch (e.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetEmail(e.target.value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'pass':\r\n\t\t\t\tsetPass(e.target.value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(`There's a problem. Please check the event listener.`);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\tconst loginHandler = () => {\r\n\t\tconst url = 'http://localhost:8080/auth/login';\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ email, pass }),\r\n\t\t};\r\n\r\n\t\tfetch(url, options)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tif (result.token !== undefined) {\r\n\t\t\t\t\tlocalStorage.setItem('token', result.token);\r\n\t\t\t\t\tlocalStorage.setItem('email', email);\r\n\t\t\t\t\tsetEmail(email);\r\n\t\t\t\t\tnavigate('/settings');\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(result.msg);\r\n\t\t\t\t}\r\n\t\t\t\t//alert(result);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst registerHandler = () => {\r\n\t\tconst url = 'http://localhost:8080/auth/register';\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ email, pass }),\r\n\t\t};\r\n\r\n\t\tfetch(url, options)\r\n\t\t\t.then((response) => response.text())\r\n\t\t\t.then((result) => {\r\n\t\t\t\talert(result);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='nav--form' onSubmit={submitHandler}>\r\n\t\t\t<div>\r\n\t\t\t\t<button className='login--btn' onClick={loginHandler}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='register--btn' onClick={registerHandler}>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\tname='email'\r\n\t\t\t\ttype='email'\r\n\t\t\t\tplaceholder='Email Address'\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={inputHandler}\r\n\t\t\t/>\r\n\r\n\t\t\t<input\r\n\t\t\t\tname='pass'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tplaceholder='Password'\r\n\t\t\t\tvalue={pass}\r\n\t\t\t\tonChange={inputHandler}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default Form;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAO,wBAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAClB,MAAMC,OAAO,GAAGJ,UAAU,CAACE,SAAD,CAA1B;EACA,MAAM;IAAEG,KAAF;IAASC,QAAT;IAAmBC,IAAnB;IAAyBC;EAAzB,IAAqCJ,OAA3C;EACA,MAAMK,QAAQ,GAAGR,WAAW,EAA5B,CAHkB,CAKlB;EACA;EACA;EACA;EACA;;EAEAS,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;EACAK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;EACAG,OAAO,CAACC,GAAR,CAAY;IAAEN,KAAF;IAASE;EAAT,CAAZ;;EAEA,MAAMK,YAAY,GAAIC,CAAD,IAAO;IAC3B;IACA,QAAQA,CAAC,CAACC,MAAF,CAASC,IAAjB;MACC,KAAK,OAAL;QACCT,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR;QACA;;MAED,KAAK,MAAL;QACCR,OAAO,CAACK,CAAC,CAACC,MAAF,CAASE,KAAV,CAAP;QACA;;MAED;QACCN,OAAO,CAACO,KAAR,CAAe,qDAAf;QACA;IAXF;EAaA,CAfD;;EAiBA,MAAMC,aAAa,GAAIL,CAAD,IAAO;IAC5BA,CAAC,CAACM,cAAF;EACA,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM;IAC1B,MAAMC,GAAG,GAAG,kCAAZ;IACA,MAAMC,OAAO,GAAG;MACfC,MAAM,EAAE,MADO;MAEfC,OAAO,EAAE;QACR,gBAAgB;MADR,CAFM;MAKfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEtB,KAAF;QAASE;MAAT,CAAf;IALS,CAAhB;IAQAqB,KAAK,CAACP,GAAD,EAAMC,OAAN,CAAL,CACEO,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,MAAD,IAAY;MACjB,IAAIA,MAAM,CAACC,KAAP,KAAiBC,SAArB,EAAgC;QAC/BC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACC,KAArC;QACAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B/B,KAA9B;QACAC,QAAQ,CAACD,KAAD,CAAR;QACAI,QAAQ,CAAC,WAAD,CAAR;MACA,CALD,MAKO;QACN4B,KAAK,CAACL,MAAM,CAACM,GAAR,CAAL;MACA,CARgB,CASjB;;IACA,CAZF;EAaA,CAvBD;;EAyBA,MAAMC,eAAe,GAAG,MAAM;IAC7B,MAAMlB,GAAG,GAAG,qCAAZ;IACA,MAAMC,OAAO,GAAG;MACfC,MAAM,EAAE,MADO;MAEfC,OAAO,EAAE;QACR,gBAAgB;MADR,CAFM;MAKfC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEtB,KAAF;QAASE;MAAT,CAAf;IALS,CAAhB;IAQAqB,KAAK,CAACP,GAAD,EAAMC,OAAN,CAAL,CACEO,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACU,IAAT,EADrB,EAEEX,IAFF,CAEQG,MAAD,IAAY;MACjBK,KAAK,CAACL,MAAD,CAAL;IACA,CAJF;EAKA,CAfD;;EAiBA,oBACC;IAAM,SAAS,EAAC,WAAhB;IAA4B,QAAQ,EAAEd,aAAtC;IAAA,wBACC;MAAA,wBACC;QAAQ,SAAS,EAAC,YAAlB;QAA+B,OAAO,EAAEE,YAAxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAIC;QAAQ,SAAS,EAAC,eAAlB;QAAkC,OAAO,EAAEmB,eAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eASC;MACC,IAAI,EAAC,OADN;MAEC,IAAI,EAAC,OAFN;MAGC,WAAW,EAAC,eAHb;MAIC,KAAK,EAAElC,KAJR;MAKC,QAAQ,EAAEO;IALX;MAAA;MAAA;MAAA;IAAA,QATD,eAiBC;MACC,IAAI,EAAC,MADN;MAEC,IAAI,EAAC,UAFN;MAGC,WAAW,EAAC,UAHb;MAIC,KAAK,EAAEL,IAJR;MAKC,QAAQ,EAAEK;IALX;MAAA;MAAA;MAAA;IAAA,QAjBD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AA2BA,CAzGD;;GAAMT,I;UAGYF,W;;;KAHZE,I;AA0GN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}