{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useState, useContext } from 'react';\nimport MyContext from '../../../context/MyContext';\nimport '../../../styling/questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    diff,\n    cat,\n    setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion,\n    questionArray,\n    setWrongAnswers,\n    rightAnswer,\n    setQuestionArray,\n    seconds,\n    setSeconds,\n    wrongAnswers\n  } = context;\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0); // message && setSeconds(0);\n  }, [seconds]); // useEffect(() => {\n  //   newQuestion &&\n  //     fetch(\n  //       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n  //   setRightAnswer(\"\");\n  // }, [newQuestion]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec--sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionTimer, \"LH+0QL25+reXST9pi8Nhe127lCg=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"names":["useEffect","useState","useContext","MyContext","QuestionTimer","context","setQuestions","message","setMessage","diff","cat","setIndexCounter","indexCounter","setColor","setRightAnswer","questions","newQuestion","setNewQuestion","questionArray","setWrongAnswers","rightAnswer","setQuestionArray","seconds","setSeconds","wrongAnswers","incrementSeconds","prev","setInterval"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState, useContext } from 'react';\nimport MyContext from '../../../context/MyContext';\n\nimport '../../../styling/questions.css';\n\nconst QuestionTimer = () => {\n\tconst context = useContext(MyContext);\n\tconst {\n\t\tsetQuestions,\n\t\tmessage,\n\t\tsetMessage,\n\t\tdiff,\n\t\tcat,\n\t\tsetIndexCounter,\n\t\tindexCounter,\n\t\tsetColor,\n\t\tsetRightAnswer,\n\t\tquestions,\n\t\tnewQuestion,\n\t\tsetNewQuestion,\n\t\tquestionArray,\n\t\tsetWrongAnswers,\n\t\trightAnswer,\n\t\tsetQuestionArray,\n\t\tseconds,\n\t\tsetSeconds,\n\t\twrongAnswers,\n\t} = context;\n\n\tuseEffect(() => {\n\t\tfunction incrementSeconds() {\n\t\t\tsetSeconds((prev) => prev + 1);\n\t\t}\n\t\tsetInterval(incrementSeconds, 1000);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// seconds === 16 && setNewQuestion(true);\n\t\tseconds === 16 && setSeconds(0);\n\t\t// message && setSeconds(0);\n\t}, [seconds]);\n\n\t// useEffect(() => {\n\t//   newQuestion &&\n\t//     fetch(\n\t//       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n\t//     )\n\t//       .then((res) => res.json())\n\t//       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n\n\t//   setRightAnswer(\"\");\n\t// }, [newQuestion]);\n\n\treturn (\n\t\t<div className='timer'>\n\t\t\t<span className='sec--sec'>{seconds}</span>\n\n\t\t\t<span>U have 15 secs for each Question !</span>\n\t\t</div>\n\t);\n};\n\nexport default QuestionTimer;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAO,gCAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC3B,MAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;EACA,MAAM;IACLG,YADK;IAELC,OAFK;IAGLC,UAHK;IAILC,IAJK;IAKLC,GALK;IAMLC,eANK;IAOLC,YAPK;IAQLC,QARK;IASLC,cATK;IAULC,SAVK;IAWLC,WAXK;IAYLC,cAZK;IAaLC,aAbK;IAcLC,eAdK;IAeLC,WAfK;IAgBLC,gBAhBK;IAiBLC,OAjBK;IAkBLC,UAlBK;IAmBLC;EAnBK,IAoBFnB,OApBJ;EAsBAL,SAAS,CAAC,MAAM;IACf,SAASyB,gBAAT,GAA4B;MAC3BF,UAAU,CAAEG,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;IACA;;IACDC,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;EACA,CALQ,EAKN,EALM,CAAT;EAOAzB,SAAS,CAAC,MAAM;IACf;IACAsB,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B,CAFe,CAGf;EACA,CAJQ,EAIN,CAACD,OAAD,CAJM,CAAT,CA/B2B,CAqC3B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,oBACC;IAAK,SAAS,EAAC,OAAf;IAAA,wBACC;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4BA;IAA5B;MAAA;MAAA;MAAA;IAAA,QADD,eAGC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAOA,CAvDD;;GAAMlB,a;;KAAAA,a;AAyDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}