{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\nimport Rewards from \"../rewards/Rewards\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionBody = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    loading,\n    setHighScore,\n    highScore,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore\n  } = context;\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0); // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n  indexCounter === number - 1 + 1 && nav(\"/game_over\");\n\n  const handleSelect = i => {\n    if (selected === i && selected === rightAnswer[indexCounter]) return \"select\";else if (selected === i && selected !== rightAnswer[indexCounter]) return \"wrong\";else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"highScore\", score + highScore);\n  }, [score, highScore]);\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n\n    setIndexCounter(prevIndexCounter => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map(el => answers.push(el));\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]); // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (eror) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: eror\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), (hints === 1 || hints === 2) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rewards--btn\",\n      onClick: () => wrongAnswers[indexCounter + 1].length > 1 && wrongAnswers[indexCounter + 1].pop() && setHints(prev => prev - 1),\n      children: hints === 2 ? \"DoubleClick for 50/50 CHANCHE\" : \"useHint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qa--section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions--section\",\n        children: [\"Q\", indexCounter + 1, \" . \", questionArray[indexCounter]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers--section\",\n        children: randomAnswers.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-items\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: el,\n            className: `singleOption  ${selected && handleSelect(el)}`,\n            onClick: () => handleCheck(el),\n            disabled: selected,\n            children: index + 1 + \".\" + el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next--btn\",\n        onClick: nextHandler,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionBody, \"eSBGSGXczTJDC7HlKFoes63TPms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuestionBody;\nexport default QuestionBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBody\");","map":{"version":3,"names":["useContext","useState","useEffect","useNavigate","MyContext","Counter","Timer","QuestionCounter","QuestionTimer","Nav","Nav2","Rewards","arrayRandomize","QuestionBody","context","loading","setHighScore","highScore","number","setNumber","eror","hints","setHints","results","email","wrongAnswers","rightAnswer","questionArray","randomAnswers","setRandomAnswers","score","setScore","error","setError","selected","setSelected","indexCounter","setIndexCounter","nav","handleSelect","i","handleCheck","localStorage","setItem","nextHandler","prevIndexCounter","answers","push","map","el","length","pop","prev","index"],"sources":["/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\n\nimport Counter from \"./Counter\";\nimport Timer from \"./Timer\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport QuestionTimer from \"./QuestionTimer\";\n\nimport Nav from \"../../pages/Nav\";\nimport Nav2 from \"../../pages/Nav2\";\nimport Rewards from \"../rewards/Rewards\";\n\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport \"../../../styling/questions.css\";\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    setHighScore,\n    highScore,\n    number,\n    setNumber,\n    eror,\n    hints,\n    setHints,\n    results,\n    email,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    randomAnswers,\n    setRandomAnswers,\n    score,\n    setScore,\n  } = context;\n\n  const [error, setError] = useState(false);\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n  const nav = useNavigate();\n\n  indexCounter === number - 1 + 1 && nav(\"/game_over\");\n\n  const handleSelect = (i) => {\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n  const handleCheck = (i) => {\n    setSelected(i);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n\n    setError(false);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"highScore\", score + highScore);\n  }, [score, highScore]);\n\n  const nextHandler = () => {\n    // console.log(\"first\");\n    if (selected) {\n      setSelected();\n    } else setError(\"Please select an option first\");\n    setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  useEffect(() => {\n    setRandomAnswers(arrayRandomize(answers));\n  }, [indexCounter]);\n\n  // console.log(answers);\n  // console.log(\"answers are :\", answers);\n  // console.log(randomAnswers);\n  // console.log(results[indexCounter].correctAnswer);\n  // console.log(results[indexCounter].category);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <>\n      <Nav />\n      <Rewards />\n\n      {(hints === 1 || hints === 2) && (\n        <button\n          className=\"rewards--btn\"\n          onClick={() =>\n            wrongAnswers[indexCounter + 1].length > 1 &&\n            wrongAnswers[indexCounter + 1].pop() &&\n            setHints((prev) => prev - 1)\n          }\n        >\n          {hints === 2 ? \"DoubleClick for 50/50 CHANCHE\" : \"useHint\"}\n        </button>\n      )}\n      <div className=\"qa--section\">\n        <div className=\"questions--section\">\n          Q{indexCounter + 1} . {questionArray[indexCounter]}\n        </div>\n        <div className=\"answers--section\">\n          {randomAnswers.map((el, index) => (\n            <div key={index} className=\"align-items\">\n              <button\n                value={el}\n                className={`singleOption  ${selected && handleSelect(el)}`}\n                key={el}\n                onClick={() => handleCheck(el)}\n                disabled={selected}\n              >\n                {index + 1 + \".\" + el}\n              </button>\n            </div>\n          ))}\n        </div>\n\n        <button className=\"next--btn\" onClick={nextHandler}>\n          next\n        </button>\n      </div>\n\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      {/* <Timer />\n      <Counter /> */}\n      {/* { questions && <p>{questions}</p> } */}\n    </>\n  );\n};\n\nexport default QuestionBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}