{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Counter from './components/Counter';\nimport Timer from './components/Timer';\nimport QuestionTimer from './components/QuestionTimer';\nimport QuestionCounter from './components/QuestionCounter';\nimport x from './assets/images/x.png';\nimport q from './assets/images/q.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // console.log(\"rendered\");\n  const [questions, setQuestions] = useState();\n  const [message, setMessage] = useState();\n  const [color, setColor] = useState();\n  const [wrightAnswer, setWrightAnswer] = useState();\n  const [score, setScore] = useState(0);\n  const [newQuestion, setNewQuestion] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [g, setG] = useState(false); // *** FUNCTION to render new question on every click. ***\n\n  const AnswerSubmit = e => {\n    e.preventDefault(); // *** SET TIMEOUT to wait four seconds until the next fetch. ***\n\n    setTimeout(NewQ, 4000); //  *** FUNCTION to fetch fifty api question objects and choose one of them randomly. ***\n\n    function NewQ() {\n      // console.log(\"fetched\");\n      !color && fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=hard\").then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random()) * 50]));\n      setMessage(\"\");\n      setColor(\"\");\n      setWrightAnswer(\"\");\n    }\n\n    if (e.target.value === questions.correctAnswer) {\n      setMessage(\"WRIGHT ANSWER !!!\");\n      setWrightAnswer(\"\");\n      setColor(\"green\");\n    } else {\n      setMessage(\"WRONG ANSWER !!!\");\n      setColor(\"tomato\");\n      e.target.value !== questions.correctAnswer && setWrightAnswer(questions.correctAnswer);\n    }\n  };\n\n  const LockButtons = () => {\n    color ? setG(true) : setG(false);\n  };\n\n  useEffect(() => {\n    LockButtons();\n  }, [color]);\n  console.log(g); // *** FUNCTION to shuffle the items of the array in a random order. ***\n\n  function RandomArrayShuffle(array) {\n    var currentIndex = questions.incorrectAnswers.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = questions.incorrectAnswers[currentIndex];\n      questions.incorrectAnswers[currentIndex] = questions.incorrectAnswers[randomIndex];\n      questions.incorrectAnswers[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  } // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n  // *** PUSH the Correct answer to the incorrect answers array and shuffle the array running the shuffleArray function in the end. ***\n\n\n  questions && questions.incorrectAnswers.length === 3 && questions.incorrectAnswers.push(questions.correctAnswer) && RandomArrayShuffle(); // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.correctAnswer);\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [questions && /*#__PURE__*/_jsxDEV(QuestionCounter, {\n      newQuestion: newQuestion,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this), questions && /*#__PURE__*/_jsxDEV(Counter, {\n      setColor: setColor,\n      questions: questions,\n      score: score,\n      setScore: setScore,\n      color: color,\n      newQuestion: newQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this), questions && /*#__PURE__*/_jsxDEV(QuestionTimer, {\n      newQuestion: newQuestion,\n      setNewQuestion: setNewQuestion,\n      setQuestions: setQuestions,\n      setWrightAnswer: setWrightAnswer,\n      setColor: setColor,\n      setMessage: setMessage,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }, this), questions && /*#__PURE__*/_jsxDEV(Timer, {\n      gameOver: gameOver,\n      setGameOver: setGameOver,\n      score: score,\n      setScore: setScore,\n      setQuestions: setQuestions,\n      setMessage: setMessage,\n      newQuestion: newQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: [questions && !gameOver && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Questions Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }, this), questions && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" CATEGORY:\", \" \" + questions.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }, this), questions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [\" \", questions.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"questions-section\",\n        children: [questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[0],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: questions.incorrectAnswers[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[1],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[2],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[3],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[3]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), !questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => AnswerSubmit(e),\n          children: gameOver === false ? \"START QUIZ\" : \"ClicK foR NEXT GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), message && !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: `${color}`\n            },\n            children: [message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), wrightAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-display\",\n          children: wrightAnswer !== \"\" && questions && \"Wright Answer : \" + wrightAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${x}`,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 22\n      }, this), !questions && !gameOver && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"start\",\n        src: `${q}`,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qJaBYa0xFZge44rZaBIEsjVuvzk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/Final_Project/client/src/App.jsx"],"names":["useEffect","useState","Counter","Timer","QuestionTimer","QuestionCounter","x","q","App","questions","setQuestions","message","setMessage","color","setColor","wrightAnswer","setWrightAnswer","score","setScore","newQuestion","setNewQuestion","gameOver","setGameOver","g","setG","AnswerSubmit","e","preventDefault","setTimeout","NewQ","fetch","then","res","json","data","Math","floor","random","target","value","correctAnswer","LockButtons","console","log","RandomArrayShuffle","array","currentIndex","incorrectAnswers","length","temporaryValue","randomIndex","push","category","question","backgroundColor","id","undefined"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Counter from './components/Counter'\nimport Timer from './components/Timer';\nimport QuestionTimer from './components/QuestionTimer'\nimport QuestionCounter from './components/QuestionCounter';\nimport x from './assets/images/x.png'\nimport q from './assets/images/q.jpg'\n\n\n\n\n\n\nconst App = () => {\n\n  // console.log(\"rendered\");\n\n  const [questions, setQuestions] = useState()\n  const [message, setMessage] = useState()\n  const [color, setColor] = useState()\n  const [wrightAnswer, setWrightAnswer] = useState()\n  const [score, setScore] = useState(0)\n  const [newQuestion, setNewQuestion] = useState(false)\n  const [gameOver, setGameOver] = useState(false)\n  const [g, setG] = useState(false)\n\n\n\n   \n\n  // *** FUNCTION to render new question on every click. ***\n\n  const AnswerSubmit = (e) => {\n    e.preventDefault()\n\n\n       \n\n\n    // *** SET TIMEOUT to wait four seconds until the next fetch. ***\n\n    setTimeout(NewQ, 4000)\n\n    //  *** FUNCTION to fetch fifty api question objects and choose one of them randomly. ***\n\n    function NewQ() {\n      // console.log(\"fetched\");\n!color &&\n      fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=hard\")\n        .then(res => res.json())\n        .then(data => setQuestions((data[Math.floor(Math.random()) * 50])))\n\n      setMessage(\"\")\n      setColor(\"\")\n      setWrightAnswer(\"\")\n    }\n\n    if (e.target.value === questions.correctAnswer) {\n\n      setMessage(\"WRIGHT ANSWER !!!\")\n      setWrightAnswer(\"\")\n      setColor(\"green\")\n\n    }\n    else {\n\n      setMessage(\"WRONG ANSWER !!!\")\n      setColor(\"tomato\")\n      e.target.value !== questions.correctAnswer && setWrightAnswer(questions.correctAnswer)\n    }\n  }\n\n    const LockButtons = () => {\n        color ? setG(true) : setG(false)\n      \n    }\nuseEffect(() => {\n\n   LockButtons()\n},[color])\n   \n    console.log(g);\n\n\n  // *** FUNCTION to shuffle the items of the array in a random order. ***\n  function RandomArrayShuffle(array) {\n    var currentIndex = questions.incorrectAnswers.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) { \n       \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = questions.incorrectAnswers[currentIndex];\n      questions.incorrectAnswers[currentIndex] = questions.incorrectAnswers[randomIndex];\n      questions.incorrectAnswers[randomIndex] = temporaryValue;    \n     \n\n    }\n  return array\n  }\n\n  // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n\n  // *** PUSH the Correct answer to the incorrect answers array and shuffle the array running the shuffleArray function in the end. ***\n \n  questions && questions.incorrectAnswers.length === 3 && questions.incorrectAnswers.push(questions.correctAnswer) && RandomArrayShuffle()\n\n  \n \n  // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.correctAnswer);\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n  \n  return (\n\n    <main>\n\n      {questions && <QuestionCounter newQuestion={newQuestion} color={color} />}\n      {questions && <Counter setColor={setColor} questions={questions} score={score} setScore={setScore} color={color} newQuestion={newQuestion} />}\n\n      {questions && <QuestionTimer newQuestion={newQuestion} setNewQuestion={setNewQuestion} setQuestions={setQuestions} setWrightAnswer={setWrightAnswer} setColor={setColor} setMessage={setMessage} message={message} />}\n      {questions && <Timer gameOver={gameOver} setGameOver={setGameOver} score={score} setScore={setScore} setQuestions={setQuestions} setMessage={setMessage} newQuestion={newQuestion} />}\n\n      <br /><br />\n\n      <div className=\"canvas\">\n\n        {questions && !gameOver && <h1>Questions Quiz</h1>}\n\n        <br /><br />\n        {questions && <h2> CATEGORY:{\" \" + questions.category}</h2>}\n\n        <br /><br />\n\n        {questions && <div className=\"question\"> {questions.question}</div>}\n\n        <br /> <br />\n\n        {<aside className=\"questions-section\">\n\n\n\n          {questions &&\n            <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[0]} onClick={(g === false ? (e) => AnswerSubmit(e) : undefined)}>{questions.incorrectAnswers[0]}</button>\n          }\n\n\n          {questions &&\n            <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[1]} onClick={(g === false ? (e) => AnswerSubmit(e) : undefined)}> {questions.incorrectAnswers[1]}</button>\n          }\n\n          {questions &&\n            <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[2]} onClick={(g === false ? (e) => AnswerSubmit(e) : undefined)}> {questions.incorrectAnswers[2]}</button>\n          }\n\n          {questions &&\n            <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[3]} onClick={(g === false ? (e) => AnswerSubmit(e) : undefined)}> {questions.incorrectAnswers[3]}</button>\n          }\n\n          {!questions && <button onClick={ (e) =>  AnswerSubmit(e)}>\n            {gameOver === false ? \"START QUIZ\" : \"ClicK foR NEXT GAME\"}</button>}\n\n          <br /><br />\n\n          {message && !gameOver &&\n            <div className=\"w\">\n              <p style={{ color: `${color}` }}>{message} </p>\n            </div>}\n\n          {wrightAnswer &&\n            <p className=\"answer-display\">{wrightAnswer !== \"\" && questions && \"Wright Answer : \" + wrightAnswer}</p>}\n\n        </aside>\n        }  \n        {gameOver && <img src={`${x}`}  alt=\"img\"/>}\n        {!questions && !gameOver && <img className=\"start\" src={`${q}`} alt=\"img\" />}\n        </div>\n    </main>\n  );\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}