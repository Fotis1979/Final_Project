{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/Answers.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport x from \"../../../assets/images/x.png\";\nimport q from \"../../../assets/images/q.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Answers = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    questions,\n    setQuestions,\n    message,\n    setMessage,\n    color,\n    setColor,\n    wrightAnswer,\n    setWrightAnswer,\n    gameOver,\n    g,\n    setG\n  } = context;\n\n  const AnswerSubmit = e => {\n    e.preventDefault(); // *** SET TIMEOUT to wait four seconds until the next fetch. ***\n\n    setTimeout(NewQ, 4000); //  *** FUNCTION to fetch fifty api question objects and choose one of them randomly. ***\n\n    function NewQ() {\n      // console.log(\"fetched\");\n      !color && fetch(\"https://the-trivia-api.com/api/questions?limit=50&difficulty=hard\").then(res => res.json()).then(data => setQuestions(data[Math.floor(Math.random()) * 50]));\n      setMessage(\"\");\n      setColor(\"\");\n      setWrightAnswer(\"\");\n    }\n\n    if (e.target.value === questions.correctAnswer) {\n      setMessage(\"WRIGHT ANSWER !!!\");\n      setWrightAnswer(\"\");\n      setColor(\"green\");\n    } else {\n      setMessage(\"WRONG ANSWER !!!\");\n      setColor(\"tomato\");\n      e.target.value !== questions.correctAnswer && setWrightAnswer(questions.correctAnswer);\n    }\n  };\n\n  const LockButtons = () => {\n    color ? setG(true) : setG(false);\n  };\n\n  useEffect(() => {\n    LockButtons();\n  }, [color]); // *** FUNCTION to shuffle the items of the array in a random order. ***\n\n  function RandomArrayShuffle(array) {\n    var currentIndex = questions.incorrectAnswers.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = questions.incorrectAnswers[currentIndex];\n      questions.incorrectAnswers[currentIndex] = questions.incorrectAnswers[randomIndex];\n      questions.incorrectAnswers[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  } // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n  // *** PUSH the Correct answer to the incorrect answers array and shuffle the array running the shuffleArray function in the end. ***\n\n\n  questions && questions.incorrectAnswers.length === 3 && questions.incorrectAnswers.push(questions.correctAnswer) && RandomArrayShuffle();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: [questions && !gameOver && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Questions Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), questions && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" CATEGORY:\", \" \" + questions.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), questions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [\" \", questions.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"questions-section\",\n        children: [questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[0],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: questions.incorrectAnswers[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[1],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[2],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: `${color}`\n          },\n          id: questions.id,\n          value: questions.incorrectAnswers[3],\n          onClick: g === false ? e => AnswerSubmit(e) : undefined,\n          children: [\" \", questions.incorrectAnswers[3]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), !questions && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => AnswerSubmit(e),\n          children: gameOver === false ? \"START QUIZ\" : \"ClicK foR NEXT GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), message && !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: `${color}`\n            },\n            children: [message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), wrightAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-display\",\n          children: wrightAnswer !== \"\" && questions && \"Wright Answer : \" + wrightAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${x}`,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 22\n      }, this), !questions && !gameOver && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"start\",\n        src: `${q}`,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answers, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n\n_c = Answers;\nexport default Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/Answers.jsx"],"names":["React","useContext","useEffect","MyContext","x","q","Answers","context","questions","setQuestions","message","setMessage","color","setColor","wrightAnswer","setWrightAnswer","gameOver","g","setG","AnswerSubmit","e","preventDefault","setTimeout","NewQ","fetch","then","res","json","data","Math","floor","random","target","value","correctAnswer","LockButtons","RandomArrayShuffle","array","currentIndex","incorrectAnswers","length","temporaryValue","randomIndex","push","category","question","backgroundColor","id","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nimport x from \"../../../assets/images/x.png\";\nimport q from \"../../../assets/images/q.jpg\";\nconst Answers = () => {\n  const context = useContext(MyContext);\n  const {\n    questions,\n    setQuestions,\n    message,\n    setMessage,\n    color,\n    setColor,\n    wrightAnswer,\n    setWrightAnswer,\n\n    gameOver,\n\n    g,\n    setG,\n  } = context;\n\n  const AnswerSubmit = (e) => {\n    e.preventDefault();\n\n    // *** SET TIMEOUT to wait four seconds until the next fetch. ***\n\n    setTimeout(NewQ, 4000);\n\n    //  *** FUNCTION to fetch fifty api question objects and choose one of them randomly. ***\n\n    function NewQ() {\n      // console.log(\"fetched\");\n      !color &&\n        fetch(\n          \"https://the-trivia-api.com/api/questions?limit=50&difficulty=hard\"\n        )\n          .then((res) => res.json())\n          .then((data) => setQuestions(data[Math.floor(Math.random()) * 50]));\n\n      setMessage(\"\");\n      setColor(\"\");\n      setWrightAnswer(\"\");\n    }\n\n    if (e.target.value === questions.correctAnswer) {\n      setMessage(\"WRIGHT ANSWER !!!\");\n      setWrightAnswer(\"\");\n      setColor(\"green\");\n    } else {\n      setMessage(\"WRONG ANSWER !!!\");\n      setColor(\"tomato\");\n      e.target.value !== questions.correctAnswer &&\n        setWrightAnswer(questions.correctAnswer);\n    }\n  };\n\n  const LockButtons = () => {\n    color ? setG(true) : setG(false);\n  };\n  useEffect(() => {\n    LockButtons();\n  }, [color]);\n\n  // *** FUNCTION to shuffle the items of the array in a random order. ***\n  function RandomArrayShuffle(array) {\n    var currentIndex = questions.incorrectAnswers.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = questions.incorrectAnswers[currentIndex];\n      questions.incorrectAnswers[currentIndex] =\n        questions.incorrectAnswers[randomIndex];\n      questions.incorrectAnswers[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  // *** CONSOLE.LOGS for testing ***\n  // questions && console.log(questions.incorrectAnswers.indexOf(questions.correctAnswer));\n  // questions && console.log(questions.incorrectAnswers);\n  // ***************\n\n  // *** PUSH the Correct answer to the incorrect answers array and shuffle the array running the shuffleArray function in the end. ***\n\n  questions &&\n    questions.incorrectAnswers.length === 3 &&\n    questions.incorrectAnswers.push(questions.correctAnswer) &&\n    RandomArrayShuffle();\n  return (\n    <div>\n      <div className=\"canvas\">\n        {questions && !gameOver && <h1>Questions Quiz</h1>}\n        <br />\n        <br />\n        {questions && <h2> CATEGORY:{\" \" + questions.category}</h2>}\n        <br />\n        <br />\n        {questions && <div className=\"question\"> {questions.question}</div>}\n        <br /> <br />\n        {\n          <aside className=\"questions-section\">\n            {questions && (\n              <button\n                style={{ backgroundColor: `${color}` }}\n                id={questions.id}\n                value={questions.incorrectAnswers[0]}\n                onClick={g === false ? (e) => AnswerSubmit(e) : undefined}\n              >\n                {questions.incorrectAnswers[0]}\n              </button>\n            )}\n\n            {questions && (\n              <button\n                style={{ backgroundColor: `${color}` }}\n                id={questions.id}\n                value={questions.incorrectAnswers[1]}\n                onClick={g === false ? (e) => AnswerSubmit(e) : undefined}\n              >\n                {\" \"}\n                {questions.incorrectAnswers[1]}\n              </button>\n            )}\n\n            {questions && (\n              <button\n                style={{ backgroundColor: `${color}` }}\n                id={questions.id}\n                value={questions.incorrectAnswers[2]}\n                onClick={g === false ? (e) => AnswerSubmit(e) : undefined}\n              >\n                {\" \"}\n                {questions.incorrectAnswers[2]}\n              </button>\n            )}\n\n            {questions && (\n              <button\n                style={{ backgroundColor: `${color}` }}\n                id={questions.id}\n                value={questions.incorrectAnswers[3]}\n                onClick={g === false ? (e) => AnswerSubmit(e) : undefined}\n              >\n                {\" \"}\n                {questions.incorrectAnswers[3]}\n              </button>\n            )}\n\n            {!questions && (\n              <button onClick={(e) => AnswerSubmit(e)}>\n                {gameOver === false ? \"START QUIZ\" : \"ClicK foR NEXT GAME\"}\n              </button>\n            )}\n\n            <br />\n            <br />\n\n            {message && !gameOver && (\n              <div className=\"w\">\n                <p style={{ color: `${color}` }}>{message} </p>\n              </div>\n            )}\n\n            {wrightAnswer && (\n              <p className=\"answer-display\">\n                {wrightAnswer !== \"\" &&\n                  questions &&\n                  \"Wright Answer : \" + wrightAnswer}\n              </p>\n            )}\n          </aside>\n        }\n        {gameOver && <img src={`${x}`} alt=\"img\" />}\n        {!questions && !gameOver && (\n          <img className=\"start\" src={`${q}`} alt=\"img\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Answers;\n"]},"metadata":{},"sourceType":"module"}