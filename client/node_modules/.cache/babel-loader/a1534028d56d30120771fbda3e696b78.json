{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionTimer = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n    diff,\n    cat,\n    setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion,\n    questionArray,\n    setWrongAnswers,\n    rightAnswer,\n    setQuestionArray,\n    wrongAnswers\n  } = context;\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds(prev => prev + 1);\n    }\n\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  console.log(wrongAnswers[indexCounter]);\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0); // setQuestionArray(questionArray[indexCounter +1]);\n\n    setWrongAnswers(wrongAnswers[indexCounter + 1]); // setRightAnswer(rightAnswer[indexCounter +1]);\n    // // seconds <= 15 && setNewQuestion(false);\n    // message && setSeconds(0);\n  }, [seconds]); // useEffect(() => {\n  //   newQuestion &&\n  //     fetch(\n  //       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n  //   setRightAnswer(\"\");\n  // }, [newQuestion]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sec\",\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: \"U have 15 secs for each Question !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionTimer, \"1TwYswUJeSou9OOUfvt7sSDf1bw=\");\n\n_c = QuestionTimer;\nexport default QuestionTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTimer\");","map":{"version":3,"names":["React","useEffect","useState","useContext","MyContext","QuestionTimer","context","setQuestions","message","setMessage","diff","cat","setIndexCounter","indexCounter","setColor","setRightAnswer","questions","newQuestion","setNewQuestion","questionArray","setWrongAnswers","rightAnswer","setQuestionArray","wrongAnswers","seconds","setSeconds","incrementSeconds","prev","setInterval","console","log","fontSize","paddingTop"],"sources":["/home/user/Desktop/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nconst QuestionTimer = () => {\n  const context = useContext(MyContext);\n  const {\n    setQuestions,\n    message,\n    setMessage,\n      diff,\n      cat,\n      setIndexCounter,\n    indexCounter,\n    setColor,\n    setRightAnswer,\n    questions,\n    newQuestion,\n    setNewQuestion,\n    questionArray,\n    setWrongAnswers,\n    rightAnswer,\n    setQuestionArray,\n    wrongAnswers\n    \n  } = context;\n\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    function incrementSeconds() {\n      setSeconds((prev) => prev + 1);\n    }\n    setInterval(incrementSeconds, 1000);\n  }, []);\n  console.log(wrongAnswers[indexCounter]);\n\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0);\n    // setQuestionArray(questionArray[indexCounter +1]);\n    setWrongAnswers(wrongAnswers[indexCounter +1]);\n    // setRightAnswer(rightAnswer[indexCounter +1]);\n\n    // // seconds <= 15 && setNewQuestion(false);\n    // message && setSeconds(0);\n  }, [seconds]);\n\n  // useEffect(() => {\n  //   newQuestion &&\n  //     fetch(\n  //       `https://the-trivia-api.com/api/questions?limit=50&difficulty=${diff}&&categories=${cat}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => setQuestions(data[Math.floor(Math.random() * 50)]));\n\n  //   setRightAnswer(\"\");\n  // }, [newQuestion]);\n\n  return (\n    <div className=\"question-timer\">\n      <span className=\"sec\">{seconds}</span>\n\n      <span style={{ fontSize: \"20px\", paddingTop: \"20px\" }}>\n        U have 15 secs for each Question !\n      </span>\n    </div>\n  );\n};\n\nexport default QuestionTimer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;EACA,MAAM;IACJG,YADI;IAEJC,OAFI;IAGJC,UAHI;IAIFC,IAJE;IAKFC,GALE;IAMFC,eANE;IAOJC,YAPI;IAQJC,QARI;IASJC,cATI;IAUJC,SAVI;IAWJC,WAXI;IAYJC,cAZI;IAaJC,aAbI;IAcJC,eAdI;IAeJC,WAfI;IAgBJC,gBAhBI;IAiBJC;EAjBI,IAmBFjB,OAnBJ;EAqBA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,CAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,SAASyB,gBAAT,GAA4B;MAC1BD,UAAU,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;IACD;;IACDC,WAAW,CAACF,gBAAD,EAAmB,IAAnB,CAAX;EACD,CALQ,EAKN,EALM,CAAT;EAMAG,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACV,YAAD,CAAxB;EAEAZ,SAAS,CAAC,MAAM;IACd;IACAuB,OAAO,KAAK,EAAZ,IAAkBC,UAAU,CAAC,CAAD,CAA5B,CAFc,CAGd;;IACAL,eAAe,CAACG,YAAY,CAACV,YAAY,GAAE,CAAf,CAAb,CAAf,CAJc,CAKd;IAEA;IACA;EACD,CATQ,EASN,CAACW,OAAD,CATM,CAAT,CAjC0B,CA4C1B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAM,SAAS,EAAC,KAAhB;MAAA,UAAuBA;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAM,KAAK,EAAE;QAAEO,QAAQ,EAAE,MAAZ;QAAoBC,UAAU,EAAE;MAAhC,CAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAhED;;GAAM3B,a;;KAAAA,a;AAkEN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}