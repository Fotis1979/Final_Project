[{"/home/user/Desktop/Final-Project/Final_Project/client/src/index.js":"1","/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx":"2","/home/user/Desktop/Final-Project/Final_Project/client/src/routers/Routings.jsx":"3","/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyContext.js":"4","/home/user/Desktop/Final-Project/Final_Project/client/src/hooks/useFetch.js":"5","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/GameOver.jsx":"6","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Questions.jsx":"7","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Settings.jsx":"8","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Home.jsx":"9","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx":"10","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx":"11","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/settings/Test.jsx":"12","/home/user/Desktop/Final-Project/Final_Project/client/src/hooks/arrayRandomize.js":"13","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Nav.jsx":"14","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/Counter.jsx":"15","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionCounter.jsx":"16","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx":"17","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/Timer.jsx":"18","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Rewards.jsx":"19","/home/user/Desktop/Final-Project/Final_Project/client/src/components/authentication/Form.jsx":"20","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Hints.jsx":"21","/home/user/Desktop/Final-Project/Final_Project/client/src/components/authentication/Profile.jsx":"22","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/HighScore.jsx":"23","/home/user/Desktop/Final-Project/Final_Project/client/src/components/Popup/Popup.jsx":"24","/home/user/Desktop/Final-Project/Final_Project/client/src/components/errorMessage/ErrorMessage.jsx":"25","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Correct.jsx":"26"},{"size":325,"mtime":1652441235530,"results":"27","hashOfConfig":"28"},{"size":3999,"mtime":1652970463529,"results":"29","hashOfConfig":"28"},{"size":1110,"mtime":1652970379922,"results":"30","hashOfConfig":"28"},{"size":104,"mtime":1652121205179,"results":"31","hashOfConfig":"28"},{"size":572,"mtime":1652970080085,"results":"32","hashOfConfig":"28"},{"size":873,"mtime":1652970080081,"results":"33","hashOfConfig":"28"},{"size":298,"mtime":1652441235530,"results":"34","hashOfConfig":"28"},{"size":1951,"mtime":1652970080081,"results":"35","hashOfConfig":"28"},{"size":461,"mtime":1652476253136,"results":"36","hashOfConfig":"28"},{"size":5452,"mtime":1652970080081,"results":"37","hashOfConfig":"28"},{"size":6753,"mtime":1652970373062,"results":"38","hashOfConfig":"28"},{"size":275,"mtime":1652174197969,"results":"39","hashOfConfig":"28"},{"size":256,"mtime":1652121205179,"results":"40","hashOfConfig":"28"},{"size":888,"mtime":1652950149748,"results":"41","hashOfConfig":"28"},{"size":834,"mtime":1652970080081,"results":"42","hashOfConfig":"28"},{"size":531,"mtime":1652174197969,"results":"43","hashOfConfig":"28"},{"size":1385,"mtime":1652970420114,"results":"44","hashOfConfig":"28"},{"size":1485,"mtime":1652174197969,"results":"45","hashOfConfig":"28"},{"size":369,"mtime":1652640649631,"results":"46","hashOfConfig":"28"},{"size":3636,"mtime":1652640969576,"results":"47","hashOfConfig":"28"},{"size":348,"mtime":1652634546624,"results":"48","hashOfConfig":"28"},{"size":3240,"mtime":1652634711518,"results":"49","hashOfConfig":"28"},{"size":718,"mtime":1652640845333,"results":"50","hashOfConfig":"28"},{"size":396,"mtime":1652950149748,"results":"51","hashOfConfig":"28"},{"size":235,"mtime":1652950149748,"results":"52","hashOfConfig":"28"},{"size":989,"mtime":1652970080085,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a0q0t8",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/Final-Project/Final_Project/client/src/index.js",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyProvider.jsx",["147"],[],"import { useEffect } from \"react\";\nimport MyContext from \"./MyContext\";\nimport { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport \"../../src/App.css\";\n\nconst MyProvider = ({ children }) => {\n  const [message, setMessage] = useState();\n  const [clicked, setClicked] = useState(false);\n  const [streak, setStreak] = useState(0);\n  const [messageB, setMessageB] = useState();\n  const [color, setColor] = useState();\n  const [score, setScore] = useState(0);\n  const [storedScore, setStoredScore] = useState();\n  const [gameMode, setGameMode] = useState();\n  const [seconds, setSeconds] = useState(0);\n  const [error, setError] = useState(false);\n  const [number, setNumber] = useState(33);\n  const [gameDiff, setGameDiff] = useState();\n  const [difficulty, setDifficulty] = useState([\"easy\", \"medium\", \"hard\"]);\n  const [diff, setDiff] = useState(\"easy\");\n  const [cat, setCat] = useState(\"\");\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [hints, setHints] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [questionArray, setQuestionArray] = useState([]);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n  const [selected, setSelected] = useState();\n  const [rightAnswer, setRightAnswer] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [indexCounter, setIndexCounter] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [answerPopup, setAnswerPopup] = useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [isProfileSaved, setIsProfileSaved] = useState(false);\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [loginMsg, setLoginMsg] = useState(\"\");\n  const [highScoreResult, setHighScoreResult] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const url = `https://the-trivia-api.com/api/questions?limit=${number}&&categories=${cat}&&difficulty=${diff}`;\n  const initialState = { results: null, loading: true, eror: null };\n  const { results, loading, eror } = useFetch(url, initialState);\n\n  useEffect(() => {\n    if (results !== null) {\n      setQuestionArray(results.map((item) => item.question));\n      setWrongAnswers(results.map((item) => item.incorrectAnswers));\n      setRightAnswer(results.map((item) => item.correctAnswer));\n    }\n  }, [results]);\n\n  useEffect(() => {\n    console.log(\"GAMEOVER IS :\", gameOver);\n  }, [indexCounter]);\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>'eror'</p>;\n\n  return (\n    <MyContext.Provider\n      value={{\n        highScoreResult,\n        setHighScoreResult,\n        highScore,\n        setHighScore,\n        gameDiff,\n        setGameDiff,\n        answers,\n        clicked,\n        setClicked,\n        streak,\n        setStreak,\n        selected,\n        setSelected,\n        storedScore,\n        setStoredScore,\n        setAnswers,\n        error,\n        setError,\n        questionArray,\n        setQuestionArray,\n        indexCounter,\n        setIndexCounter,\n        wrongAnswers,\n        setWrongAnswers,\n        seconds,\n        setSeconds,\n        randomAnswers,\n        setRandomAnswers,\n        results,\n        loading,\n        eror,\n        cat,\n        gameOver,\n        setGameOver,\n        setCat,\n        diff,\n        setDiff,\n        message,\n        setMessage,\n        messageB,\n        setMessageB,\n        color,\n        setColor,\n        rightAnswer,\n        setRightAnswer,\n        score,\n        setScore,\n        difficulty,\n        setDifficulty,\n        gameMode,\n        setGameMode,\n        number,\n        setNumber,\n        hints,\n        setHints,\n        email,\n        setEmail,\n        pass,\n        setPass,\n\n        birthDate,\n        setBirthDate,\n        isProfileSaved,\n        setIsProfileSaved,\n        loginMsg,\n        setLoginMsg,\n        name,\n        setName,\n        answerPopup,\n        setAnswerPopup,\n      }}\n    >\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/routers/Routings.jsx",["148"],[],"import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"../components/pages/Home\";\nimport GameOver from \"../components/pages/GameOver\";\nimport QuestionBodyNoTime from \"../components/singleplayer/question/QuestionBodyNoTime\";\nimport Settings from \"../components/pages/Settings\";\nimport Test from \"../components/singleplayer/settings/Test\";\nimport QuestionBodyWithTime from \"../components/singleplayer/question/QuestionBodyWithTime\";\nimport Form from \"../components/authentication/Form\";\n\nimport Profile from \"../components/authentication/Profile\";\n\nconst Routings = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/game_over\" element={<GameOver />} />\n      <Route path=\"/questions\" element={<QuestionBodyNoTime />} />\n      <Route path=\"/form\" element={<Form />} />\n      <Route path=\"/profile\" element={<Profile />} />\n      <Route path=\"/settings\" element={<Settings />} />\n      <Route path=\"/timeMode\" element={<QuestionBodyWithTime />} />\n    </Routes>\n  </Router>\n);\n\nexport default Routings;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/context/MyContext.js",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/hooks/useFetch.js",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/GameOver.jsx",[],[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Questions.jsx",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Settings.jsx",["149","150","151","152"],[],"import { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../context/MyContext\";\nimport Nav from \"./Nav\";\nimport \"../../../src/styling/settings.css\";\nimport { Link } from \"react-router-dom\";\nconst Settings = () => {\n\n  const navigate = useNavigate();\n  const context = useContext(MyContext);\n  const {\n    setSeconds,\n    loading,\n    eror,\n    setGameDiff\n  } = context;\n\n  const [mode, setMode] = useState(\"NoTime\");\n  const [s, setS] = useState(\"NoTime\"); \n\n  const gameDifficulty = (e) => {\n    setGameDiff(e.target.value)\n  }\n\n  // const n = (e) => {\n  //   setNumber(e.target.value);\n  // };\n\n  const gameMode = (e) => {\n    setMode(e.target.value);\n    console.log(mode);\n  };\n  \n  const checkHandler = () => {\n    if (mode === \"NoTime\") {\n      navigate(\"/questions\");\n    } else if (mode === \"Time\") {\n      navigate(\"/timeMode\");\n    }\n  };\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <div className=\"qa--section\">\n      <Nav />\n\n      <button className=\"play-btn\" onClick={checkHandler}>\n        PLAY\n      </button>\n      <h1>ChOOSE SETTINGS</h1>\n      <div className=\"settings\">\n      \n        <button className=\"play-btn\" onClick={(e) => gameDifficulty(e)} value={\"easy\"}> BEgiNNer MODE  </button>\n\n        <button className=\"play-btn\" onClick={(e) => gameDifficulty(e)} value={\"medium\"}> AdVanceD MODE  </button>\n\n        <button className=\"play-btn\" onClick={(e) => gameDifficulty(e)} value={\"hard\"}> ExPeRT MODE  </button>\n\n      \n        <label>Game Mode</label>\n\n        <select className=\"settings--mode\" onChange={(e) => gameMode(e)}>\n          <option onChange={(e) => gameMode(e)} value=\"NoTime\">\n            NoTime\n          </option>\n          <option onChange={(e) => gameMode(e)} value=\"Time\">\n            Time\n          </option>\n        </select>\n\n     \n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Home.jsx",["153"],[],"import { Link } from \"react-router-dom\";\n//import '../../styling/home.css';\nimport h1icon from \"../../assets/images/h1 icon.png\";\n\nimport Nav from \"./Nav\";\n\nconst Home = () => {\n  return (\n    <div className=\"page--home\">\n      <Nav />\n\n      <div className=\"home--section\">\n        {/*<h1 className='trivia--h1'>TRIVIA TIME</h1>*/}\n        <img className=\"trivia--banner\" src={`${h1icon}`} alt=\"banner\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyNoTime.jsx",["154","155","156","157","158","159","160","161"],[],"import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyContext from \"../../../context/MyContext\";\nimport QuestionCounter from \"./QuestionCounter\";\nimport Nav from \"../../pages/Nav\";\nimport Hints from '../rewards/Hints'\nimport Counter from \"./Counter\";\nimport Rewards from \"../rewards/Rewards\";\nimport arrayRandomize from '../../../hooks/arrayRandomize';\nimport \"../../../styling/questions.css\";\nimport Popup from '../../Popup/Popup';\nimport ErrorMessage from '../../errorMessage/ErrorMessage';\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    loading,\n    results,\n    setStoredScore,\n    setError,\n    number,\n    eror,\n    hints,\n    setHints,\n    questionArray,\n    wrongAnswers,\n    rightAnswer,\n    score,\n    error,\n    setScore,\n    answerPopup,\n\t\tsetAnswerPopup,\n  } = context;\n\n  const [selected, setSelected] = useState();\n  const [indexCounter, setIndexCounter] = useState(0);\n\n  // console.log(questionArray);\n  // console.log(wrongAnswers);\n  // console.log(rightAnswer);\n\n\n  useEffect(() => {\n    console.log(rightAnswer[indexCounter])\n  }, [indexCounter])\n\n  const nav = useNavigate();\n\n  indexCounter === (number - 1) + 1 && setStoredScore(score)\n  indexCounter === (number - 1) + 1 && nav(\"/game_over\");\n\n  const handleSelect = (i) => {\n\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n\tconst handleCheck = (i) => {\n\t\tsetSelected(i);\n\t\tsetAnswerPopup(true);\n\t\tif (i === rightAnswer[indexCounter]) return setScore(score + 10) ;\n\t\tsetError(false)\n\t\t\n\t};\n\n \tconst nextHandler = () => {\n\t\t// console.log(\"first\");\n\t\tif (selected) {setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n\t\t\tsetSelected();\n\t\t} else setError(true);\n\t\t\n\t};\n\n\n  const answers = [];\n\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  const categories = []\n  categories.push(\"arts\", \"film\", \"food\", \"general knowledge\", \"geography\", \"history\", \"music\", \"science\", \"society\", \"sport\")\n\n  // const x = (e) => {\n  //   setCat(e.target.value);\n  // };\n\n  // useEffect(() => {\n  //   setFirstCat(cat)\n  //   console.log(\"firstCat is :\", cat);\n\n  // }, [])\n\n  const pop = (e) => {\n\n    e.pop()\n    setHints((prev) => (prev - 1))\n  }\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <div>\n      <Nav />\n      <Rewards />\n\t\t\t{error && <ErrorMessage>Please select an option first</ErrorMessage>}\n\n\t\t\t{(hints === 1 || hints === 2) && (\n\t\t\t\t<button\n\t\t\t\t\tclassName='rewards--btn'\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\twrongAnswers[indexCounter + 1].length > 1 &&\n\t\t\t\t\t\twrongAnswers[indexCounter + 1].pop() &&\n\t\t\t\t\t\tsetHints((prev) => prev - 1)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{hints === 2 ? 'DoubleClick for 50/50 CHANCHE' : 'useHint'}\n\t\t\t\t</button>\n\t\t\t)}\n\n      <div className=\"qa--section\">\n        <header className=\"App-header\">\n          <div className=\"questions--section \">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n          <div className=\"answers--section \">\n            {answers.sort().map((el, index) => (\n              <div key={index} className=\"align-items\">\n                <button\n                  value={el}\n                  className={`singleOption  ${selected && handleSelect(el)}`}\n                  key={el}\n                  onClick={() => handleCheck(el)}\n                  disabled={selected}\n                >\n                  {index + 1 + \".\" + el}\n                </button>\n              </div>\n            ))}\n          </div>\n\n          <p className=\"cat\">Category : {results[indexCounter].category}</p>\n          {!selected && (hints === 1 || hints >= 2) && wrongAnswers[indexCounter].length >= 2 &&\n            (\n              <button\n                className=\"Counter\"\n                onClick={() =>\n                  pop(wrongAnswers[indexCounter])\n                }\n              >\n                {hints >= 2 ? \"DoubleClick for 50/50 CHANCE\" : hints === 1 && \"useHint\"}\n              </button>\n            )}\n\n          {/* <QuestionTimer /> */}\n          <button className=\"play-btn\" onClick={nextHandler}>next</button>\n          {selected === rightAnswer[indexCounter]&&<Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n\t\t\t\t\t<p>Correct answer</p></Popup>}\n\t\t\t\t{selected !== rightAnswer[indexCounter]&&<Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n\t\t\t\t\t<p>wrong answer</p></Popup>}\n        </header>\n      </div>\n\n{/* \n      { score % 50 === 0 && score !== 0 && !selected ?\n        <select onChange={(e) => x(e)}>\n          <option >\n            Choose new CateGory\n          </option>\n\n          {arrayRandomize(categories).map(e => e !== firstCat && <option onChange={(e) => x(e)}\n            key={e}\n            value={e}>\n            {e}\n          </option>).slice(7)}\n          <option onChange={() => x(firstCat)} value={firstCat}>\n            YOUR INITIAL CATEGORY\n          </option>\n\n        </select>\n        : setCat(cat)\n      } */}\n\n      {/* !**********!***************!******!********! */}\n      <QuestionCounter />\n      {/* <QuestionTimer /> */}\n      {/* <Timer />\n      <Counter /> */}\n      {/* { questions && <p>{questions}</p> } */}\n  </div>\n  );\n};\n\nexport default QuestionBody;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionBodyWithTime.jsx",["162","163","164","165","166","167","168","169","170","171"],[],"import React from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nimport QuestionTimer from \"./QuestionTimer\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useEffect, useState } from \"react\";\nimport arrayRandomize from \"../../../hooks/arrayRandomize\";\nimport Rewards from \"../rewards/Rewards\";\nimport Nav from \"../../pages/Nav\";\nimport Correct from \"../rewards/Correct\";\nimport Counter from \"./Counter\";\nimport Hints from \"../rewards/Hints\";\nimport \"../../../App.css\";\nimport Popup from \"../../Popup/Popup\";\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\";\n\nconst QuestionBody = () => {\n  const context = useContext(MyContext);\n  const {\n    answerPopup,\n    setAnswerPopup,\n    gameOver,\n    setClicked,\n    setStoredScore,\n    loading,\n    number,\n    eror,\n    streak,\n    hints,\n    setHints,\n    diff,\n    setStreak,\n    setDiff,\n    seconds,\n    setSeconds,\n    wrongAnswers,\n    rightAnswer,\n    questionArray,\n    cat,\n    setCat,\n    firstCat,\n    score,\n    setScore,\n    indexCounter,\n    setIndexCounter,\n    selected,\n    setSelected,\n    results,\n    setGameOver,\n    gameDiff,\n    error,\n    setError,\n  } = context;\n\n  const nav = useNavigate();\n\n  if (indexCounter === number - 1 + 1) {\n    console.log(\"last QUESTion\");\n    setGameOver(true);\n    setStoredScore(score);\n    nav(\"/game_over\");\n  }\n\n  // storedScore && console.log(storedScore);\n\n  const handleSelect = (i) => {\n    setSeconds(0);\n    setClicked(true);\n    if (selected === i && selected === rightAnswer[indexCounter])\n      return \"select\";\n    else if (selected === i && selected !== rightAnswer[indexCounter])\n      return \"wrong\";\n    else if (i === rightAnswer[indexCounter]) return \"select\";\n  };\n\n  useEffect(\n    (i) => {\n      (selected === wrongAnswers[indexCounter][0] ||\n        selected === wrongAnswers[indexCounter][1] ||\n        selected === wrongAnswers[indexCounter][2]) &&\n        setStreak(0);\n    },\n    [selected]\n  );\n\n  const handleCheck = (i) => {\n    setSelected(i);\n    setAnswerPopup(true);\n    if (i === rightAnswer[indexCounter]) setScore(score + 10);\n    setError(false);\n\n    if (i === rightAnswer[indexCounter] && diff === \"easy\") {\n      setScore(score + 6);\n      setError(false);\n    }\n    if (i === rightAnswer[indexCounter] && diff === \"medium\") {\n      setScore(score + 9);\n      setError(false);\n    }\n    if (i === rightAnswer[indexCounter] && diff === \"hard\") {\n      setScore(score + 12);\n      setError(false);\n    }\n    if (\n      i !== rightAnswer[indexCounter] &&\n      diff === \"hard\" &&\n      score !== 0 &&\n      score >= 2\n    ) {\n      setScore(score - 2);\n      score < 2 && setScore(0);\n      setError(false);\n    }\n    if (\n      i !== rightAnswer[indexCounter] &&\n      diff === \"medium\" &&\n      score !== 0 &&\n      score >= 3\n    ) {\n      setScore(score - 2);\n      setError(false);\n    }\n    if (\n      i !== rightAnswer[indexCounter] &&\n      diff === \"easy\" &&\n      score !== 0 &&\n      score >= 4\n    ) {\n      setScore(score - 3);\n      setError(false);\n    }\n  };\n\n  const nextHandler = () => {\n    // !selected && setClicked(false)\n    setSeconds(0);\n    // console.log(\"first\");\n    if (selected) {\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n      setSelected();\n    } else setError(true);\n  };\n\n  const answers = [];\n  answers.push(rightAnswer[indexCounter]);\n  wrongAnswers[indexCounter].map((el) => answers.push(el));\n\n  const categories = [];\n  categories.push(\n    \"arts\",\n    \"film\",\n    \"food\",\n    \"general\",\n    \"geography\",\n    \"history\",\n    \"music\",\n    \"science\",\n    \"society\",\n    \"sport\"\n  );\n\n  useEffect(() => {\n    setCat(arrayRandomize(categories).slice(4));\n  }, []);\n\n  useEffect(() => {\n    indexCounter === indexCounter + 1 &&\n      setCat(categories[Math.floor(Math.random())]);\n    console.log(cat);\n  }, []);\n\n  useEffect(() => {\n    console.log(rightAnswer[indexCounter]);\n  }, [indexCounter]);\n\n  useEffect(() => {\n    gameDiff === \"easy\" &&\n      seconds === 21 &&\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n    gameDiff === \"medium\" &&\n      seconds === 16 &&\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n    gameDiff === \"hard\" &&\n      seconds === 13 &&\n      setIndexCounter((prevIndexCounter) => prevIndexCounter + 1);\n  }, [seconds]);\n\n  indexCounter > 0 && indexCounter <= 11 && setDiff(\"easy\");\n\n  indexCounter >= 11 && indexCounter <= 21 && setDiff(\"medium\");\n\n  indexCounter >= 22 && indexCounter <= 33 && setDiff(\"hard\");\n\n  const ct = (e) => {\n    !selected && setCat(e.target.value);\n    setSeconds(0);\n  };\n\n  const pop = (e) => {\n    e.pop();\n    setHints((prev) => prev - 1);\n  };\n\n  if (loading) return <p>loading ..</p>;\n  if (eror) return <p>{eror}</p>;\n\n  return (\n    <div>\n      <Nav />\n      <Rewards />\n\n      {error && <ErrorMessage>Please select an option first</ErrorMessage>}\n      <div className=\"qa--section\">\n        {\n          <div className=\"questions--section\">\n            Q{indexCounter + 1} . {questionArray[indexCounter]}\n          </div>\n        }\n\n        <div className=\"answers--section\">\n          {answers.sort().map((el, index) => (\n            <div key={index} className=\"align-items\">\n              <button\n                value={el}\n                className={`singleOption  ${selected && handleSelect(el)}`}\n                key={el}\n                onClick={() => handleCheck(el)}\n                disabled={selected}\n              >\n                {index + 1 + \".\" + el}\n              </button>\n            </div>\n          ))}\n\n          <Correct />\n          <p>Your streak : {streak}</p>\n        </div>\n\n        <p className=\"cat2\">Category : {results[indexCounter].category}</p>\n        <p>{diff}</p>\n        {!selected &&\n          (hints === 1 || hints >= 2) &&\n          wrongAnswers[indexCounter].length >= 2 && (\n            <button\n              className=\"Counter\"\n              onClick={() => pop(wrongAnswers[indexCounter])}\n            >\n              {hints >= 2\n                ? \"DoubleClick for 50/50 CHANCE\"\n                : hints === 1 && \"useHint\"}\n            </button>\n          )}\n        {\n          <button className=\"play-btn\" onClick={nextHandler}>\n            next\n          </button>\n        }\n        {selected === rightAnswer[indexCounter] && (\n          <Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n            <p>Correct answer</p>\n          </Popup>\n        )}\n        {selected !== rightAnswer[indexCounter] && (\n          <Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\n            <p>wrong answer</p>\n          </Popup>\n        )}\n\n        {gameOver === false && <QuestionTimer />}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionBody;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/settings/Test.jsx",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/hooks/arrayRandomize.js",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/pages/Nav.jsx",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],[],"import { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Form from '../authentication/Form';\nimport MyContext from '../../context/MyContext';\n\nimport '../../styling/nav.css';\n\nconst Nav = () => {\n\tconst context = useContext(MyContext);\n\tconst {\n\t\temail,\n\t\tsetEmail,\n\t\tpass,\n\t\tsetPass,\n\t\tname,\n\t\tsetName,\n\t\tavatarFile,\n\t\tsetAvatarFile,\n\t\tbirthDate,\n\t\tsetBirthDate,\n\t\tisProfileSaved,\n\t\tsetIsProfileSaved,\n\t\tloginMsg,\n\t\tsetLoginMsg,\n\t} = context;\n\n\treturn (\n\t\t<nav>\n\t\t\t<div className='nav--ul'>\n\t\t\t\t<Form />\n\t\t\t\t<NavLink to='/'>\n\t\t\t\t\t<span>Home</span>\n\t\t\t\t</NavLink>\n\t\t\t\t{localStorage.getItem('token') ? (\n\t\t\t\t\t<NavLink to='/profile'>\n\t\t\t\t\t\t<span>profile</span>\n\t\t\t\t\t</NavLink>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<NavLink to='/settings'>\n\t\t\t\t\t<span>Settings</span>\n\t\t\t\t</NavLink>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\nexport default Nav;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/Counter.jsx",["187","188","189"],[],"import { useEffect, useContext, useState } from 'react';\nimport MyContext from '../../../context/MyContext';\n\n\nconst Counter = () => {\n\tconst context = useContext(MyContext);\n\tconst {\n\n\t\trightAnswer,\n\t\tscore,\n\t\thints,\n\t\tsetScore,\n\t\tselected,\n\t\tindexCounter,\n\t\tsetHints,\n\t\tstreak,\n\t\tsetStreak\n\t} = context;\n\n\n\tuseEffect(() => {\n\n\t\tfor (let i = 50; i <= 55; i++)\n\t\t\tscore !== 0 && (score % i === 0 ) && setHints((prev) => prev + 1)\n\n\t}, [score, setHints]);\n\n\n\tuseEffect(() => {\n\t\tselected === rightAnswer[indexCounter] && setStreak(streak + 1)\n\t\tconsole.log(\"streak is : \", streak);\n\t\tstreak === 3\n\t\t\t&& setScore(score + 20)\n\t\tstreak >= 3 && setStreak(0)\n\t}, [selected, indexCounter, rightAnswer, setStreak])\n\n\n\treturn (\n\t\t<div className='Counter'>\n\n\t\t<label>SCORE : </label>\n\t\t{score}\n\t\t\t\n\n\t\t\t\n\t\t</div>\n\t);\n};\n\nexport default Counter;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionCounter.jsx",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/QuestionTimer.jsx",["190","191","192","193"],[],"import { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nconst QuestionTimer = () => {\n  const context = useContext(MyContext);\n  const { messageB, setMessageB, seconds, setSeconds, gameOver, gameDiff } =\n    context;\n\n  useEffect(() => {\n    function incrementSeconds() {\n      gameOver === false && setSeconds((prev) => prev + 1);\n    }\n    setInterval(incrementSeconds, 1000);\n\n    gameOver === true && clearInterval(incrementSeconds);\n  }, [gameOver]);\n\n  useEffect(() => {\n    // seconds === 16 && setNewQuestion(true);\n    seconds === 16 && setSeconds(0);\n    // message && setSeconds(0);\n  }, [seconds]);\n\n  useEffect(() => {\n    gameDiff === \"easy\" && seconds === 21 && setSeconds(0);\n    gameDiff === \"medium\" && seconds === 16 && setSeconds(0);\n    gameDiff === \"hard\" && seconds === 13 && setSeconds(0);\n  }, [seconds]);\n\n  if (gameDiff === \"easy\") {\n    setMessageB(\"U have 20 secs for each Question !\");\n  } else if (gameDiff === \"medium\") {\n    setMessageB(\"U have 15 secs for each Question !\");\n  } else {\n    setMessageB(\"U have 12 secs for each Question !\");\n  }\n\n  return (\n    <aside className=\"question-timer\">\n      <span className=\"sec\">{seconds}</span>\n\n      <span style={{ fontSize: \"20px\", paddingTop: \"20px\" }}>{messageB}</span>\n    </aside>\n  );\n};\n\nexport default QuestionTimer;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/question/Timer.jsx",["194","195","196","197","198","199"],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Rewards.jsx",["200","201"],[],"import Counter from \"../question/Counter\";\nimport { useContext, useState } from \"react\";\nimport Hints from \"./Hints\";\nimport \"../../../styling/questions.css\";\nimport HighScore from \"./HighScore\";\n\nconst Rewards = () => {\n  return (\n    <div className=\"rewards--section\">\n      <Counter />\n      <Hints />\n      <HighScore />\n    </div>\n  );\n};\n\nexport default Rewards;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/authentication/Form.jsx",["202","203","204"],[],"import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../context/MyContext\";\n\nimport \"../../styling/form.css\";\n\nconst Form = () => {\n  const context = useContext(MyContext);\n  const { email, setEmail, pass, setPass, highScore, setHighScore, setHints } =\n    context;\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"token\")) {\n  //     navigate(\"/profile\");\n  //   }\n  // }, []);\n\n  console.log(\"email:\", email);\n  console.log(\"pass:\", pass);\n  console.log({ email, pass });\n\n  const inputHandler = (e) => {\n    //console.log(e);\n    switch (e.target.name) {\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      case \"pass\":\n        setPass(e.target.value);\n        break;\n\n      default:\n        console.error(`There's a problem. Please check the event listener.`);\n        break;\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const loginHandler = () => {\n    const url = \"http://localhost:8080/auth/login\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, pass }),\n    };\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.token !== undefined) {\n          localStorage.setItem(\"token\", result.token);\n          localStorage.setItem(\"email\", email);\n          setHighScore(localStorage.getItem(\"highScore\"));\n\n          console.log(highScore);\n          setEmail(email);\n          navigate(\"/profile\");\n        } else {\n          alert(result.msg);\n        }\n        //alert(result);\n      });\n  };\n\n  const registerHandler = () => {\n    const url = \"http://localhost:8080/auth/register\";\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, pass }),\n    };\n\n    fetch(url, options)\n      .then((response) => response.text())\n      .then((result) => {\n        alert(result);\n      });\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"email\");\n    // localStorage.removeItem(\"highScore\");\n    setEmail(\"\");\n    //\n    navigate(\"/\");\n    window.location.reload();\n  };\n  const loginBtn = (\n    <button className=\"login--btn\" onClick={loginHandler}>\n      Login\n    </button>\n  );\n  const registerBtn = (\n    <button className=\"register--btn\" onClick={registerHandler}>\n      register\n    </button>\n  );\n  const logoutBtn = (\n    <button className=\"login--btn\" onClick={logout}>\n      Logout\n    </button>\n  );\n  const emailBtn = <button className=\"email--btn\">{email}</button>;\n  return (\n    <form className=\"nav--form\" onSubmit={submitHandler}>\n      {!localStorage.getItem(\"token\") ? (\n        <div className=\"nav--inputs\">\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={inputHandler}\n          />\n          <input\n            name=\"pass\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={pass}\n            onChange={inputHandler}\n          />\n        </div>\n      ) : (\n        emailBtn\n      )}\n      <div>\n        <span>{localStorage.getItem(\"token\") ? logoutBtn : loginBtn}</span>\n        {localStorage.getItem(\"token\") ? \" \" : registerBtn}\n        {/* <button className=\"register--btn\" onClick={registerHandler}>\n          Register\n        </button> */}\n      </div>\n    </form>\n  );\n};\nexport default Form;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Hints.jsx",["205","206"],[],"import { useContext, useState } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\n\nconst Hints = () => {\n  const context = useContext(MyContext);\n\n  const { hints, setHints } = context;\n\n  return (\n    <div className=\"rewards--btn\">\n      <label>HINTS : </label>\n      <span>{hints}</span>\n    </div>\n  );\n};\n\nexport default Hints;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/authentication/Profile.jsx",["207","208","209","210","211","212","213","214","215"],[],"import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyContext from \"../../context/MyContext\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"../pages/Nav\";\n\nconst Profile = () => {\n  const context = useContext(MyContext);\n  const {\n    email,\n    setEmail,\n    pass,\n    setPass,\n    name,\n    setName,\n    avatarFile,\n    setAvatarFile,\n    birthDate,\n    setBirthDate,\n    isProfileSaved,\n    setIsProfileSaved,\n    loginMsg,\n    setLoginMsg,\n  } = context;\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      setLoginMsg(\n        <p className=\"fullScreenText\">\n          You should <Link to={\"/form\"}>login</Link> to see your profile!\n        </p>\n      );\n    } else {\n      fetch(\"http://localhost:8080/profile/get\", {\n        method: \"GET\",\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          console.log(123, result);\n\n          setName(result.data.name);\n          setBirthDate(result.data.birthDate);\n        });\n    }\n  }, [isProfileSaved]);\n\n  const inputHandler = (e) => {\n    //console.log(e);\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"birthDate\":\n        setBirthDate(e.target.value);\n        break;\n\n      default:\n        console.error(`There's a problem. Please check the event listener.`);\n        break;\n    }\n  };\n  console.log(name);\n  console.log(birthDate);\n\n  const saveHandler = () => {\n    // const formData = new FormData();\n    // //formData.append(\"avatarFile\", avatarFile);\n    // formData.append(\"name\", name);\n    // formData.append(\"birthDate\", birthDate);\n\n    // console.log(formData);\n\n    const url = \"http://localhost:8080/profile/save\";\n    const options = {\n      // method: \"POST\",\n      // headers: {\n      //   \"x-auth-token\": localStorage.getItem(\"token\"),\n      // },\n      // body: formData,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ name, birthDate }),\n    };\n\n    fetch(url, options)\n      .then((response) => response.text())\n      .then((result) => {\n        setIsProfileSaved(true);\n        alert(result);\n      });\n  };\n\n  //   const fileHandler = (e) => {\n  //     setAvatarFile(e.target.files[0]);\n  //   };\n\n  return (\n    <div className=\"flex-col\">\n      <Nav />\n      {loginMsg !== \"\" ? (\n        loginMsg\n      ) : (\n        <section className=\"flex-col\">\n          <h1>Profile</h1>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={inputHandler}\n          />\n          <label htmlFor=\"birthDate\">birthDate</label>\n          <input\n            type=\"text\"\n            name=\"birthDate\"\n            placeholder=\"Birth date\"\n            value={birthDate}\n            onChange={inputHandler}\n          />\n\n          <button onClick={saveHandler}>Save</button>\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/HighScore.jsx",["216","217","218","219"],[],"import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport MyContext from \"../../../context/MyContext\";\nconst HighScore = () => {\n  const context = useContext(MyContext);\n\n  const {\n    highScore,\n    setHighScore,\n    highScoreResult,\n    score,\n    setScore,\n    setHighScoreResult,\n  } = context;\n\n  /// set highscore to localstorage\n  useEffect(() => {\n    const scoreSum = Number(score) + Number(highScore);\n    setHighScoreResult(scoreSum);\n    localStorage.setItem(\"highScore\", scoreSum);\n  }, [score, highScore]);\n\n  return (\n    <div className=\"rewards--btn\">\n      <label>High Score :</label>\n      <span>{highScoreResult}</span>\n    </div>\n  );\n};\n\nexport default HighScore;\n","/home/user/Desktop/Final-Project/Final_Project/client/src/components/Popup/Popup.jsx",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/errorMessage/ErrorMessage.jsx",[],[],"/home/user/Desktop/Final-Project/Final_Project/client/src/components/singleplayer/rewards/Correct.jsx",[],[],{"ruleId":"220","severity":1,"message":"221","line":56,"column":6,"nodeType":"222","endLine":56,"endColumn":20,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":12},{"ruleId":"224","severity":1,"message":"228","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":14},{"ruleId":"224","severity":1,"message":"229","line":12,"column":5,"nodeType":"226","messageId":"227","endLine":12,"endColumn":15},{"ruleId":"224","severity":1,"message":"230","line":19,"column":10,"nodeType":"226","messageId":"227","endLine":19,"endColumn":11},{"ruleId":"224","severity":1,"message":"231","line":19,"column":13,"nodeType":"226","messageId":"227","endLine":19,"endColumn":17},{"ruleId":"224","severity":1,"message":"228","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":14},{"ruleId":"224","severity":1,"message":"232","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":15},{"ruleId":"224","severity":1,"message":"233","line":6,"column":8,"nodeType":"226","messageId":"227","endLine":6,"endColumn":13},{"ruleId":"224","severity":1,"message":"234","line":8,"column":8,"nodeType":"226","messageId":"227","endLine":8,"endColumn":21},{"ruleId":"224","severity":1,"message":"235","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":12},{"ruleId":"224","severity":1,"message":"236","line":27,"column":3,"nodeType":"226","messageId":"227","endLine":27,"endColumn":12},{"ruleId":"224","severity":1,"message":"237","line":31,"column":3,"nodeType":"226","messageId":"227","endLine":31,"endColumn":10},{"ruleId":"224","severity":1,"message":"238","line":32,"column":3,"nodeType":"226","messageId":"227","endLine":32,"endColumn":8},{"ruleId":"220","severity":1,"message":"239","line":87,"column":5,"nodeType":"222","endLine":87,"endColumn":19,"suggestions":"240"},{"ruleId":"224","severity":1,"message":"241","line":5,"column":33,"nodeType":"226","messageId":"227","endLine":5,"endColumn":41},{"ruleId":"224","severity":1,"message":"232","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":15},{"ruleId":"224","severity":1,"message":"242","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":13},{"ruleId":"224","severity":1,"message":"243","line":40,"column":5,"nodeType":"226","messageId":"227","endLine":40,"endColumn":13},{"ruleId":"220","severity":1,"message":"244","line":82,"column":5,"nodeType":"222","endLine":82,"endColumn":15,"suggestions":"245"},{"ruleId":"220","severity":1,"message":"246","line":163,"column":6,"nodeType":"222","endLine":163,"endColumn":8,"suggestions":"247"},{"ruleId":"220","severity":1,"message":"248","line":169,"column":6,"nodeType":"222","endLine":169,"endColumn":8,"suggestions":"249"},{"ruleId":"220","severity":1,"message":"250","line":173,"column":6,"nodeType":"222","endLine":173,"endColumn":20,"suggestions":"251"},{"ruleId":"220","severity":1,"message":"252","line":185,"column":6,"nodeType":"222","endLine":185,"endColumn":15,"suggestions":"253"},{"ruleId":"224","severity":1,"message":"254","line":193,"column":9,"nodeType":"226","messageId":"227","endLine":193,"endColumn":11},{"ruleId":"224","severity":1,"message":"228","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"238","line":12,"column":3,"nodeType":"226","messageId":"227","endLine":12,"endColumn":8},{"ruleId":"224","severity":1,"message":"255","line":13,"column":3,"nodeType":"226","messageId":"227","endLine":13,"endColumn":11},{"ruleId":"224","severity":1,"message":"256","line":14,"column":3,"nodeType":"226","messageId":"227","endLine":14,"endColumn":7},{"ruleId":"224","severity":1,"message":"257","line":15,"column":3,"nodeType":"226","messageId":"227","endLine":15,"endColumn":10},{"ruleId":"224","severity":1,"message":"258","line":16,"column":3,"nodeType":"226","messageId":"227","endLine":16,"endColumn":7},{"ruleId":"224","severity":1,"message":"259","line":17,"column":3,"nodeType":"226","messageId":"227","endLine":17,"endColumn":10},{"ruleId":"224","severity":1,"message":"260","line":18,"column":3,"nodeType":"226","messageId":"227","endLine":18,"endColumn":13},{"ruleId":"224","severity":1,"message":"261","line":19,"column":3,"nodeType":"226","messageId":"227","endLine":19,"endColumn":16},{"ruleId":"224","severity":1,"message":"262","line":20,"column":3,"nodeType":"226","messageId":"227","endLine":20,"endColumn":12},{"ruleId":"224","severity":1,"message":"263","line":21,"column":3,"nodeType":"226","messageId":"227","endLine":21,"endColumn":15},{"ruleId":"224","severity":1,"message":"264","line":22,"column":3,"nodeType":"226","messageId":"227","endLine":22,"endColumn":17},{"ruleId":"224","severity":1,"message":"265","line":23,"column":3,"nodeType":"226","messageId":"227","endLine":23,"endColumn":20},{"ruleId":"224","severity":1,"message":"266","line":24,"column":3,"nodeType":"226","messageId":"227","endLine":24,"endColumn":11},{"ruleId":"224","severity":1,"message":"267","line":25,"column":3,"nodeType":"226","messageId":"227","endLine":25,"endColumn":14},{"ruleId":"224","severity":1,"message":"241","line":1,"column":33,"nodeType":"226","messageId":"227","endLine":1,"endColumn":41},{"ruleId":"224","severity":1,"message":"268","line":11,"column":3,"nodeType":"226","messageId":"227","endLine":11,"endColumn":8},{"ruleId":"220","severity":1,"message":"269","line":35,"column":5,"nodeType":"222","endLine":35,"endColumn":53,"suggestions":"270"},{"ruleId":"224","severity":1,"message":"241","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":18},{"ruleId":"220","severity":1,"message":"271","line":17,"column":6,"nodeType":"222","endLine":17,"endColumn":16,"suggestions":"272"},{"ruleId":"220","severity":1,"message":"271","line":23,"column":6,"nodeType":"222","endLine":23,"endColumn":15,"suggestions":"273"},{"ruleId":"220","severity":1,"message":"274","line":29,"column":6,"nodeType":"222","endLine":29,"endColumn":15,"suggestions":"275"},{"ruleId":"224","severity":1,"message":"276","line":12,"column":3,"nodeType":"226","messageId":"227","endLine":12,"endColumn":11},{"ruleId":"224","severity":1,"message":"277","line":18,"column":16,"nodeType":"226","messageId":"227","endLine":18,"endColumn":24},{"ruleId":"224","severity":1,"message":"278","line":19,"column":17,"nodeType":"226","messageId":"227","endLine":19,"endColumn":26},{"ruleId":"224","severity":1,"message":"279","line":20,"column":19,"nodeType":"226","messageId":"227","endLine":20,"endColumn":30},{"ruleId":"220","severity":1,"message":"280","line":39,"column":5,"nodeType":"222","endLine":39,"endColumn":7,"suggestions":"281"},{"ruleId":"220","severity":1,"message":"282","line":52,"column":5,"nodeType":"222","endLine":52,"endColumn":14,"suggestions":"283"},{"ruleId":"224","severity":1,"message":"284","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":20},{"ruleId":"224","severity":1,"message":"241","line":2,"column":22,"nodeType":"226","messageId":"227","endLine":2,"endColumn":30},{"ruleId":"224","severity":1,"message":"241","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":18},{"ruleId":"224","severity":1,"message":"285","line":1,"column":20,"nodeType":"226","messageId":"227","endLine":1,"endColumn":29},{"ruleId":"224","severity":1,"message":"286","line":9,"column":68,"nodeType":"226","messageId":"227","endLine":9,"endColumn":76},{"ruleId":"224","severity":1,"message":"241","line":1,"column":22,"nodeType":"226","messageId":"227","endLine":1,"endColumn":30},{"ruleId":"224","severity":1,"message":"286","line":7,"column":18,"nodeType":"226","messageId":"227","endLine":7,"endColumn":26},{"ruleId":"224","severity":1,"message":"241","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":18},{"ruleId":"224","severity":1,"message":"287","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":21},{"ruleId":"224","severity":1,"message":"238","line":10,"column":5,"nodeType":"226","messageId":"227","endLine":10,"endColumn":10},{"ruleId":"224","severity":1,"message":"255","line":11,"column":5,"nodeType":"226","messageId":"227","endLine":11,"endColumn":13},{"ruleId":"224","severity":1,"message":"256","line":12,"column":5,"nodeType":"226","messageId":"227","endLine":12,"endColumn":9},{"ruleId":"224","severity":1,"message":"257","line":13,"column":5,"nodeType":"226","messageId":"227","endLine":13,"endColumn":12},{"ruleId":"224","severity":1,"message":"260","line":16,"column":5,"nodeType":"226","messageId":"227","endLine":16,"endColumn":15},{"ruleId":"224","severity":1,"message":"261","line":17,"column":5,"nodeType":"226","messageId":"227","endLine":17,"endColumn":18},{"ruleId":"220","severity":1,"message":"288","line":48,"column":6,"nodeType":"222","endLine":48,"endColumn":22,"suggestions":"289"},{"ruleId":"224","severity":1,"message":"241","line":2,"column":22,"nodeType":"226","messageId":"227","endLine":2,"endColumn":30},{"ruleId":"224","severity":1,"message":"290","line":9,"column":5,"nodeType":"226","messageId":"227","endLine":9,"endColumn":17},{"ruleId":"224","severity":1,"message":"276","line":12,"column":5,"nodeType":"226","messageId":"227","endLine":12,"endColumn":13},{"ruleId":"220","severity":1,"message":"291","line":21,"column":6,"nodeType":"222","endLine":21,"endColumn":24,"suggestions":"292"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gameOver'. Either include it or remove the dependency array.","ArrayExpression",["293"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setSeconds' is assigned a value but never used.","'s' is assigned a value but never used.","'setS' is assigned a value but never used.","'Counter' is defined but never used.","'Timer' is defined but never used.","'QuestionTimer' is defined but never used.","'Nav2' is defined but never used.","'setNumber' is assigned a value but never used.","'results' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'answers' and 'setRandomAnswers'. Either include them or remove the dependency array.",["294"],"'useState' is defined but never used.","'Hints' is defined but never used.","'firstCat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'indexCounter', 'setStreak', and 'wrongAnswers'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'categories' and 'setCat'. Either include them or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'cat', 'categories', 'indexCounter', and 'setCat'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'rightAnswer'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'gameDiff' and 'setIndexCounter'. Either include them or remove the dependency array.",["299"],"'ct' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'pass' is assigned a value but never used.","'setPass' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'avatarFile' is assigned a value but never used.","'setAvatarFile' is assigned a value but never used.","'birthDate' is assigned a value but never used.","'setBirthDate' is assigned a value but never used.","'isProfileSaved' is assigned a value but never used.","'setIsProfileSaved' is assigned a value but never used.","'loginMsg' is assigned a value but never used.","'setLoginMsg' is assigned a value but never used.","'hints' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'score', 'setScore', and 'streak'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'setSeconds'. Either include it or remove the dependency array.",["301"],["302"],"React Hook useEffect has missing dependencies: 'gameDiff' and 'setSeconds'. Either include them or remove the dependency array.",["303"],"'setScore' is assigned a value but never used.","'setHours' is assigned a value but never used.","'setHoursO' is assigned a value but never used.","'setMinutesO' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'minutes'. Either include it or remove the dependency array.",["304"],"React Hook useEffect has missing dependencies: 'minutes', 'setGameOver', 'setMessage', and 'setQuestions'. Either include them or remove the dependency array.",["305"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'setHints' is assigned a value but never used.","'useNavigate' is defined but never used.","React Hook useEffect has missing dependencies: 'setBirthDate', 'setLoginMsg', and 'setName'. Either include them or remove the dependency array.",["306"],"'setHighScore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setHighScoreResult'. Either include it or remove the dependency array.",["307"],{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [gameOver, indexCounter]",{"range":"338","text":"339"},"Update the dependencies array to be: [answers, indexCounter, setRandomAnswers]",{"range":"340","text":"341"},"Update the dependencies array to be: [indexCounter, selected, setStreak, wrongAnswers]",{"range":"342","text":"343"},"Update the dependencies array to be: [categories, setCat]",{"range":"344","text":"345"},"Update the dependencies array to be: [cat, categories, indexCounter, setCat]",{"range":"346","text":"347"},"Update the dependencies array to be: [indexCounter, rightAnswer]",{"range":"348","text":"349"},"Update the dependencies array to be: [gameDiff, seconds, setIndexCounter]",{"range":"350","text":"351"},"Update the dependencies array to be: [selected, indexCounter, rightAnswer, setStreak, streak, setScore, score]",{"range":"352","text":"353"},"Update the dependencies array to be: [gameOver, setSeconds]",{"range":"354","text":"355"},"Update the dependencies array to be: [seconds, setSeconds]",{"range":"356","text":"357"},"Update the dependencies array to be: [gameDiff, seconds, setSeconds]",{"range":"358","text":"359"},"Update the dependencies array to be: [minutes]",{"range":"360","text":"361"},"Update the dependencies array to be: [minutes, seconds, setGameOver, setMessage, setQuestions]",{"range":"362","text":"363"},"Update the dependencies array to be: [isProfileSaved, setBirthDate, setLoginMsg, setName]",{"range":"364","text":"365"},"Update the dependencies array to be: [score, highScore, setHighScoreResult]",{"range":"366","text":"367"},[2417,2431],"[gameOver, indexCounter]",[2083,2097],"[answers, indexCounter, setRandomAnswers]",[1952,1962],"[indexCounter, selected, setStreak, wrongAnswers]",[3704,3706],"[categories, setCat]",[3851,3853],"[cat, categories, indexCounter, setCat]",[3926,3940],"[indexCounter, rightAnswer]",[4325,4334],"[gameDiff, seconds, setIndexCounter]",[657,705],"[selected, indexCounter, rightAnswer, setStreak, streak, setScore, score]",[521,531],"[gameOver, setSeconds]",[677,686],"[seconds, setSeconds]",[897,906],"[gameDiff, seconds, setSeconds]",[884,886],"[minutes]",[1265,1274],"[minutes, seconds, setGameOver, setMessage, setQuestions]",[1148,1164],"[isProfileSaved, setBirthDate, setLoginMsg, setName]",[533,551],"[score, highScore, setHighScoreResult]"]