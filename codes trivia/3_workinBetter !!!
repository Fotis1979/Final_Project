import { useState, useEffect } from 'react';
import './App.css';

const App = () => {

  const [questions, setQuestions] = useState()
  const [message, setMessage] = useState()
  const [color, setColor] = useState()

  const answerSubmit = (e) => {

    e.preventDefault()

    const timeOut = setTimeout(newQ, 4000)

    function newQ() {

      fetch("https://the-trivia-api.com/api/questions?limit=50")
        .then(res => res.json())
        .then(data => setQuestions((data[Math.floor(Math.random() * 50)])))
      setMessage("")
      setColor("")
    }
    color &&
      e.target.value === "START GAME" && setMessage("")
    if (e.target.value === questions.correctAnswer) {
      setMessage("WRIGHT ANSWER !!!")
      setColor("green")
    } else {
      setMessage("WRONG ANSWER !!!")
      setColor("red")
    }
  }

  // ** Some experimental function **

  // function DisableNextButton(e) {
  //   e.target.id === questions.id && console.log("YESSSSSSSSSSSS");}
  // ** _________________________ **

  questions &&
    console.log(questions.incorrectAnswers);

  color &&
    console.log({ backgroundColor: `${color}` });

  // ____ *** CONSOLE LOGS *** ____

  //   questions &&
  // console.log(questions);
  // questions &&
  //   console.log(questions.question);
  // questions &&
  //   console.log(questions.correctAnswer);

  //     *** __________  ***

  function randomArrayShuffle(array) {
    var currentIndex = array.length, temporaryValue, randomIndex;
    while (0 !== currentIndex) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex -= 1;
      temporaryValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = temporaryValue;
    }
    return array;
  }

  // U HAVE TO !!! call the function !!! It then resets the array to the shuffled array.

  questions &&
    randomArrayShuffle(questions.incorrectAnswers)

  questions &&
    console.log(questions.incorrectAnswers);

  return (

    <main>
      <h1>Questions</h1>
      <aside>
        {questions &&
          <h2> CATEGORY:
            {" " + questions.category}</h2>
        }<br />

        {questions &&
          <div className="question"> {questions.question}</div>
        }
        <br />
        {questions &&
          <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.correctAnswer} onClick={(e) => answerSubmit(e)}>{questions.correctAnswer}</button>
        }

        {questions &&
          <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[0]} onClick={(e) => answerSubmit(e)}> {questions.incorrectAnswers[0]}</button>
        }

        {questions &&
          <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[1]} onClick={(e) => answerSubmit(e)}> {questions.incorrectAnswers[1]}</button>
        }

        {questions &&
          <button style={{ backgroundColor: `${color}` }} id={questions.id} value={questions.incorrectAnswers[2]} onClick={(e) =>  answerSubmit(e)}> {questions.incorrectAnswers[2]}</button>
        }
        {!questions && <button onClick={answerSubmit}>START GAME</button>}
        <p style={{ color: `${color}` }}>{message} </p>

      </aside>

    </main>
  );
}

export default App;


